cset: moving following pidspec: 12466
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.949761449 seconds)
loading group "string"... done (took 0.601869296 seconds)
loading group "linalg"... done (took 9.629595145 seconds)
loading group "parallel"... done (took 0.196731682 seconds)
loading group "find"... done (took 1.528378538 seconds)
loading group "tuple"... done (took 2.23278634 seconds)
loading group "dates"... done (took 1.482005192 seconds)
loading group "micro"... done (took 0.233315295 seconds)
loading group "io"... done (took 0.575538565 seconds)
loading group "scalar"... done (took 46.332004239 seconds)
loading group "sparse"... done (took 14.298202835 seconds)
loading group "broadcast"... done (took 1.259431813 seconds)
loading group "union"... done (took 12.775816394 seconds)
loading group "simd"... done (took 2.741309287 seconds)
loading group "random"... done (took 10.932502202 seconds)
loading group "problem"... done (took 1832.82816694 seconds)
loading group "array"... done (took 27.213144151 seconds)
loading group "misc"... done (took 1.251530695 seconds)
loading group "sort"... done (took 3.908706724 seconds)
loading group "collection"... done (took 20.070982118 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.756172477 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142408207 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.227073788 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.381332511 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235511291 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.150506631 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174139608 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.599890964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.9880078 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.273495371 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156774463 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.605328136 seconds)
done (took 6.372503862 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259763608 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.39519061 seconds)
    (2/2) benchmarking "String"...
    done (took 0.180647784 seconds)
  done (took 1.185609034 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074518389 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.184750449 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11776191 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09829048 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112027389 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110775958 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111625456 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111506738 seconds)
  done (took 1.458249175 seconds)
done (took 3.597392707 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.569823781 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880570378 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544101747 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.183274445 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.205629982 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.186521334 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.325492075 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158651206 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11248017 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110525054 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.225210793 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.356018864 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.529599891 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.030501931 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106866889 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111144904 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.095173235 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700119877 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083586085 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.135986393 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.612506729 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114031743 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11412391 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124811277 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203834245 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135182137 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158392225 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107951023 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666472802 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102983327 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233906477 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084878412 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175905856 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.254704718 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.085796461 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106421595 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662316159 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183040275 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116743095 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100738045 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662967678 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079845627 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245865347 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104492205 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.097327905 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191918169 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120714311 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097471205 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098601916 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086812924 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157247077 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460728933 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104625898 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171016404 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107101358 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688898384 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098938493 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154556622 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140346435 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107669886 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080259992 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112881005 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15138042 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113027157 seconds)
  done (took 20.144371897 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1637328 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170433154 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090999276 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141852463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147624209 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094469604 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082164882 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091660676 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129362566 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191728414 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140793655 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174200457 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088957752 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08511735 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143126509 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251438847 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120951842 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121264985 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084010857 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106121531 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139751283 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097868573 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110082746 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110974354 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168535383 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202344412 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109035007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122025192 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099387789 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116933021 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138506373 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148173977 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088525349 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083590495 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187211297 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119220482 seconds)
  done (took 5.290403654 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224791229 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1169863 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241174348 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.186463052 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196591208 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148692557 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16821785 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142751641 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305908608 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.277215565 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181470481 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113128435 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112071212 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091908337 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080046249 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092507395 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.779764902 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185757085 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150271216 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15171896 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103421414 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095534963 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38342129 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086742851 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096086047 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086333882 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093135606 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221764095 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088020383 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.402493432 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12068745 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107323579 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127135098 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19476531 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134254583 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14457956 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086408544 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095828243 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224915058 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110428209 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075393307 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126931872 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130526308 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135565325 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096882411 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.11078058 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.236358827 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097491183 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082120217 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120755849 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.186969508 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.204121309 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141104314 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077868795 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.403109889 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095282209 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104212732 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09636174 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080040256 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.297389972 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141773259 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096415972 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075754096 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10161461 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092002169 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.435176741 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109040739 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.002429344 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082892081 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.172741925 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09907192 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10400303 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10001384 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085179603 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116047882 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078477627 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093920044 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09314595 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078296542 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098780568 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118277067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085997776 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093633287 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145298296 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.120315131 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113367602 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122765861 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083916939 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093239738 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125059834 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07977594 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097473582 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081043198 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.189342997 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0889535 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12132306 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098266944 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140050164 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079691817 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.225134269 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083009855 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123963663 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099348753 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125202291 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107170016 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094937703 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097778311 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076787206 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095091233 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145398343 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096577115 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077550737 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098845561 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111506553 seconds)
  done (took 24.625094367 seconds)
done (took 50.669646504 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.506568511 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119245115 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.120740898 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118450899 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103909329 seconds)
  done (took 1.66190934 seconds)
done (took 2.325245075 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.403417737 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202003203 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121155312 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.199792087 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105574481 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.209361397 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.20464614 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105524898 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.23679404 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099993113 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197663522 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099297915 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08951571 seconds)
  done (took 2.968404948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0998584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121319457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083691459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113816244 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0770286 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113543265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110900959 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117517496 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112879822 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089154406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093159608 seconds)
  done (took 1.795012352 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095418983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116764866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083817665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110134801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077850413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1098814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093984208 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120594405 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108460813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090232263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094054316 seconds)
  done (took 1.764767498 seconds)
done (took 7.184010668 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.167940759 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.665276111 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.149619807 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203236941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.391777671 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.245169932 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.594606691 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165216827 seconds)
  done (took 12.470344283 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.174403121 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085476859 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103644898 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100675797 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087138325 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100808816 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085816692 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100883699 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085725375 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100241674 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101354719 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086759318 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099920582 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087005808 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099844445 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086992332 seconds)
  done (took 2.315468563 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120645908 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12109721 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108652288 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112849429 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091105401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106087453 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106910796 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092416967 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103875436 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105689525 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098482562 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111691068 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10969324 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089400984 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108145452 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112832658 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090808069 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107812607 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107708947 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095111577 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1122141 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105986297 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097409237 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111502455 seconds)
  done (took 3.315386265 seconds)
done (took 18.76306301 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17575357 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098422318 seconds)
  done (took 0.94091694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150427506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152629343 seconds)
  done (took 0.974402245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113461025 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098194478 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13994586 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116638798 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083962318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097085902 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134505329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097436814 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08460593 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096905855 seconds)
  done (took 1.737124056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088652954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101085806 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.095530598 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.162257299 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.096269209 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103205954 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088593789 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103335741 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102116336 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08586596 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105285258 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12245845 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091081677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123792345 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102495911 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107738478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.097352288 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104193136 seconds)
  done (took 2.557423623 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083698226 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098628058 seconds)
  done (took 0.859186081 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08846368 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097562876 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088859463 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10268804 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096971799 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085260532 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097536729 seconds)
  done (took 1.331706379 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.568163355 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.279112186 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.387267497 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122903697 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147141301 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386119002 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.163266032 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114781657 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101778528 seconds)
  done (took 2.991514944 seconds)
done (took 12.064819837 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090573174 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.236320517 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629114122 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123023714 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084627189 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155033083 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.312824558 seconds)
done (took 2.312622687 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362439553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158017292 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089749927 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09533099 seconds)
  done (took 1.382215585 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0779696 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106074057 seconds)
  done (took 0.867615375 seconds)
done (took 2.938649411 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081748672 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094175163 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081254396 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094169546 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.081042181 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094464257 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0810362 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127294985 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080645382 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097058759 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094550581 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08075923 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095015763 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080659771 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094100562 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081413394 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09466741 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082421903 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094122314 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08154716 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094802192 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081236162 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094826986 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081107409 seconds)
  done (took 2.86422875 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105607326 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100143386 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103293088 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088091217 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105127454 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087978367 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102575247 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099089504 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087824146 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098111055 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103548924 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089932555 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098286355 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088807632 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099108217 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102947561 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089017417 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0996686 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083482592 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089328983 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103525215 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084546813 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102955871 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101923406 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08944814 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102364082 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097460213 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085386335 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10257772 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08799293 seconds)
  done (took 3.58001929 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090913639 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092048728 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079464957 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104788935 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079403949 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096404747 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078119233 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094333141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080613818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093870043 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079744228 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093280759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078441818 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094976503 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080204469 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101385963 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115008116 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078347741 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092985958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079858324 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098488062 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078870938 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096633905 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078109099 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09302481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078680365 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093783853 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077475262 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094763026 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078652128 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099987871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099893344 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079599423 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107283648 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085332634 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093206611 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08768619 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092832076 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07968151 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095612214 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078646278 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093164592 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078438381 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106518505 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097026529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.079971023 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09212124 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0805145 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093478782 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083149975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093119101 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079585152 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095891172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081570698 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100065618 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077734404 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094870478 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078207293 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095076658 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079384611 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092920838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092949317 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08605687 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094866695 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106325088 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106184128 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079477122 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095760756 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098020455 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088835206 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095004955 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099881614 seconds)
  done (took 7.159843752 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085877611 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109314076 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083481401 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098814844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080080194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095758404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103855099 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080294973 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100129939 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100866102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096573163 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082772154 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100267163 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09839671 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080546156 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09828395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091112079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095257309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079412895 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099474177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095650821 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091224272 seconds)
  done (took 2.741581376 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242041933 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105660693 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.268685885 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115580206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121742043 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099707315 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10365093 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105032252 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087864856 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108494694 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110385421 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087674898 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120176918 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110001193 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108257258 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095075485 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103413837 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109143526 seconds)
  done (took 2.897183908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098785783 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100813701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123695747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085854694 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100765333 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086346285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108700879 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116342337 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085275058 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101178749 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110155837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084922049 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099860998 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085264063 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100397841 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085386127 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101049601 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100544962 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095270593 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108773105 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108622703 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094373057 seconds)
  done (took 2.875964613 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10057503 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100356505 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137156763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089428539 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097117756 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080248572 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106468828 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099663359 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092304066 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099558209 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085461258 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096061713 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108986488 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085975915 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108150673 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08542827 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099408618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102108077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084727581 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095802012 seconds)
  done (took 2.652339898 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177741314 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100180521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116274148 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129757968 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100325972 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114894059 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129272027 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115618357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102130818 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131733415 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115131961 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100199353 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128083765 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12406481 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100095215 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126743417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127886701 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128150297 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100115327 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115493644 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130332322 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115326437 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112569715 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11569053 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114609465 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100223514 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115180255 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123293112 seconds)
  done (took 4.007156476 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082067752 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096367599 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082200029 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096981544 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082772017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097755446 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082741981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096775351 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082858353 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096828602 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082400788 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096011632 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082428489 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097182734 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08344056 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097025326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081950946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098761926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082525682 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097749968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081978919 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09800116 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082397839 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097340327 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082262528 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097365411 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082485147 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098564214 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083288495 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09763579 seconds)
  done (took 3.396976323 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098744814 seconds)
    (2/2) benchmarking "in"...
    done (took 0.127809332 seconds)
  done (took 0.927116355 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083941907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118440166 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079971549 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104826963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108851138 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084235706 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110521708 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093309413 seconds)
  done (took 1.485477679 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15410825 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.153589441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089672294 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11354704 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.152081438 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.14675576 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170584425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08806157 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104479709 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096942419 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148040206 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079681786 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105454294 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085615365 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105328427 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111483696 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081786052 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109906833 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091312536 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101185021 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104925055 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098868243 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109570935 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111889953 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082621747 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109263011 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095118085 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.112833173 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100567284 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093251931 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.103543849 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078327794 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102905761 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103989667 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082244924 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.150125156 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116898795 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085402108 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.105983644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104157274 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094170978 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097818093 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092077283 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103005953 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109746798 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088989157 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105498437 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081370659 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096462696 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08287565 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096887411 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100172017 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080575573 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106064672 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089645822 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117141421 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101388413 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084055262 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101654586 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082668625 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103676623 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100005423 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092423696 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103130272 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090404929 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106020585 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104719577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080803175 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095703947 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081258643 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.1059803 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122070178 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093138316 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106909606 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105769057 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08187066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102073855 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091006531 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10560886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10777923 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088770335 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108359975 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091683258 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100623332 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.099033573 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09166297 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100501894 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086048088 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096901931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119860931 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086168773 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097391053 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089828057 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108144894 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083742205 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103593587 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080420132 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106418235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094988734 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089147502 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106690847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086756968 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111119708 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105629074 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08983336 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105986106 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142643225 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08587553 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101786286 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095766071 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090809943 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097087692 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089465301 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095623622 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085987679 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101487275 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105321207 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092732214 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102986144 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089022365 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108194468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109221392 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086570407 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096555187 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08559997 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105493589 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093210401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111017053 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102996565 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0825133 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098287176 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090642014 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104227935 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104663419 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089302616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102433288 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080447456 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098836217 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089053264 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108086532 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099330423 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087955316 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107888786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104140275 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086903676 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107131871 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082675815 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097171787 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106866433 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085231098 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096584866 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093472041 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100915092 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086587659 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102340221 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109869015 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085595196 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105998745 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086756172 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106212975 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090034114 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096969771 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103287558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085542638 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112005278 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084284859 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098105555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081218114 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107393007 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097305769 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087353069 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096380884 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085525224 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105801107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082320558 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103876879 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100732536 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102152559 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114400556 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089796041 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105199661 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108200607 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.0887878 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104800862 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087570769 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107764001 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105360226 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091582101 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105036267 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090080752 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101565942 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081823831 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104744086 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107200607 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080557498 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098822371 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080092781 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105890155 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093363915 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106276717 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106011473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086842261 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104523701 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093844242 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101612214 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104414903 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080113505 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105121957 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095502498 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108153626 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091140943 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110788916 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102630979 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083762072 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110477865 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085063291 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106245383 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081662579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098085429 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096134219 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.090124662 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10338882 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083397672 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097380876 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09098603 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109142905 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101922925 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081353038 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10514946 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096709485 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100363232 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10575054 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086112876 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105773203 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118490152 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081068843 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100847849 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095668905 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105894204 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080045807 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106132194 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10252372 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084005539 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103474227 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086820358 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102877941 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092586583 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103767365 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096243173 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085114554 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102484819 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081962215 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099250724 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090931513 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104194265 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101377977 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098774683 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10702705 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089873283 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104807846 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103623875 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091316432 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10739359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085971258 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107148842 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100261685 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082158913 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102622383 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080694121 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098799241 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085323949 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105798161 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086064562 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104364203 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10444848 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092551809 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102212611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089475093 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126308572 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100006646 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096202998 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086211659 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10537426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085190394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102232902 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081424138 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109007403 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104780327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092807994 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102711407 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081188864 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105908401 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084891556 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109910303 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105945585 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090894674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101705662 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089242989 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103336033 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112247212 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082385447 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110827593 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087275412 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106521381 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102051538 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087984455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101522255 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082007499 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102452871 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107997948 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087627902 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105471509 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088709674 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103435814 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08479992 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100676162 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108782322 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088229385 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108096197 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080956473 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098227095 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081410734 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106973035 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108703067 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090807746 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100673872 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087353273 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110207137 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089367752 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099854128 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109908955 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094663225 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108084583 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096316102 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098178474 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102376545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098290035 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098014572 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087383163 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100308525 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081223068 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109798945 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106892926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092428177 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104393713 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081526268 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098265131 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091076773 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103704344 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080673109 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101365017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106234297 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083617081 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103910031 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090053297 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106055201 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09056798 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10745806 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104222921 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086863605 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106655265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081266859 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0986333 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080288666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104104267 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108237668 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082853194 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097953066 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08848464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103404467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086182126 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105647512 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101351022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092603412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105569122 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086617567 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112670277 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081385841 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103904455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105299023 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08937421 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097898571 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087186693 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104453316 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108249315 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09208997 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105843876 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089914127 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105911287 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083335309 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105516419 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10623223 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09062656 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098693261 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.09216405 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111118118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083661709 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104250018 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103748798 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083389061 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104972787 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090896795 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104598388 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110239488 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091589062 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103514942 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091567481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107358594 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087661291 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108667027 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101005762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092383429 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098791279 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093531333 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106032859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107435648 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085680292 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098567682 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089431731 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106534661 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088498665 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.1099022 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108046089 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082725766 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098567723 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084421299 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103223338 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110624697 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094490107 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104231469 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088002195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100909168 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082118382 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108523564 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099786775 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085031277 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106913505 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091968969 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103668965 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08355521 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10654892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10815995 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092430793 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106619645 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081892695 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106949197 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109673653 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087743524 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101131982 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085544776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109520893 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104915115 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086077524 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099573852 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096851471 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109939937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108053018 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085868218 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107417624 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086478376 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.10013892 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108662038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087206946 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107325364 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087582723 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107579107 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114446381 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081480572 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102864374 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098374399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10612043 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109619405 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083540946 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104172559 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093502549 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109125825 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083061373 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099088922 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082374453 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104082774 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099005477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.084330298 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117941788 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091664011 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105191838 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104801358 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088568467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100942004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083685287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099469567 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092617498 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103092422 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111761199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082269339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099214999 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08397443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107605651 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087290068 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107439464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081473643 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101378488 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100501563 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088161272 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112428348 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089267046 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107804152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104970061 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087505062 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10131739 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095527582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100052003 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088438139 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117279453 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10869916 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089961761 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108975056 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1117427 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090981445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101723213 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.092092893 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105965291 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104636494 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.093554625 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108597736 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105356264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105250811 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099472103 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089312386 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103754293 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083552143 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113715105 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108170146 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.093097056 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106133722 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086189818 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111129457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112307476 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089706668 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104930738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088547767 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107098814 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086523797 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106010238 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102163597 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092648409 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109327391 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090596082 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11158579 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082115773 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116954994 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113493902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092065612 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099557493 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081913351 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099778522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082915546 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109914914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10014318 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088208389 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104897497 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08881542 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107235012 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090234404 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104698929 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109044545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090123363 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099271068 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090945959 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104701455 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090233884 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099518788 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106914346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09264436 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10915986 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095411023 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109040789 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103773719 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08634349 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108361965 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084671277 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107373242 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088534055 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102641098 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082093984 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107649504 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109524613 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088751481 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108950362 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093817851 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104460983 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10869815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09454045 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.1003411 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083508204 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10826834 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083557402 seconds)
  done (took 59.420600402 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.161368934 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092108259 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101539761 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08384092 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133134126 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103400375 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084616204 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102921463 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086086234 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119016319 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100499074 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084468204 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127265332 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138011035 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131547376 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118844387 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083503678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102344153 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083419174 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103270954 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128179106 seconds)
  done (took 3.018664201 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110477969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122616588 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122895514 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12478259 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09583788 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119884654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12158368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120060508 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123305773 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099680168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123973941 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119407992 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115760761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099269755 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116911028 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116341749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125059593 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097606872 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120092403 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121575133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116283518 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103699998 seconds)
  done (took 3.28425149 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094957582 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105813116 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092517673 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.103445007 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090187921 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104983216 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09594656 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103773162 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11208609 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087923762 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.101459734 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087893568 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110331398 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.085505766 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101619401 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085666207 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113582017 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107212248 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091189455 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.103958536 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129877919 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087172482 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104952915 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084984207 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116534705 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090770937 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108619141 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089705058 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102336633 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088689383 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104406356 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106360142 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09222804 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.102206838 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.083557249 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107517891 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089635644 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10536245 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085807158 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.108856631 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10381244 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092117254 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113068596 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086924162 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103692712 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106643617 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09041215 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.103042801 seconds)
  done (took 5.523272958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128068214 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158770621 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095538675 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130864101 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126613677 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122001759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109462074 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148905666 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.092440694 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.11044265 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129237642 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128505564 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097985309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118641068 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11353607 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.095073294 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114977041 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09503333 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118428325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112159007 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100045525 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.117293785 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127092371 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125650107 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114603181 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093099361 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.114292099 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100405968 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127394245 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120024797 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115669063 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100420165 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1264076 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115812928 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110163407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.097930628 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130922354 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112266616 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09370934 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10847888 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114738885 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100959737 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113054554 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129309996 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095428986 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116417406 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111455588 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090927625 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128843827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.114887242 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105006146 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129954476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115399211 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11160851 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102012191 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128803035 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112192785 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.092461078 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11346514 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126833989 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093310772 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114628352 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129448989 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114847026 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.104319114 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129645908 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115133415 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113640469 seconds)
  done (took 8.689770498 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102215182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.134022682 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127810975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127152718 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098039842 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114219988 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114494672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.098118744 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11487816 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121886025 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096042311 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223383579 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089566093 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123715317 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114943859 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11472711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.097739872 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115616472 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114669973 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097988251 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115790634 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126570848 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096754833 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128004522 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130386873 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107738494 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097002847 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115635923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127220569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114108485 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13055494 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097474197 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11444663 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128215717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131151645 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.098064332 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104330629 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114072441 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.097471333 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114807749 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088310919 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12760965 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116005135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107888153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09768804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115336208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128294703 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13081588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.103640651 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123110905 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114683654 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128084995 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097419332 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115566356 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127881961 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137376014 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127951806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128760489 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096970267 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1291094 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12799972 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138267585 seconds)
  done (took 8.000187853 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087624349 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104624892 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08745847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10480832 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088322651 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105204985 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087566159 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10442386 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08648371 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104042322 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088502158 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104119272 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088076569 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105528736 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08779221 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104583747 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08772886 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104882249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087309711 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104188247 seconds)
  done (took 2.685599115 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100999502 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127971866 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089899043 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118149544 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109911277 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098411748 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108346977 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108232862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092025105 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109395162 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118629377 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102406404 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109088417 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117158784 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102567037 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117812395 seconds)
  done (took 2.493845689 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114203861 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121668734 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.165794573 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112283006 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087951217 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.117554946 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105496879 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.087761415 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103884465 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096786997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11261576 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098091459 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108142536 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102878136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.09139066 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114151777 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086352464 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112568655 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087213522 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185276603 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097509304 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112276143 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08947747 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108803262 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110877108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096998759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.115450233 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105410175 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08906333 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107469348 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.094062701 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118971151 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104657989 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.096376242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10328611 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088094182 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106066745 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088149002 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113331454 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105167852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085571584 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111114867 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08786033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106899013 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086610744 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107236066 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103566761 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09797176 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110088068 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092945569 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107452568 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115771486 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.096393828 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119227643 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116791541 seconds)
  done (took 6.57525762 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104801554 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110097967 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095974778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104521803 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110414007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098833394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111358797 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094077911 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110765735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084749904 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112259324 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110182336 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094136258 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109532705 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093163985 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110794141 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102497306 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094095128 seconds)
  done (took 2.619474366 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098281903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107798794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09781378 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108187138 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090416611 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108972721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085407269 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105839886 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103543868 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09201844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107675513 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091521475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104223099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090035296 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108842012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090462824 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110035604 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103867117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091698311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104049867 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092032954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103506858 seconds)
  done (took 2.969308727 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.107540121 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172022674 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121990065 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.181654427 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11016608 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088974594 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121319802 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.109612601 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109939658 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109533946 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.107724963 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090021286 seconds)
  done (took 2.202312164 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119346847 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149221778 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10578126 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091378828 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120213037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114299431 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09725601 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114770263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126711849 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131420712 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097659954 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125931563 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125212445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128932978 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121831258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103445982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115512233 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114815539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092457604 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138292772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115304614 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128365019 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098160774 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116139208 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114756009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110127638 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127633571 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13185909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115238491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126355354 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104475858 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115641687 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127347099 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131659182 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090946129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127516914 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116235722 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139531029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121431618 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110218452 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110087764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12275336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108701652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125735978 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126719438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115984057 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122808813 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098166637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116178213 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146950239 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122363459 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128768943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104606127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126865221 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126390836 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147149757 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133047234 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128414291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102668459 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133368368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128836774 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122857422 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129113208 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132517417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102861349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132601877 seconds)
  done (took 8.679083347 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136783128 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109997651 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116401941 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134262398 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109654511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116797945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115456158 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096268682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116842628 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110722481 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168970521 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097747462 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129183043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128813497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116002001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098000561 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118048696 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127674455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111376536 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148378375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099715262 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128493945 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129784139 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130438439 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132382769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12203511 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098396333 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116639831 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11622088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099286319 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123973207 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115622596 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110238368 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109315751 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127690629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11505892 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098330495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124127296 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116454617 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103778301 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129040868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14041407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116003617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115772209 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113853442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115681194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116023379 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093680374 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116879036 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112580976 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114447495 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132484661 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131429413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12936982 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117032063 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096756647 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118474467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116583902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096269404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12363755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128857775 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11575991 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150039124 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096882846 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117848045 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129256471 seconds)
  done (took 8.595097109 seconds)
done (took 160.02768696 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151902618 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.17566669 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148424026 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148589404 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104351637 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119429905 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138842191 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151342997 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084095102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104558208 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083665108 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10934992 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169317714 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0845265 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103350782 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08938853 seconds)
  done (took 2.752107883 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.212156586 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308728209 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126996541 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089626783 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115452502 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107031973 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090671876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110810964 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086744038 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119964152 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107034484 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089601054 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119113098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106541058 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086984081 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10715392 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100382081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107012197 seconds)
  done (took 2.97881574 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113906739 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145987615 seconds)
  done (took 1.045438582 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125441839 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195287603 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320817792 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167590592 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.137294846 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133119641 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168321757 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.107581121 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205216331 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134275184 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.134094506 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112311758 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138084507 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100618504 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124057804 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111518871 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122834649 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122583381 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119447866 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096717169 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135795051 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114189167 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.100323541 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.122089388 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196199507 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133806009 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114389751 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096015986 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114025457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100409838 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119615953 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132045393 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133026251 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185662761 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119634392 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200226386 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104045749 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112545819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.101317798 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112890756 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116614218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115448984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111741884 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.1118251 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113170712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103545386 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114870177 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.094602511 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123057065 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126109775 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.120885255 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099570412 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.201217144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124211965 seconds)
  done (took 7.885903813 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.92824335 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136024248 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112684067 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.061967352 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144038636 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126551486 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.916136077 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13746544 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260863954 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.945769796 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111690875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125444438 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264077006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274302955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.209257468 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37462116 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.785632332 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104857195 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143481358 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162073186 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117904528 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141143109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112391404 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458553161 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093903052 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110208156 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096045842 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122510172 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199970031 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090358745 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112798994 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202466557 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.308627481 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225829053 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094204521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10935255 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088091859 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.209955504 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297515614 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246707439 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182248021 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084907607 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109569715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123847558 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132245479 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087318031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205588811 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195708469 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.215155354 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095056286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123165838 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118458448 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10293756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.202971507 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.087106083 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.392250896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37928704 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090020781 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120440525 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129955564 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294833674 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08972839 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.279466981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120857034 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.243216417 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109520189 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813679336 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186558894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109063832 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118413614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099582327 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11602019 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121718135 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178131536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394827609 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125997584 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094714785 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108849667 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266800004 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090056749 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1085525 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184305308 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113216822 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100087093 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128382045 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124342447 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.193785998 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.291746496 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124900889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099652934 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115568339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122940747 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094104186 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.253905061 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253902565 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178504724 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.257284601 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103687428 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207231281 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185618764 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124054653 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.212606704 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098924434 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130347843 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125060901 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248902996 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15322751 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110235689 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096115161 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117761214 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156092648 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112747691 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098870548 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.209773531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481037337 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.20823789 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089352272 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115025141 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119280412 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185765898 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117134788 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294909025 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100878736 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.210836536 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09795699 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106316237 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118545627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.186673801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125105222 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120097411 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104573326 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119366172 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.271142413 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274440538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107963364 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263144485 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189427407 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121147565 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194963801 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120394948 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.210390996 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101626461 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123673392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113722638 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813167033 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105211756 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119804547 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115660699 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202283174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088938644 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111591314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088607068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10639219 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846887647 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091928617 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10810627 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.090659696 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12134718 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119486845 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116183861 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09655838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.203044551 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268721589 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12287414 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09835256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110401814 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18116225 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115119023 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08939162 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110878912 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090184057 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12136881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114489229 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091664183 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21663895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179551331 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255508597 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573938489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109111879 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089565266 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264523368 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110756784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343522869 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118550255 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26297829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188417066 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107436002 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373294617 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211431415 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202332511 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093070881 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.214759091 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087706507 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118058271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182611508 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111412015 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117452868 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183178198 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129122288 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125676835 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.197618712 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090828375 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.274661209 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087108546 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.210816892 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095507277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123786074 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347516275 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110967892 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111733107 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.205249647 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113685527 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091377582 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.758146218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090174421 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122744253 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120672232 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259747356 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186874903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119663354 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118435254 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1233819 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183710502 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232323974 seconds)
  done (took 47.348327923 seconds)
done (took 62.79165422 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321512305 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278154217 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.3406896 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231356244 seconds)
  done (took 2.067377036 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.227468826 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161490695 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.190211182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109442888 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.200766451 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109133423 seconds)
  done (took 1.810312523 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.537764142 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.435590574 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346880903 seconds)
  done (took 2.137120568 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264875427 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.293473349 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.364338789 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.522860485 seconds)
  done (took 2.371291784 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.25184151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133429405 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126330778 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.180295735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219841413 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.218800155 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150265698 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.167178965 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.11559952 seconds)
  done (took 2.430837417 seconds)
done (took 11.633586079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.318624727 seconds)
    (2/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.301499022 seconds)
    (3/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.200368868 seconds)
    (4/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118379888 seconds)
    (5/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097061228 seconds)
    (6/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.243702554 seconds)
    (7/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.345052238 seconds)
    (8/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.216892765 seconds)
    (9/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.32064345 seconds)
    (10/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120426433 seconds)
    (11/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.330401626 seconds)
    (12/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176224065 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.165053025 seconds)
    (14/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.221929932 seconds)
    (15/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130084351 seconds)
    (16/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116985039 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099202217 seconds)
    (18/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.328679888 seconds)
    (19/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150656377 seconds)
    (20/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.101751363 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.191929909 seconds)
    (22/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.214283113 seconds)
    (23/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.198093594 seconds)
    (24/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.200358111 seconds)
    (25/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.334552502 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127317859 seconds)
    (27/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.199625911 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.131518801 seconds)
    (29/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.267458491 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10905745 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11813752 seconds)
    (32/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080363824 seconds)
    (33/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130324074 seconds)
    (34/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.079841517 seconds)
    (35/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101179597 seconds)
    (36/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110394094 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116264802 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.258746997 seconds)
    (39/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130228722 seconds)
    (40/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114328087 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132586406 seconds)
    (42/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.163562387 seconds)
    (43/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.275364136 seconds)
    (44/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117613735 seconds)
    (45/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099155355 seconds)
    (46/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120500077 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098626393 seconds)
    (48/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122088516 seconds)
    (49/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.278738058 seconds)
    (50/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215704161 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162745658 seconds)
    (52/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.194655601 seconds)
    (53/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.2116861 seconds)
    (54/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203284654 seconds)
    (55/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.213532319 seconds)
    (56/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.250780502 seconds)
    (57/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191185097 seconds)
    (58/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125642064 seconds)
    (59/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.260901309 seconds)
    (60/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119641955 seconds)
    (61/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.196215843 seconds)
    (62/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144781027 seconds)
    (63/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119961725 seconds)
    (64/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093075622 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.147558447 seconds)
    (66/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108587643 seconds)
    (67/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.323448586 seconds)
    (68/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141667938 seconds)
    (69/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081409233 seconds)
    (70/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118927457 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095499501 seconds)
    (72/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101281019 seconds)
    (73/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135037617 seconds)
    (74/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094429255 seconds)
    (75/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.086423507 seconds)
    (76/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.127860507 seconds)
    (77/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137096389 seconds)
    (78/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.129262099 seconds)
    (79/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215983051 seconds)
    (80/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.156405489 seconds)
    (81/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133385672 seconds)
    (82/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.169012306 seconds)
    (83/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.161078009 seconds)
    (84/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101722207 seconds)
    (85/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.138720026 seconds)
    (86/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.185793664 seconds)
    (87/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11442386 seconds)
    (88/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079903819 seconds)
    (89/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.113790425 seconds)
    (90/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.22487851 seconds)
    (91/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.110778765 seconds)
    (92/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118623291 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115611415 seconds)
    (94/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.144914154 seconds)
    (95/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.101251897 seconds)
    (96/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.106945276 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11737058 seconds)
    (98/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.166063161 seconds)
    (99/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.079768979 seconds)
    (100/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092555431 seconds)
    (101/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.101963897 seconds)
    (102/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079820658 seconds)
    (103/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13566441 seconds)
    (104/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116822489 seconds)
    (105/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.212114624 seconds)
    (106/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.150451184 seconds)
    (107/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.100578469 seconds)
    (108/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153648647 seconds)
    (109/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.126618629 seconds)
    (110/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080009347 seconds)
    (111/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132213089 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115940426 seconds)
    (113/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080379034 seconds)
    (114/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.152499548 seconds)
    (115/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079470197 seconds)
    (116/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.113312 seconds)
    (117/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.199773744 seconds)
    (118/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108626664 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.151226144 seconds)
    (120/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079791942 seconds)
    (121/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10286583 seconds)
    (122/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100244494 seconds)
    (123/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110871943 seconds)
    (124/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11994644 seconds)
    (125/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096707419 seconds)
    (126/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.100585154 seconds)
    (127/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089880659 seconds)
    (128/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195870978 seconds)
    (129/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127809697 seconds)
    (130/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172373633 seconds)
    (131/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101974166 seconds)
    (132/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079918244 seconds)
    (133/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.167621061 seconds)
    (134/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195477756 seconds)
    (135/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108848083 seconds)
    (136/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119639206 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118926723 seconds)
    (138/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.080025147 seconds)
    (139/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.117066495 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096179436 seconds)
    (141/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143363819 seconds)
    (142/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080749729 seconds)
    (143/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119873963 seconds)
    (144/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.181760723 seconds)
    (145/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080744858 seconds)
    (146/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135822448 seconds)
    (147/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098154363 seconds)
    (148/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.214117468 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.158853237 seconds)
    (150/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115941301 seconds)
    (151/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097034269 seconds)
    (152/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.124190702 seconds)
    (153/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080721821 seconds)
    (154/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.099837298 seconds)
    (155/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098141998 seconds)
    (156/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.116272113 seconds)
    (157/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097693215 seconds)
    (158/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100243028 seconds)
    (159/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081478557 seconds)
    (160/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.168992137 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.130336966 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126889928 seconds)
    (163/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12929509 seconds)
    (164/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080845376 seconds)
    (165/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129893867 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095775028 seconds)
    (167/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.165983283 seconds)
    (168/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102081871 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097206838 seconds)
    (170/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.194396763 seconds)
    (171/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.125303895 seconds)
    (172/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.112378812 seconds)
    (173/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.134155681 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118345936 seconds)
    (175/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081936228 seconds)
    (176/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.179025449 seconds)
    (177/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12031232 seconds)
    (178/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.100138958 seconds)
    (179/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124376366 seconds)
    (180/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099877128 seconds)
    (181/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.102375783 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10693641 seconds)
    (183/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.107472429 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088696198 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117571356 seconds)
    (186/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087514374 seconds)
    (187/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111109318 seconds)
    (188/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080200921 seconds)
    (189/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.101839856 seconds)
    (190/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079853693 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117837386 seconds)
    (192/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.079832736 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.102696274 seconds)
    (194/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081875941 seconds)
    (195/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.127229667 seconds)
    (196/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.080870493 seconds)
    (197/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110031657 seconds)
    (198/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08128775 seconds)
    (199/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080948137 seconds)
    (200/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111830805 seconds)
    (201/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109863131 seconds)
    (202/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10190558 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117459291 seconds)
    (204/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082425024 seconds)
    (205/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118331159 seconds)
    (206/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081606378 seconds)
    (207/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.10083578 seconds)
    (208/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081814529 seconds)
    (209/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132760094 seconds)
    (210/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.111994435 seconds)
    (211/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.103372876 seconds)
    (212/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081257257 seconds)
    (213/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.129236867 seconds)
    (214/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081034859 seconds)
    (215/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102111676 seconds)
    (216/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.08005267 seconds)
    (217/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.100951106 seconds)
    (218/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.108146103 seconds)
    (219/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.100495353 seconds)
    (220/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.125519539 seconds)
    (221/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.132838887 seconds)
    (222/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080618884 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118033289 seconds)
    (224/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089257143 seconds)
  done (took 31.59783288 seconds)
done (took 32.423439262 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.507347614 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104527975 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124409668 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123492562 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.182999614 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103662836 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.132988117 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126504023 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106074765 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119401585 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.112485109 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107086404 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122883002 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182144287 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.126122493 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093915494 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114234887 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.107231703 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130053835 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131461195 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.181852622 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093847197 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.129361588 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.113660734 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181878186 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095422975 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123433488 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102060817 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.129468885 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120477755 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101431542 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114198359 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109679713 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132372339 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110865808 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098633762 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111903322 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090085834 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120995444 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099185576 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12878797 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120415005 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105633952 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116822478 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120415427 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098060162 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111337358 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105410832 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112374487 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100348098 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117971721 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.131981032 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.097873363 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113266495 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090828925 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116681855 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127825154 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090490603 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128062586 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090505958 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116972906 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090073762 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122079337 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111027983 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.097488907 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11362134 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.098438205 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123106379 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118156608 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095324133 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111877089 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098661196 seconds)
done (took 9.608365601 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098630389 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173643765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.181723656 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.186237613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147005167 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13206532 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.134872327 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143862999 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110734858 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139163363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151437917 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.122394546 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.208769166 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.106738197 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132530153 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120563664 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.106743272 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.127712004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188371561 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.141392911 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148675838 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10616377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148120774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137518747 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099281638 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15309607 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122725287 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120345354 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098659428 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129100692 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118867517 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120753625 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12093576 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118953245 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132208089 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125253228 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110168805 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12110259 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118647658 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.098198827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132728634 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137214885 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097328048 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132038775 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121428055 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104272938 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128067739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127623173 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101624174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123447452 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100645426 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148999341 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127563259 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127793019 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106415604 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124936912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125687113 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104238364 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122285796 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104335089 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119574153 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.119858583 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.101176753 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145258891 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.123052346 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104842722 seconds)
  done (took 9.277579567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119437128 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15517821 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13014447 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130417352 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.106490883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110871481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08795191 seconds)
  done (took 1.716253949 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090638452 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182387584 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18316763 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183719783 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.174465514 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215574998 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112458711 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.112597224 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.149257619 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.100846629 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181196372 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237267411 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097403819 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.13123198 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1867764 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.112430043 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186927471 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08930838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125367432 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.182890779 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128975153 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142544469 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.10744817 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113739941 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.175744899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091494692 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26280564 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129729432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096971126 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123154547 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103614573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.222562273 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177371997 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.106808834 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118057953 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182342646 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.176886362 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125494925 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.194486086 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095290122 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.177059095 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.125194631 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125424153 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104723024 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125089781 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.165303263 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129583327 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104915649 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122507387 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184557097 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126282943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.178284215 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.099249242 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123441319 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.126243335 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103697521 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131142863 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.102718991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.182594885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128785254 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.178336346 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.178898289 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.17705605 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.200742289 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114879229 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.179134903 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174178355 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122792961 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099056084 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126680596 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180057881 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123800072 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126667289 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.164866076 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106754366 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.178889324 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.179540481 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122855075 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104990197 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.119913302 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122353643 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091070403 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.166573984 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123990515 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099772431 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135691514 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127870103 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.103726846 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119207517 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142338236 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.102002811 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126946874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130239447 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.102623232 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13213104 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1808413 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126900273 seconds)
  done (took 14.55295812 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093667191 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113652706 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098616278 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11620204 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092820678 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11522854 seconds)
  done (took 1.519860113 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124903766 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127034718 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.135427215 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.106364579 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181466828 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.183244566 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.209930634 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103607287 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143802172 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136500087 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.186760432 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.189173838 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.186189639 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129480766 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.188914417 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105735758 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.212445827 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102101544 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137290339 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100162831 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133992956 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129905817 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100814601 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.178822894 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129904759 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129241876 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102250931 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136778659 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133948267 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124919608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.107205686 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12717134 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099790007 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126302065 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.187361748 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123738064 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122113637 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108752355 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129481049 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126823763 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.18809591 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100388112 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136569428 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132900132 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103301071 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124308397 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130799426 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102983791 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.209069616 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108740632 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132430778 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127551735 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105939755 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130998564 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122958842 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104345286 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130230224 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.189254414 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131253121 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100799111 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128107001 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129246384 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103812512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130473073 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128838199 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.108619513 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124132333 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127550348 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099764292 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128291875 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129838385 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.104878034 seconds)
  done (took 10.499068898 seconds)
done (took 38.43564248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.144511984 seconds)
  done (took 2.031129874 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.975267937 seconds)
  done (took 1.864123394 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.801265403 seconds)
  done (took 16.727786522 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.556972199 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.647464826 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002814813 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169508905 seconds)
  done (took 3.268449778 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972811841 seconds)
  done (took 1.883196631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.341808201 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.281428102 seconds)
  done (took 1.519808499 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.836080462 seconds)
  done (took 1.739801567 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.385070548 seconds)
  done (took 3.28616653 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.37719398 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.193664122 seconds)
  done (took 1.485119347 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.659079877 seconds)
  done (took 1.567514627 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.606755379 seconds)
  done (took 35.514388425 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25393961 seconds)
  done (took 1.173200481 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311384775 seconds)
  done (took 1.220123239 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.283240517 seconds)
  done (took 4.193024229 seconds)
done (took 78.374519249 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103762107 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128838879 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106681072 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126759406 seconds)
  done (took 1.369385128 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113920939 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127443824 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109465918 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12629517 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.13699866 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103932776 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125761707 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.134650145 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.10409179 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129393309 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.104602091 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127702115 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128943665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100970037 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124502479 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129149806 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.109847261 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127458658 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104110925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128891559 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126425811 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105357922 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130511037 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103883078 seconds)
  done (took 3.775509097 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104833005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117791231 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098943822 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11912512 seconds)
  done (took 1.356698509 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113889884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147468287 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14544375 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.113525108 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1468242 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.144499156 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.099265809 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.120975882 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102280705 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.136314684 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123907904 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127690834 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.146860042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117578572 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.115897448 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117182767 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097966718 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.148699078 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13589514 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.113841482 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123134848 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13514623 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.110751932 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141888699 seconds)
  done (took 3.943832816 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.211703076 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.116748007 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.151640497 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1793559 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.152730713 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.102128168 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.153469659 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131639273 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.110622491 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.128357722 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.128576799 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.186509224 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106197401 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130470058 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.127185591 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110302605 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132956303 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129034821 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.108462979 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.139852709 seconds)
  done (took 3.653700757 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105043422 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118540326 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092311199 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118477401 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103496171 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12295242 seconds)
  done (took 1.580295107 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091496662 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112008374 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091207634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112018052 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096136314 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112139202 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088932496 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112081245 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089881605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111471503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090107683 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110241755 seconds)
  done (took 2.138169507 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.316790457 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09377574 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12182404 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.119325807 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.099543905 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117013491 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133804336 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09517587 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.254862287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095864139 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.134712251 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196864091 seconds)
  done (took 2.695784208 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227631275 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104270793 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284588415 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387875838 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174398921 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179633166 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284035458 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179015043 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202903229 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149892263 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209697575 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167308172 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165344081 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194723375 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149794838 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.20048468 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218317748 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158535684 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248530245 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178132269 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181579891 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199602108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161819999 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122558617 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178326479 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126563848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140914181 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188128339 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184897284 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191214816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15907069 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152227404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219053502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267761994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195747941 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.327527846 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160210141 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204215036 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199507357 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287298669 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149276412 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211885181 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16592637 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141970609 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198739708 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167984844 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199051999 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142491673 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148269785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203265457 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191772348 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197940472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164231612 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329001215 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138892305 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154945594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189387628 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23114152 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211744113 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18335476 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.128487261 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197017633 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200349766 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197979653 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.157507499 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183134363 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135340399 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189910491 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215285827 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20342507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204544604 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208152346 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145378671 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179920267 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183982006 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165870869 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194183267 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175023892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102173048 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162061986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151543391 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134318171 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.178020718 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128811708 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226401785 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143629688 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.203663887 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243751034 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146223452 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175505261 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204201653 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180678203 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134828421 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127134105 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156164453 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.174101706 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170580504 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114656609 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169547693 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155461442 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136173478 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164649461 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10413598 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175296383 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143903935 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179393817 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179231552 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.147633999 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180419581 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159538258 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174763285 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187523374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204718012 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140213729 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120224788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210860571 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171067007 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146595155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188220427 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2062914 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178779415 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150685251 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18932915 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234996652 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127221767 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230485067 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143476224 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147268157 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.164075062 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174623705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169479918 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165068787 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110722372 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168860015 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234712198 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.11572179 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146131339 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191600208 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135424693 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110361657 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153753487 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150975464 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15528863 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.163911207 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.125423269 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168714527 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173532449 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168108482 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17181317 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15478385 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24507192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115983801 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.175296491 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158574293 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125801347 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197133411 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204742586 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14183334 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200666137 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185121637 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208784529 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177760796 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137915804 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195410646 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141435813 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.103656569 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185839419 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178273545 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176423745 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.228017035 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204553923 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183232779 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170066575 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161622201 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182041289 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.192656588 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170535177 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156901736 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178367086 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188272403 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129221089 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10801137 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137636128 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150454771 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143161227 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116155484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196595353 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203616079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198948216 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176405692 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149491619 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202054305 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109377604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201533646 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.190606315 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120705492 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230810434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19869114 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181528294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150114361 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186879316 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.103667261 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134304685 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144523051 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181702869 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114978764 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148815914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160176921 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20158841 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188906151 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160355152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239812438 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183748665 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212687261 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.129660704 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151574353 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184608929 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172579022 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194650543 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141260548 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174397674 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197217985 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168771843 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20997285 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178494729 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184690564 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242983316 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.170486122 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118496676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160859081 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179584805 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154741341 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176644494 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155167093 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121346508 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165407666 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147862572 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13525906 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198156832 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154705233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19619948 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.168281548 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214178348 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109216257 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160377075 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175673818 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156310814 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100797958 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184076706 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22922323 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156429265 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169335556 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190243585 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118749651 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320695241 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230592042 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201594419 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16207912 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156907915 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177649813 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17122452 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176362236 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19934398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160362942 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201013202 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173192809 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.126947753 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146636021 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159343552 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161846198 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165273197 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.119898371 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170889704 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.154110988 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201365742 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153747683 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173668185 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179960264 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15880276 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16635269 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149432316 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222545993 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17229843 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193907977 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170600742 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182101196 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202123314 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131039146 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109933444 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136910714 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198691377 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139584239 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147997972 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219051396 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210631158 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17340522 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180519171 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149011041 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132506551 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173872628 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136029699 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235785741 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154888641 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146516344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209474786 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16223646 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119245101 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177260836 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291299203 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153188881 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187617608 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129150389 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28585029 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132822128 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119443621 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173434512 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183542573 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159653531 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194130862 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181467288 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154868378 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172013081 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125357551 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225019911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224630589 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190955428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216084525 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.127380747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170755698 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17512139 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215374585 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128344405 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162408513 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175228397 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20039143 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201955001 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145948209 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1779085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176575306 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174463166 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190502333 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142604636 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204077309 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139292892 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181967609 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153737812 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110624523 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170699007 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217208652 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117449974 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188897886 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171443896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140281928 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13520189 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171651511 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147713268 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169296618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.14232113 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195763491 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134564289 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177413218 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197182798 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11079542 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170869089 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155703369 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14076328 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157837083 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129894038 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147041032 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177331479 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1989007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140387001 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192052618 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188051159 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176583637 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170867543 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154897072 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.674039319 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11056328 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20001877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158515171 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20422296 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159195761 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181771817 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17597647 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16150224 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188775991 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15972597 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238471798 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180440131 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17679943 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144194756 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153187876 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128181012 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141729412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162400273 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177502097 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151240727 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122072115 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172635321 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156434965 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154660604 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147911183 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203403965 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158143672 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200705659 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198195549 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164560006 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182970989 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193032116 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136167789 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176861137 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187917339 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151498204 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174298705 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.114372419 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146488477 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196933929 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104467023 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175941626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174704102 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175693465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178113509 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146463569 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176454462 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157707807 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175776271 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108619303 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167687025 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1729231 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14159762 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135329077 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144404406 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196859496 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146359876 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136884779 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17766874 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201275541 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103802299 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147058706 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286591558 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170477784 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208550453 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167413631 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14373547 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155159299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174004255 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168703343 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17253573 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11261498 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140307951 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141231978 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187941755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14347805 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171426622 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192283403 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172671901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202704265 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15445452 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284251296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150412159 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16876934 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12069072 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138925489 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149352774 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121444614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14592146 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227153523 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196829808 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165214182 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130041557 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136459426 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130201384 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114600185 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175350116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166555266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172921639 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164002576 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.099310948 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160744625 seconds)
  done (took 83.944505224 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149543455 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.145814186 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151954887 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203731674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173147844 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263449558 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211335321 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232662517 seconds)
  done (took 2.535096936 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131531568 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.116547958 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146391471 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130946028 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130355724 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.42037629 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141979239 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126987644 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197394498 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139230395 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124761198 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.688011249 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.124491723 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125389158 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.097133663 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.127392532 seconds)
  done (took 3.963368098 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.270641279 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.5136624 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.554016126 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.250896928 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234750048 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.186117929 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.686041648 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.177370793 seconds)
  done (took 11.877805474 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134631358 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146951141 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.346998901 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.218424393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.165715174 seconds)
  done (took 2.02293729 seconds)
done (took 125.761522742 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106936322 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.148148652 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107083116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150612684 seconds)
  done (took 1.50946277 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.154605305 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.115782061 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091736297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.114072219 seconds)
  done (took 1.485263021 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.548509528 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.087989581 seconds)
  done (took 1.675404942 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133656763 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150401652 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.149290314 seconds)
  done (took 1.448917646 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11444984 seconds)
  done (took 1.12012304 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105823721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131070139 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.186884438 seconds)
  done (took 1.435612229 seconds)
done (took 9.682922772 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128759394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428613467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415298236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113894638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724034466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40671347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009460861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164157462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172340498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119498694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115388853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70108291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.053491542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341245392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036742758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339832662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702092535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121283947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103011367 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120849335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983608374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118983277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120892685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097718751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70026976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400675392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120659778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.382093795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094489784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125378192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384455135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120606756 seconds)
  done (took 16.968889287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140385572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189434049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129029874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095585896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12481106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094536179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134165786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136192781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186323963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093811363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143480162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118180305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10087974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120913538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119107148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119373967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096773061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124065849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128810675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097387111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142547541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092616106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122363954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122320896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095336481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133202301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094179282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136445396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118001005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100908614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125806342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09428306 seconds)
  done (took 4.885373656 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145598756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198679472 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129665177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155753141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171678163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09732116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214862233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166748038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188003992 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118848222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11798138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120616195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16322605 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095959657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145671538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093564825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123767723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096417274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130999882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122183163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116700907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11915914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096546559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123850634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118548686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110490835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120115147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13444628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094503642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124724426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100884589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121240955 seconds)
  done (took 5.199114421 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108803773 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133836997 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117927514 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145081567 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12756067 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.109128162 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.134577316 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101174791 seconds)
  done (took 1.992963543 seconds)
done (took 30.055679817 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122154702 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140272765 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113590429 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135609302 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.195738615 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097184749 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.139738365 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097273989 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135381099 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116265607 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.119924512 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.124742295 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117154679 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128996987 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.179744289 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109151042 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.184187595 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.180486228 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126979782 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108639578 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126464999 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.188983849 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106298867 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.128544191 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.189597817 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099129011 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.178805843 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131766079 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.128099969 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099132765 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.179414695 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130574423 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100321069 seconds)
  done (took 5.469122223 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.195730441 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.20808751 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097537533 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124377569 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.208264884 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.096765115 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.19520056 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.123372711 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.096437062 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.123580975 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.096551543 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222268227 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.202979939 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.219296585 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.237435847 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.206875569 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.193589029 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.205506147 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190889118 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.2089946 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.196084713 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.095656449 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.204033767 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21010089 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122369325 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.095945646 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.256312585 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.202054586 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.234153077 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195146659 seconds)
  done (took 6.296149609 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109868351 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139356182 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121527595 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195163869 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166218027 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.135168857 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108126243 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147188873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.121940948 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12155757 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.105682733 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.1604708 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141027864 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10608453 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128298796 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141150199 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.123008325 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.123738223 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102912389 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143759382 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14091221 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.115511247 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137788082 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106345184 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.122262633 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131589723 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102427463 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135872172 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.103284317 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132150936 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09986566 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128237248 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124244175 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105301217 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126248813 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.107627406 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152728559 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131324508 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10860169 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.160323146 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130792804 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100941717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144865763 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17515828 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098155838 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13499838 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110301376 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132836068 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.093393503 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143368845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135244217 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098405606 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144920304 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.095052532 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121774807 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102979895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123176556 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124285499 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104573774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126940514 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.122886539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.130960682 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129136524 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099512535 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126984694 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095937851 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121399653 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103003398 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146475363 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127149904 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.131448698 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.121800278 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.106601387 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130491752 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101284742 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13268238 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12144426 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103283636 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13108601 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102673682 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13220556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098033742 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126228629 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14091129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.116827387 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135410173 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.132254856 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.107220386 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126381513 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096953641 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138408467 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09654944 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127177572 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131085829 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097873706 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124512133 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108120702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.132843073 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094706233 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141783569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127919384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095470311 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140343605 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097595229 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12689785 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10625658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.133814932 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121782728 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106290329 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13400328 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.095437587 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.128388645 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100115997 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122041938 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.139517439 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107152508 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12702362 seconds)
  done (took 15.397041022 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.300588876 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307300591 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20436008 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.397009269 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124562972 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.195471856 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.302610842 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.22833469 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124006587 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172201841 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.188661627 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.237908153 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125868436 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.154180294 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.278100823 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371732975 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.157256426 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173244748 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171403247 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.152496655 seconds)
  done (took 5.409757344 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119279939 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.16875036 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.158930722 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15717641 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103186809 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138105501 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095887302 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14674724 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.131645246 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104221606 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.121807532 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.136543044 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105993858 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132524725 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.115425576 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.171423578 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127998433 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104620281 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146066551 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12947642 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.104652994 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151199129 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136575496 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.153354992 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109960063 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138513469 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09578559 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.131510268 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099558063 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.12813117 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.129258513 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.118574534 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131179744 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.102742341 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133260904 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135226662 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.098917944 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123431183 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09777112 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.125569954 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.114369865 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133674901 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100314281 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119391839 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.10980541 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.12727208 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110273753 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135570431 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135191201 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111176995 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134741779 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.134778593 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104979815 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.144802722 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.099453191 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.139152457 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.136499524 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.110445267 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132234238 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094750406 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121492797 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100240762 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127670294 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.134877133 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107097086 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146863216 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.137188644 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096549532 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132558965 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099462981 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126577866 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141755499 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.123819452 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.129282975 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.09893942 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.145668171 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.126223364 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090855626 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134330635 seconds)
  done (took 10.863599905 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132503155 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128806869 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119805022 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.163368936 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.237546229 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.10273978 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129439261 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.11650919 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137325935 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13706826 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110080806 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140084099 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153743212 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113769129 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128089046 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114448868 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134469619 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172151407 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.119862035 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163656759 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.234772079 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.101867088 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.139998055 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.111032976 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164287876 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.137856392 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.135935616 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.133147651 seconds)
  done (took 4.964821826 seconds)
done (took 49.421747679 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.19706725 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.321560045 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.116605354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.115762013 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.15871455 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.133697039 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.116361277 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.308714799 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.716603416 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.105861854 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.116722715 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.114791154 seconds)
done (took 26.566030915 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.376135283 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.696058954 seconds)
    (2/2) benchmarking "String"...
    done (took 1.441751505 seconds)
  done (took 4.177816766 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.111768871 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.113469816 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.361119352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.112576999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.117457188 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.132119139 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.120612044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.123780714 seconds)
  done (took 15.120916313 seconds)
done (took 24.826435294 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.140996078 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.317666137 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.411229857 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.129506527 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.129921025 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.128296586 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.116256385 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.134462552 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.12273434 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.114694706 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.079868797 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.389126549 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.115742206 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.504496393 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.120081364 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.141431488 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.112236615 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.345926483 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.117965231 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.161887095 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.110660693 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.111237178 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.161182714 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.136637965 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.219854202 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.123764654 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.141203123 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.111602625 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.292952967 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.128404554 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.166854271 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.115024532 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.155451226 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.113816007 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.225840727 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.147914363 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.301367255 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.215857972 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.112616363 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.119854864 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.288711352 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.464971027 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.116465487 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.116712489 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.118207055 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.127937089 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.115580253 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.799635149 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.12153607 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.120586865 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.130066622 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.509956355 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.125583589 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.112664371 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.112450744 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.339802633 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.124278806 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.124785526 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.139756478 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.115446941 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.117128748 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.11790705 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.135245276 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.11242643 seconds)
  done (took 137.797666481 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.112447542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.114121027 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.114896809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.177135314 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.117141821 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.11540225 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.111617598 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.112723588 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.116376526 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.14710944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.115560927 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.114160908 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.116534694 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.080789322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.116308742 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.132818386 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.113760031 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.116037795 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.118764637 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.112055331 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.111278504 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.114910322 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.128917178 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.114907181 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.134621991 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.182114049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.138157391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.146324747 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.132617743 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.11024281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.133313585 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.175901772 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.615838927 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.970480052 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.117067708 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.1251691 seconds)
  done (took 76.868176375 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.111023082 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1102364 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.113721537 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.112537071 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.1361068 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.111716088 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.5665391 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.566786655 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.833970386 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.439287579 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.10773578 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.279283768 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.114955216 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.199407706 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.12543667 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.112910651 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.128245425 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.152609564 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.112847203 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.111699865 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.567341358 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.129308335 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.155561165 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280989475 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.125666887 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.138426324 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.51392666 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113104769 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.139860562 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.425552106 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.152587679 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.113219182 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.372742058 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.578412774 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222654575 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.114245153 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.138784895 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.114225511 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.383745016 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.113812153 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.114695437 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.116493452 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.673243567 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.116871681 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.57223434 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116090556 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.944262658 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.115522176 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.114145779 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113158883 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.060530794 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.55528455 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.13189875 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.113918981 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.117159183 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.113230753 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.114249663 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.112957265 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.141911505 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.029276485 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.203365251 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.12946841 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.117047337 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.13978284 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.115205719 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.21572131 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.116648203 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.112697637 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.172886326 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.234040561 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.570581525 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.121234456 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205739855 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22924389 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.116364685 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.116127882 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.115633852 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.114507071 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.218793628 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.117564992 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.463927575 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272701539 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.130944254 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.10346657 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.210323305 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.116058502 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.379310356 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.119210193 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.117346403 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.738144782 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206260502 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.117419468 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.116622598 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.116797949 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.116746342 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.463566703 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.572754835 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.228919869 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.118713365 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.265268695 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.119378872 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.463286378 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.563259155 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.695600824 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.120926479 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224230119 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272994481 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.13139317 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.117822641 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.102549696 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.120937881 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.172806746 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.1211058 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.511162925 seconds)
  done (took 353.167884723 seconds)
done (took 568.875888874 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822504318 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.778068127 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.899996909 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.8002686 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.768457329 seconds)
  done (took 10.113173151 seconds)
done (took 11.155716167 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.284693133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.28379234 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.168540351 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.285237918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.146574132 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.300714238 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.266238517 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.140438486 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.211397576 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.186675635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.213271374 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.168745534 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.150635405 seconds)
  done (took 16.851986148 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.360372786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.12399117 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.200427879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.336621363 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.161345439 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.383128935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396258923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.122946349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.251804918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.135395021 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.134972263 seconds)
  done (took 16.652545903 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399485665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.123182373 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.188972816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.357551481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.165045571 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.364313756 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393018727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.124131538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.266425044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.137036567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.135807629 seconds)
  done (took 16.700672347 seconds)
done (took 51.248559403 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.1586636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.277094752 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.147221993 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.135037079 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.131497484 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.132959787 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.137884873 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.131396004 seconds)
  done (took 10.303727905 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.132347174 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.130402147 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.129864509 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.130637831 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.131263368 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.130510774 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.12962981 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.13161904 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.131256136 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.130386022 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.131992199 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.13070071 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.129626785 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.130618253 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.13186546 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.131473279 seconds)
  done (took 19.141017578 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.132682835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.131118983 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.130310388 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.129796208 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.13100173 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.131239209 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.132163886 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.130505205 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.131377509 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.130766197 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.132071531 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.131615057 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.130836853 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.130750458 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.131457449 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.132374962 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.131012274 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.132499863 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.136643524 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.131771008 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.131816252 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.131359972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.131297251 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.132228789 seconds)
  done (took 28.218704353 seconds)
done (took 58.708392732 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.122677891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.127099606 seconds)
  done (took 5.297241043 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.193872999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.19617903 seconds)
  done (took 3.439291146 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.133090016 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.131162689 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.133551964 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.131751361 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.132069516 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.131825279 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.131991307 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.132539048 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.133292074 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.132618826 seconds)
  done (took 12.372510467 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.13498947 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.133808895 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.132555608 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.13255297 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.132740672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.132603989 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.133795112 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.132387414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.133293502 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.135503106 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.134093743 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.13320197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.13292368 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.133674225 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.133965082 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.135455611 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.129824864 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.12941712 seconds)
  done (took 21.446728237 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.142491628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.151064309 seconds)
  done (took 3.338668693 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.270579905 seconds)
    (2/7) benchmarking "second"...
    done (took 1.171338111 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24316255 seconds)
    (4/7) benchmarking "year"...
    done (took 1.228271562 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.163711035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.142068154 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.164171446 seconds)
  done (took 9.42916464 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.12238572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.326760563 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.429310011 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.704286161 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.114570563 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.162236416 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.985346863 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.160951282 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.148855488 seconds)
  done (took 13.194640069 seconds)
done (took 69.566227488 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.100707139 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.146662799 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.10393305 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.122974971 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.448123654 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.107808132 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.099031516 seconds)
done (took 15.160990495 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.096279772 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.109971541 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.098736078 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.066579619 seconds)
  done (took 9.394260953 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.995869965 seconds)
    (2/2) benchmarking "read"...
    done (took 1.471074842 seconds)
  done (took 4.492368695 seconds)
done (took 14.910248851 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.105219153 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.103164458 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.103797385 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.104974157 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.103837364 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.104107774 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.104406695 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.105804265 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.106089901 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.103818287 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.101704084 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.102854484 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.103281879 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104251832 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.102618853 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104367733 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103247037 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.103064631 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.10062068 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.102352885 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.101698132 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.099740844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.100571461 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.100323376 seconds)
  done (took 27.500049012 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.100514361 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.101630403 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.099105676 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.098812635 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.098292979 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.098470771 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.098790406 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.099854187 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.098193523 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.098523076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.098524595 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.099594351 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.100483238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.09831519 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.099468089 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.098342632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.099179938 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098997619 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09986834 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.099741931 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.099377909 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.100183527 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.098811375 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.099558007 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.099166741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.099317339 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.099309468 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.100788608 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.100550227 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.098881311 seconds)
  done (took 34.000949415 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.101936907 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.103529267 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.099720801 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.098055208 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.098503912 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.099778701 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.100564093 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.096804303 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.097440032 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.095524182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.097741685 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.09748902 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.09743083 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.098022517 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.096785917 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.100148293 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.095322421 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.095318254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.093704232 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.095739439 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.094739037 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.095099204 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.095206548 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.094522472 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.096114582 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.095201657 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.094604686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.095911339 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.09496283 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.094333035 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.09507385 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.094747983 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.094665251 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.095363853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.094556865 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.095453527 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.099678705 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.101311261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.093860147 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.094475729 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.095294156 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.094239577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.094713072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.09630506 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.095751886 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.095492541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.0968538 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.094815852 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.096995502 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.095385205 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.095783095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.095460488 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.096458999 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.096621695 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.098124014 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.09711728 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.096215489 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.095517691 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.095990961 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.095846614 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.096668132 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.095904732 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.095292262 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.095848302 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.096477288 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.09641056 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.096585458 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.096804275 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.096295678 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.098737065 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.097161177 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.097534793 seconds)
  done (took 79.969147625 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.096607415 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.096019905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.096735403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.096775486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.097040999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.095767561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.098307635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.097749309 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.097713113 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.098022441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.098648918 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.099255542 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098352057 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.098534138 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.098071414 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.097515161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.097323648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.098240461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.098967086 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.097813885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.098660189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.098594729 seconds)
  done (took 25.166990829 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.098975639 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.100319171 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.099497317 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.099782312 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.10062866 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.100158971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.097799777 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.100416771 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.098974384 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.098355221 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098480474 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.098327604 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.101901055 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098576773 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.098826855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.10016378 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.097710978 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.101793252 seconds)
  done (took 20.807523973 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.099797245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.097660115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.099677957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.099758307 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.098549924 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.099384619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.100695115 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.100550554 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.098941285 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.099850038 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.10079762 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.099451517 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.099951211 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.099774778 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09994939 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.101016726 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.100247363 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.100522422 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.099844307 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.10069431 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.100842067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.102084706 seconds)
  done (took 25.218668533 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.102039649 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.100810933 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.099673705 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.100800988 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.101454385 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.099622764 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.101164978 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.100794271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.101156267 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.100938557 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.100552067 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.100864361 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.102742491 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.101077035 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.100558167 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.102804462 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.100998849 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.101824766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.102426119 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.101975983 seconds)
  done (took 23.044253785 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.101695451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1029673 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.102785055 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102672476 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.104021451 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.10177404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101986464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.103067324 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.102021851 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.103482322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.104541754 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.103850616 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.103144896 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.103788282 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.103650264 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.105052292 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.10402577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.103580508 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.103473862 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.103437481 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.105673812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.103994019 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.103712202 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.102836389 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.104716471 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.104116464 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.103765952 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.104375552 seconds)
  done (took 31.919079865 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.10485692 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.104061045 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.102215098 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.102481027 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.104983909 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.103152963 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.103274953 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.103161473 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.103566357 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.102917821 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.103684257 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.103040025 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.102457831 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.10356075 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.104826736 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.103728 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102504165 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.103056024 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.104557079 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.103248201 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.102795044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102886337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.104164622 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.102543673 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.102119911 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.104113485 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.10269062 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.103446234 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.104060593 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.102890448 seconds)
  done (took 34.123643894 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.150168899 seconds)
    (2/2) benchmarking "in"...
    done (took 1.148958915 seconds)
  done (took 3.320688865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.103782432 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.101879985 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.103494327 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.103991141 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.101944389 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.10299717 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.104371783 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.106070802 seconds)
  done (took 9.849181917 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.100363841 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.103770552 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.104954629 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.104257184 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.103302373 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.101459476 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.107702757 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.119402976 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.10225415 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.102310372 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.107256147 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.107113669 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.104622899 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.101319091 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.100633925 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.102756526 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.105735855 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.105911267 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.106930656 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.106417656 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.104554442 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.105061583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.104710904 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.106118639 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.102341084 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.111228451 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.12063817 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.105102024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.101469042 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.105687674 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.101659767 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.104012532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.104994669 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.105189253 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.104638062 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.104719924 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.11229025 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.119283981 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.108469832 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.122005484 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.1058498 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.105081467 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.102883615 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.104009426 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.105121983 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.105909934 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.107202857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.105650569 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.103062619 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.107159941 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.112453659 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.103872326 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.106486952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.106171006 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.105240352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.110150013 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.122973664 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.1076134 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.111530826 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.113462868 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.129613069 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.124131161 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.10665115 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.106958207 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.111959993 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.122246686 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.111306459 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.122367708 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.107040636 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.107716968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.111404606 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.129807857 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.126327236 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.108002296 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.107600285 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.110251582 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.105485737 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.108653979 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.111998746 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.121772656 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.10895536 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.107997335 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.112108528 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.121546332 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.105240426 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.108786327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.10838687 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.108711489 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.107264962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.115466406 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.127024683 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.111922366 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.105188428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.106086986 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.107979608 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.109674382 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.105337655 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.105911053 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.109134398 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.109312646 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.108914829 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.108260734 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.113312768 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.110876888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.109460496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.11363146 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.125810614 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.107450789 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.111781164 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.11026556 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.110370253 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.10928961 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.112749381 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.110083235 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.108957936 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.11381226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.111086074 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.109168155 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.111181848 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.110545282 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.115751393 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.129108608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.110594729 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.111443394 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.110212306 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.120162199 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.111528605 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.110753447 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.111356512 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.110970517 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.112205567 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.109495026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.113075397 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.109412236 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.112840471 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.109492206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.111285192 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.111340288 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.110831806 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.109128959 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.10908484 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.109888906 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.108853933 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.110197135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.11105657 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.110265789 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.113899724 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.124450836 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.111213698 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.1103581 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.112076464 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.113179893 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.110148599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.112537711 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.109330835 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.112745738 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.11125595 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.113340405 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.113144552 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.113437436 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.11361265 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.110255672 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.112024553 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.113147042 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.113757699 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.109929669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.112440185 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.11328921 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.114641284 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.11038667 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.114420196 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.109370583 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.114542232 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.119467091 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.113819054 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.112301043 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.112357868 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.114042328 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.11523395 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.114862409 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.113616938 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.117966104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.113762958 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.118915083 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.129132856 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.115365598 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.115195797 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.111222333 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.112001262 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.114931341 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.114034126 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.119302709 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.122356216 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.133609985 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.111879275 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.119355766 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.112072145 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.11751529 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.115767671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.114357623 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.117014446 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.114690264 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.112329326 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.115027943 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.114318138 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.115826826 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.112637253 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.115506375 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.115980108 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.11500585 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.11709837 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.112806621 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.112951943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.116573666 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.116300843 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.115360271 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.11264358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.115475203 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.112162248 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.112652343 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.116520175 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.115928087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.118998423 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.116963658 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.114260744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.115503269 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.112874706 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.112752182 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.116489899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.11538697 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.114122448 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.12100258 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.128319885 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.116011689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.121221514 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.131082417 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.1147855 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.116560108 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.117232542 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.117954214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.116454574 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.123685921 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.119018959 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.11799419 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.118388425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.11607586 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.118332804 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.120487246 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.133758921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.114964053 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.118509641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.117326544 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.118699663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.116479816 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.11741483 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.115498312 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.117876964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.119823934 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.118349652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.117398357 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.119576603 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.119676834 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.120159552 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.118278233 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.125914537 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.120999616 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.116521086 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.117183931 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.11673812 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.122879652 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.117451215 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.120325296 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.11877356 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.127056276 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.138356212 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.123636623 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.133568651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.118395017 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.12140307 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.133298679 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.118756999 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.116853613 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.118083188 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.116437381 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.116836861 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.11915433 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.117777714 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.120439009 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.118502539 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.117635687 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.12435938 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.121703697 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.118018992 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.121411859 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.121964618 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.12060476 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.117088329 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.123114535 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.119503059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.119769973 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.117704493 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.117521923 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.123640582 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.134235526 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.120075929 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.119565239 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.118004173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.119331827 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.118864436 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.120826717 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.120941972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.128841705 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.121613055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.126662943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.12081655 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.128073423 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.124955159 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.121794262 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.128200296 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.122845095 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.119640639 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.119199295 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.123188769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.126703675 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.138657084 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.121306449 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.126245109 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.122597434 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.121916053 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.123502639 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.123158965 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.12546513 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.123746885 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.12950518 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.136981813 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.122628151 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.12156253 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.124197651 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.123571337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.124707164 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.119862954 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.122491903 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.123437793 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.121372562 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.120113575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.121079582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.123661672 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.123928661 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.123259081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.123627323 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.123036237 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.126998137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.136267182 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.127845137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.123744638 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.126697144 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.139718675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.127936867 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.137777781 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.122357393 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.124186938 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.123645673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.123402347 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.120417309 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.12278319 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.123089997 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.121650465 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.127816223 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.12482114 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.123661226 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.121751918 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.124899136 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.121733032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.129798265 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.141263104 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.121953894 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.12750068 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.126018402 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.121547496 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.130020836 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.125404929 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.121023786 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.124345684 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.129784176 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.131100167 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.122892594 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.124941667 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.123133913 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.125531465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.125402416 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.125801908 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.125385118 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.125895793 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.123452062 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.125177421 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.125862153 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.126545383 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.122936398 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.123880855 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.122634172 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.130972907 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.140759033 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.123833976 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.126928172 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.127586543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.124113511 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.123676181 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.126580058 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.123423317 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.12801951 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.124806727 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.130644538 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.129243682 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.125885321 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.124595229 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.127079817 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.124074727 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.124016966 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.127866443 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.126990429 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.128358743 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.124416451 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.127536789 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.126027149 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.12421828 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.128139718 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.12464324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.128784655 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.126695323 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.130707098 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.125291058 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.128976575 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.130024524 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.129403781 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.125132573 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.126372771 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.13243474 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.141866142 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.134539918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.132971647 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.133281818 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.125617015 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.127755582 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.131899981 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.124825634 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.126741563 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.128008799 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.126548469 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.125666444 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.127975739 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.127675245 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.13100662 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.141099833 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.126328743 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.13411425 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.144073406 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.128708592 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.128084495 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.130988224 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.126184061 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.128925087 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.129359629 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.12562855 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.132546598 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.142029313 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.129818152 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.127826068 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.127528068 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.127546581 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.132999614 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.130329473 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.128295783 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.131651265 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.128554091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.129626242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.131908198 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.129880271 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.126519741 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.126547945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.129297229 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.132406719 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.131278032 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.129026464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.128346472 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.128699148 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.131758978 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.132924661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.130785152 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.131330302 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.131577533 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.132602887 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.129157113 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.131298553 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.128595802 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.129361215 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.135753659 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.131718351 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.130924431 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.137199053 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.138227858 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.132064173 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.128020292 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.128936872 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.132235159 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.132946028 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.132258003 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.130551565 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.130171034 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.13266264 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.13248796 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.133581941 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.132495752 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.144793509 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.15039748 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.130399098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.130901308 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.132175216 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.135144437 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.133369794 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.133970712 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.131503763 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.132208078 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.139264104 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.132425734 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.136731475 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.148117808 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.13170688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.13756267 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.133565759 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.136108777 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.132772576 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.134623942 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.133993341 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.1348942 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.144548015 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.134984215 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.138270414 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155602507 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.146554029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.132666609 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.13593365 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.129906049 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.13427991 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.13265867 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.134501019 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.134306898 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.134795628 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.135024073 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.132652811 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.13653012 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.132605863 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.136291115 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.135287996 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.131280901 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.132612576 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.134590196 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.134841424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.136007753 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.134571052 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.135717421 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.135698788 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.132849408 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.143773913 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.155626438 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.136552072 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.135299312 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.135929153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.135555435 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.135073338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.142126643 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.14265652 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.137497755 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.135598723 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.135479634 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.135811715 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.138280083 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.134673139 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.132700773 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.132664329 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.136633325 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.144856634 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.157778272 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.137781915 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.132877609 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.138266921 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.136570784 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.135685268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.137755102 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.137660713 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.135796518 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.135901232 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.140558171 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.137233152 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.137588684 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.137719157 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.144680054 seconds)
  done (took 669.632548975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.139755361 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.137890037 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.138643754 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.138235189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.138660165 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.136961965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.139175348 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.138350904 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.138471633 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.138890216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.138698117 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.1380346 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.1383188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.139961379 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.138257631 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.138344531 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.138906502 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.139237357 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.139694163 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.139509046 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.139148659 seconds)
  done (took 24.966500244 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.140305311 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.139774266 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.138873413 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.139200548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.139876486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.140244635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.140246683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140530952 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.138871121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141655146 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.142635739 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139920848 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.139676633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.139548368 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139845584 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.139448856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.140744649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.139948817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.14194861 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.141442694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141577669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.140619239 seconds)
  done (took 26.141681231 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.139973104 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.141612787 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.137010933 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.140712272 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.141161326 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.140545064 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.141606688 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.142684709 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.14114565 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.13902595 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.137364343 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.138682068 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.144760625 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.146848213 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.140017229 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.141305647 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.141813542 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.141605205 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.140170624 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.141554876 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.144134844 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.15952391 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.141987947 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.137070725 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.142014871 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.141805897 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.141960115 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.143130083 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.139442276 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.145673873 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.143575233 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.139320013 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.141332047 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.138729763 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.139627176 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.146691356 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.141527806 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.142933733 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.142147061 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.14776578 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.160698128 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.143885064 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.145332658 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.160018394 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.142559503 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.141919522 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.149459736 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.143152505 seconds)
  done (took 55.925292902 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.70200772 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.723134147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.722644342 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.722931625 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.722291548 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.722588312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.722317598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.724760889 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.723708412 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.725590573 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.726167762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.726020614 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.722903314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.723605751 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.720588411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.725431025 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.720156605 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.720545049 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.722503444 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.726569316 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.719802241 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.723805877 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.723154978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.724742252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.727266245 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.723025951 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.722790497 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.721995056 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.724094068 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.723828452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.724743134 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.725812743 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.728909597 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.724353756 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730845312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.725569471 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.729080765 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.725043551 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.724909489 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.726933629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.728622503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729621086 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.730340299 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.734123182 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730374869 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.729727849 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731819848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727722698 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.725847841 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.728183156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.726159307 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.724518654 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.726658805 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.727028805 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.72336133 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.729536253 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.728573898 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.734416053 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.727517855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.733531039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.733427324 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.735437481 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.734640985 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.730615741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.73022474 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.731584783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.734113399 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.732889663 seconds)
  done (took 118.448974964 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.148903492 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.148564756 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.147453746 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14785852 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.146833958 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.147452399 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.147516913 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.147477226 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.148138917 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.147630506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.148272516 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.148388089 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.147966177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.147948632 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.148776652 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.148017399 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.148174168 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149388791 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.149012383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.149590069 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.147532065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.150178104 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.148391696 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.149166419 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.150089671 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.149134487 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.150154925 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.150454547 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.150126911 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.149471191 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.150411262 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.150150923 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.150590632 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.15077637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.149872917 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.149653735 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.149551083 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150751448 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.150065305 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.151139456 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.150996936 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149526335 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.150388664 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.150385309 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.151151999 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.15066885 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.151327901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.150644691 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.151822759 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.149993505 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.150464893 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.151928521 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.150696166 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.151181176 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.152267758 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.151741355 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.151573082 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.150166233 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151492199 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.151721414 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.151742317 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.151407257 seconds)
  done (took 72.351386096 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152314794 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152344871 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.153718868 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.152127783 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.151708301 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152973597 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.15183765 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.151501311 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.153264775 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.152699253 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152391224 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154953221 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155422171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152790269 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.152583287 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153299167 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153428571 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153139533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153583472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153510178 seconds)
  done (took 24.124393128 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.153304652 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.153384174 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.153750681 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.153253484 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.153733193 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.152311794 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.153118783 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153377734 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152352856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153702614 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.15353855 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.153601998 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152971395 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.154068939 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.152598997 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.154727079 seconds)
  done (took 19.5197841 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.153644975 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.154222443 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.152840933 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.152561242 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.154348707 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.154437191 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.154389067 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.153350401 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.15379031 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.153781459 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.154241395 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.154361417 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.153774 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.153672843 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.153800257 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.154496052 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.154267906 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.153408411 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.154496241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.154498629 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.154459926 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.153327286 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.154768926 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.15608791 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.155327863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.155562967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.155862929 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.154934896 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.15604407 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.154984736 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.155197729 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.155506997 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.155263017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.155813161 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.155100648 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.15521049 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.155906341 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.15674316 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.154920493 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.156328725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.155412214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.156434276 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.155271941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.156465895 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.156260415 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.156611427 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.156752821 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.156507076 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.156435692 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.156258906 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.154810244 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.155846304 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.156575113 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.157384562 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.157260954 seconds)
  done (took 64.598616083 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157269941 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.157698807 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.158321217 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.156914071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.157754956 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.157669688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.157718626 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.159683324 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157702262 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.15878162 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.157552301 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.15929143 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157947698 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.159033328 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.158875476 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156990742 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.157593175 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.157930489 seconds)
  done (took 21.914119307 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.158456178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.158701934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.157286095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.156569098 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.15815801 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.158575883 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15768097 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.159195235 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158327715 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.157886153 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158617567 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.158751458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159267181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.157891741 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.159342387 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159251851 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.158317971 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.159508291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158827876 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158807334 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160082797 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15999021 seconds)
  done (took 26.560334216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.154564298 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.15519529 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.155550911 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.169419514 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.174920285 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.155910855 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.156276393 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.156170633 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.173842575 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.209222327 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.205790332 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.175227351 seconds)
  done (took 15.113674451 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160037093 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.158285473 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.16041443 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159916541 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159277371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160544239 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161174464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16256086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.15986887 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160812583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160269106 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160216028 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159979732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160515717 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.160458792 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162341441 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161338486 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160381556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161101579 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.159752905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160876982 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.160679924 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.159988897 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160566565 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161872954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161853293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162478717 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161943687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.161684583 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.161664365 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161211137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16205501 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162478699 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162453236 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162437143 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.161846837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162109367 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162130959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162253212 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.162658563 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.161117032 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161728334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161390971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161695065 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16302594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162558248 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162299059 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163242712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161598218 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163526505 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163373554 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162443266 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162315739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16237544 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163614566 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162860349 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.162186867 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163304942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162442103 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163709469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163849538 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164120142 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164800078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16489296 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.16308454 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163268427 seconds)
  done (took 77.755276894 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163997335 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.163798922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164682156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165496646 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165295013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165011057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164030148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164200544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164435516 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164026807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164996171 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163840829 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165420957 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165524513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165119813 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16451918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163890692 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164992979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165412113 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165864949 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165465594 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164947319 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166712199 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165029454 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165970346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165862936 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164854457 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166540998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165020184 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165565848 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165949302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165632533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165693789 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.165728006 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166418733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166345693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166366001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166321475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166096021 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166164571 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166888258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166585598 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166799279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167385465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166956709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167147349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166447335 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167308498 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166974244 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167505385 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168581341 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166236207 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167468068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167210386 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168294532 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167035603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167486427 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168219464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167635472 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169055896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166044941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167951408 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168845172 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168577383 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168747732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168507373 seconds)
  done (took 78.046982326 seconds)
done (took 1611.04518344 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.334202087 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.286214337 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.162381662 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.175715543 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.163861627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.157611639 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.175189558 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.162454231 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.163652714 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.16337771 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.165300509 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.355161743 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.158286415 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.163405655 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.163702047 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.263403398 seconds)
  done (took 24.301634785 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.188184777 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.177277175 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.273146446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.190972191 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.193931483 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.338449774 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.227496112 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.17366994 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.321986612 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.194583114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.172562103 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.195665618 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.172945627 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.1735161 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.193346951 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.33805937 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.398948926 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.173047154 seconds)
  done (took 26.178127897 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.558421975 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.172746595 seconds)
  done (took 4.816926379 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.190245672 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.173398748 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.175175357 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.172750022 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.163476987 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.165255907 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.171524545 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.16635959 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.173959416 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.28690982 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.179467849 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.187174743 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.190728231 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.17396599 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.176615841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.214253438 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.320689385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.176684146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.176414754 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.178994554 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.174305145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.258202336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.216720329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.181160325 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.282132572 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.180143251 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.181899844 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.181233267 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.299380736 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.178134303 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.173353488 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.173935663 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.175389668 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.167324775 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.630129292 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.187219346 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.181842416 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.199720401 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.177751333 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.338183532 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.176826239 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.180094105 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.17757652 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.601688418 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.329934701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.288506545 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.186864509 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.181687279 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.176777776 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.237235263 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.177485246 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.17759528 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.231166655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.934196891 seconds)
  done (took 76.499100756 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.182642495 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.169158027 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.348085479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.19085341 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168741363 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171956614 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.169444929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.418792322 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.232782382 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.170550569 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.447775129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.705154761 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.186956444 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.22984727 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.039033889 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.244232976 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.170859447 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.185099617 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.171331479 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.176013025 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.696047362 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.175157874 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.169892965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.301820116 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.207268061 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.648832304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.170306875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.170774802 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.171667418 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.169118795 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.660268083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.192887349 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.248036195 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.173351469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.425374361 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.508737663 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.474765501 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.174234001 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.178076346 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.173516525 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.181525346 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.635449263 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.503253101 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.17739259 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.171918813 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.659784747 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.174279346 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.176952284 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.179285078 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.416151859 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.172810998 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.17106467 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.186114652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.171242876 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.171336246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.289457984 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.277794131 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.651049602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.171703275 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.178371509 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.171893101 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.172385075 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.17635506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177692352 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.18870102 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.495772557 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.318966849 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.176748708 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.496886876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.656655226 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.186253127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.744018084 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.191395027 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.184967862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.390622591 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.173479446 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.178447143 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.647607935 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.17968025 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.172924873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.478655726 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.177171149 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.45152942 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.193736613 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.175256639 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712061041 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.179657054 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.180146683 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.173836648 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.189324441 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.174814075 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202366056 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.432833333 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.224330503 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.174352113 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.17363816 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.198507754 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.173288561 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.173984994 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.180886753 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.720491685 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.195201042 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.173948122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181870369 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.173844353 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.188917507 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.174699681 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.177331249 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442580108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.174084528 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.179683396 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.178281559 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.185728991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.174754488 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309505229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.181075447 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.451647147 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.180896206 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174571783 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.180724709 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175553473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.186321903 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.176143457 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.176767459 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.042015821 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.481741642 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.193762392 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.191746798 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175874139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190959632 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.177761113 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193747325 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.221337069 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.176008079 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934631562 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.197009529 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.197498879 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.175822912 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.18481021 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.177299885 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.200856102 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177832805 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.462649187 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.439651191 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.322835286 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.180429111 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.176943277 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9185841 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.209541753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.356628539 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.198135315 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.177726688 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427253445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.414411921 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.178023017 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.177181846 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.178659419 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432501489 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.177655814 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.489799163 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.698958773 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.19350698 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.176872277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936364204 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857941296 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.18418561 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.181770879 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.450405826 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.197690438 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.178335894 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.178735935 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178403804 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.19419907 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.198795882 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.189543921 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.178886083 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.179766568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.225504783 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.369712443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.196053169 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.189189726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.653365057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.201995888 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.179556811 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.202838192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.181871174 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.179321097 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.247753304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.185508356 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.19362908 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.180310203 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.190656979 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707678999 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.17974602 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.186229497 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.369270037 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847103855 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.19879972 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.181625555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.19478476 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.096611752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.677823639 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.181234711 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.455987901 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.18957674 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.217792151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181417621 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264860151 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.717080623 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.181044178 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.197589172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804393896 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.199541484 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.718923877 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.182458771 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.182183569 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.755540482 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.201833038 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.185691969 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.182271028 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.197159617 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480645571 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.185474579 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.200201803 seconds)
  done (took 462.152386758 seconds)
done (took 595.02676337 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.180203523 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.187419625 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.182802585 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.190641845 seconds)
  done (took 9.844514005 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.20028944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.192548467 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.197982709 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.191859965 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.198966006 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.193430877 seconds)
  done (took 8.281939812 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.18727508 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.193586765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.192660183 seconds)
  done (took 7.681091826 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.374649062 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.208874211 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.482920397 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.212525477 seconds)
  done (took 8.387697506 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.195979643 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.196798875 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.197192782 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.19908171 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.200933654 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.201851963 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.199410811 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.198855551 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.201160207 seconds)
  done (took 11.898049023 seconds)
done (took 47.194391794 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.049532419 seconds)
    (2/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.354541885 seconds)
    (3/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.282585001 seconds)
    (4/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.286654957 seconds)
    (5/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.342523609 seconds)
    (6/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.300694124 seconds)
    (7/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.971549121 seconds)
    (8/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.294892359 seconds)
    (9/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.223233834 seconds)
    (10/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.224208873 seconds)
    (11/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.199466788 seconds)
    (12/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.948664314 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.269615503 seconds)
    (14/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.098566824 seconds)
    (15/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.380918707 seconds)
    (16/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.225540059 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.220598186 seconds)
    (18/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.276110883 seconds)
    (19/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.195920953 seconds)
    (20/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.975080895 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.323104037 seconds)
    (22/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.323822074 seconds)
    (23/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.296460493 seconds)
    (24/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.323496629 seconds)
    (25/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.422799231 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.324903264 seconds)
    (27/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.23757077 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.190539403 seconds)
    (29/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.370934637 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.230459816 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.325718091 seconds)
    (32/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.203211743 seconds)
    (33/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.235126122 seconds)
    (34/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.276855021 seconds)
    (35/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.441650144 seconds)
    (36/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.382039507 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.32090524 seconds)
    (38/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.889505749 seconds)
    (39/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.278412525 seconds)
    (40/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.210380041 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.269539529 seconds)
    (42/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.36482726 seconds)
    (43/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.343464419 seconds)
    (44/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.285517429 seconds)
    (45/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.241972494 seconds)
    (46/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.224798556 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.225155239 seconds)
    (48/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.226501807 seconds)
    (49/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.001070954 seconds)
    (50/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.908421552 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.247038048 seconds)
    (52/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.188854166 seconds)
    (53/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.859393967 seconds)
    (54/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.195717099 seconds)
    (55/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.190774618 seconds)
    (56/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.365821336 seconds)
    (57/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.952174756 seconds)
    (58/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.213616246 seconds)
    (59/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.347785231 seconds)
    (60/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.244139181 seconds)
    (61/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.940381472 seconds)
    (62/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.25860706 seconds)
    (63/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.233105686 seconds)
    (64/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.389705902 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.338559255 seconds)
    (66/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.278598534 seconds)
    (67/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.193461815 seconds)
    (68/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.391832414 seconds)
    (69/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.343930714 seconds)
    (70/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.23396899 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.292385066 seconds)
    (72/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.197204607 seconds)
    (73/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.400885214 seconds)
    (74/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.194937751 seconds)
    (75/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.39078305 seconds)
    (76/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.350785948 seconds)
    (77/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.410761532 seconds)
    (78/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.259585935 seconds)
    (79/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.198130062 seconds)
    (80/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.207619117 seconds)
    (81/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.256518674 seconds)
    (82/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.303365034 seconds)
    (83/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.262904285 seconds)
    (84/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.349422849 seconds)
    (85/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.237732392 seconds)
    (86/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.099369581 seconds)
    (87/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.215707836 seconds)
    (88/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.900317427 seconds)
    (89/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.394690766 seconds)
    (90/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.343555869 seconds)
    (91/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.287099745 seconds)
    (92/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.226560818 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.329867954 seconds)
    (94/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.25908581 seconds)
    (95/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.388167775 seconds)
    (96/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.227660477 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.252586184 seconds)
    (98/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.344335741 seconds)
    (99/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.245090361 seconds)
    (100/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.3107786 seconds)
    (101/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.377066385 seconds)
    (102/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.359010619 seconds)
    (103/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.229414205 seconds)
    (104/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.194655454 seconds)
    (105/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.200505212 seconds)
    (106/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.479245202 seconds)
    (107/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.945505238 seconds)
    (108/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.397079009 seconds)
    (109/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.408410658 seconds)
    (110/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.197836694 seconds)
    (111/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.269812307 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.291241599 seconds)
    (113/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.310217606 seconds)
    (114/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.276799563 seconds)
    (115/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.33521023 seconds)
    (116/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.309946984 seconds)
    (117/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.866817064 seconds)
    (118/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.211175057 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.397212249 seconds)
    (120/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.34755154 seconds)
    (121/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.29527654 seconds)
    (122/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.261975745 seconds)
    (123/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.299313559 seconds)
    (124/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.224912235 seconds)
    (125/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.282949153 seconds)
    (126/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.109659737 seconds)
    (127/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.267313559 seconds)
    (128/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.309436665 seconds)
    (129/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.25159276 seconds)
    (130/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.365175055 seconds)
    (131/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.39493368 seconds)
    (132/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.338581991 seconds)
    (133/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.26457701 seconds)
    (134/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.345705405 seconds)
    (135/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.255685118 seconds)
    (136/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.203137298 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.232014032 seconds)
    (138/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.237986693 seconds)
    (139/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.224838404 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.398011553 seconds)
    (141/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.215662324 seconds)
    (142/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.310399325 seconds)
    (143/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.23221002 seconds)
    (144/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.307451055 seconds)
    (145/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.913671018 seconds)
    (146/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.210241233 seconds)
    (147/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.227214837 seconds)
    (148/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.979248969 seconds)
    (149/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.312122785 seconds)
    (150/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.219401282 seconds)
    (151/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.215124918 seconds)
    (152/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.4003829 seconds)
    (153/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.874350319 seconds)
    (154/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.262703159 seconds)
    (155/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.248595957 seconds)
    (156/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.538040666 seconds)
    (157/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.246895658 seconds)
    (158/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.337011728 seconds)
    (159/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.984011113 seconds)
    (160/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.271733619 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.251006369 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.291967897 seconds)
    (163/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.23557097 seconds)
    (164/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.537789425 seconds)
    (165/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.390344285 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.294307292 seconds)
    (167/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.352783503 seconds)
    (168/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.896280762 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.283562143 seconds)
    (170/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.353916932 seconds)
    (171/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.489349246 seconds)
    (172/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.330125601 seconds)
    (173/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.275118677 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.283657918 seconds)
    (175/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.965663696 seconds)
    (176/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.249721428 seconds)
    (177/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.232256462 seconds)
    (178/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.238458469 seconds)
    (179/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.278378358 seconds)
    (180/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.238581022 seconds)
    (181/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.397830467 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.232620695 seconds)
    (183/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.265582675 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.294656745 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.324757725 seconds)
    (186/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.202098779 seconds)
    (187/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.303096121 seconds)
    (188/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.314158566 seconds)
    (189/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.359704911 seconds)
    (190/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.309823729 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.410608506 seconds)
    (192/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.259369709 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.960163648 seconds)
    (194/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.216025433 seconds)
    (195/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.317000116 seconds)
    (196/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.293929194 seconds)
    (197/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.370914641 seconds)
    (198/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.387347184 seconds)
    (199/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.219116197 seconds)
    (200/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.35165974 seconds)
    (201/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.253027822 seconds)
    (202/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.315303933 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.360211272 seconds)
    (204/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.197555769 seconds)
    (205/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.26158306 seconds)
    (206/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.903098107 seconds)
    (207/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.417308749 seconds)
    (208/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.200234526 seconds)
    (209/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.309588559 seconds)
    (210/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.206388545 seconds)
    (211/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.363390936 seconds)
    (212/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.239980028 seconds)
    (213/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.228107485 seconds)
    (214/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.41512975 seconds)
    (215/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.906106154 seconds)
    (216/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.254450226 seconds)
    (217/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.024958546 seconds)
    (218/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.506577603 seconds)
    (219/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.294258775 seconds)
    (220/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.263108133 seconds)
    (221/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.427331202 seconds)
    (222/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.199857253 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.334879309 seconds)
    (224/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.268554117 seconds)
  done (took 342.217877826 seconds)
done (took 343.326204698 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.256336945 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.393715904 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.209711311 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.210752734 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254597357 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.176201314 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.252647787 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.218220159 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.220625191 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.219328227 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.177040235 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.221235936 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.222091008 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.249115286 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.324186991 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.231372728 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.211114479 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.216284092 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.260579406 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.276868301 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253712306 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.255963738 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.230671011 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.211385583 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258032603 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.257994027 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.216984771 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.202670612 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.217737407 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.259824875 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.203295419 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.217224654 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.269459251 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.267134766 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255681273 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.219296375 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256009292 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393848438 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.253917424 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.250746543 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.222355453 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.267747179 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.222399404 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.223781601 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.268903823 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.231632021 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259509643 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.334884846 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.203318127 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.17396833 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.261170089 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.27876454 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.222912335 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.168820457 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.214197891 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.335244302 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.218812626 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259525487 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.219642858 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.256909882 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.326575187 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.260283986 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.279505461 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.259974272 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.220802494 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.224971818 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.219836693 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.279259538 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.220066292 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25806389 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25812554 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.223613285 seconds)
done (took 98.754334644 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.341506819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.212954763 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.360208814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.217024053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.379827655 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.364936313 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.217088411 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.216836583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.216038402 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.052881421 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.218525445 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.216455337 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.212415513 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.217209815 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.347694957 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.218814984 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.217108874 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.946221572 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.218749345 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.358881494 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.210690332 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.217589743 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.217689674 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.035213843 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.213022993 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.209979718 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.359576845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.217495003 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.928537036 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.209508721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.211838992 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.925807094 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.361144258 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.238276852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.229206859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.229258634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.380637188 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.234099277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.34433888 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.34456197 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36075092 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.256641951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.20916665 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.212470244 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.219603989 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.218751061 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.219321935 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.246823349 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.213504718 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.218166827 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.949485438 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.229233859 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.227896159 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.219293434 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.21939273 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.237556989 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.22053344 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.21981255 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.362865454 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.221213539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.345965292 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.037684875 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.056621731 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.220286422 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.214017379 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.22049259 seconds)
  done (took 100.774595405 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.283794875 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.293452035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.32397183 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.232067247 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.26837318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.327466083 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.232821961 seconds)
  done (took 10.089513655 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.223087821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.220812568 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.266704097 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.267807298 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.221710919 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.372982297 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.222371688 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.230623775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.222105412 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.27093773 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.223316511 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.221361269 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.230571235 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.216520594 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.266506969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.229503144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.333938084 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.219451497 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.221685188 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.378698907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249785913 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.230189444 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.269630214 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.231328984 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.224144798 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.224683516 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.003952252 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.222753207 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.221646612 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.221509568 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.221087793 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.271904196 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.222855958 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.218807402 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.221897338 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336028305 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.221581742 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.223378811 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.221798972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.220477444 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.223735047 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.2226122 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.223723859 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.222920765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.223096788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.243881388 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.223687999 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.224028003 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.223020675 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.222481251 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.271422557 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.224013323 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.222927333 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.223945518 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.27635703 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.233064638 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.223663934 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.223517722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.22577289 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.223277342 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377530559 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.270678194 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.224166829 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.267419762 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.224004198 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.224232866 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.224577404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.224147692 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312507601 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.22405436 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270441227 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.22453153 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.403775754 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.245808883 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.226845692 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.224902164 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.224975581 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.224849575 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.21967233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.228555927 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.225764442 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.223075236 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.228979653 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.225667301 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.225716628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385670013 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334549024 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.225524799 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.235588463 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.230336821 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.226529917 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.275738947 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.226286107 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.225943821 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.275833521 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338902196 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.277310823 seconds)
  done (took 126.72882644 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.235481524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.236487036 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.22710858 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.251374584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.224993224 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.22401336 seconds)
  done (took 8.532749649 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.225535547 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.229647896 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.22870064 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.226943397 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.226078242 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.227114591 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.226749977 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.225938759 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.231239411 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.227117425 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.228495848 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.229319134 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.228222515 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.227877643 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.227360001 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.228109566 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.228332073 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.228445777 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.227448604 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228427752 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.222916864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.227342265 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.227702024 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.226129922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.232458977 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.228781117 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.246549544 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.228547767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.228239194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.231203594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.247421573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.229789547 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.226803511 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.232112192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.233520652 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.22747724 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.232858668 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.231218113 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.229509312 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.229246643 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.231203225 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.23054898 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.2301714 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.232482654 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.227975356 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.23316878 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.237184865 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.24922245 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.23097424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.232486009 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.234199336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.231340614 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.230763666 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.232483953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.231018905 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247637148 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.237072632 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.232009668 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.231538428 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.22914043 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.235929888 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.233133002 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.229679739 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.235206184 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.232254101 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.233651013 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.230314064 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.235648023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.233491805 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.233169991 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.234603771 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.234656957 seconds)
  done (took 90.78815545 seconds)
done (took 338.037599014 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.086835328 seconds)
  done (took 4.224262736 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.490764809 seconds)
  done (took 3.630902029 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.242528281 seconds)
  done (took 21.62097862 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.294004576 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.292802987 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.229369231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.233213215 seconds)
  done (took 10.189053195 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.459787153 seconds)
  done (took 3.598460115 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.228777731 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.227694453 seconds)
  done (took 5.59738577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.373457034 seconds)
  done (took 3.5136267 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.681800854 seconds)
  done (took 3.822399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.228951982 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.240556208 seconds)
  done (took 5.616565076 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.223234444 seconds)
  done (took 3.363194678 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.677157707 seconds)
  done (took 36.817638223 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.232378271 seconds)
  done (took 3.375200859 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.262922681 seconds)
  done (took 3.403374783 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.589675529 seconds)
  done (took 5.729376661 seconds)
done (took 115.645835026 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.225432758 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.224901619 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.227320096 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.225689748 seconds)
  done (took 10.042465742 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.286409598 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.285292588 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.286798559 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.28635902 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.286374516 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.28682386 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.261011571 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.258806081 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.286530033 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.287310527 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.286882279 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.287873996 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.287155626 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.260403873 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.287821815 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.287189744 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.287361528 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.289246652 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.261366713 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.286069642 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.234884884 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.286701048 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.286543366 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.235606741 seconds)
  done (took 31.818066028 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.748987344 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.30427068 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.386532825 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.284989491 seconds)
  done (took 6.867326602 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.312952039 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.313453358 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.325885409 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.365007766 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.377369029 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.325967471 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.261795593 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.256799497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.244462315 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.313674161 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.365986648 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.304371759 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.391442359 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.236165536 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.4428637 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.235578864 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.236603232 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.313977818 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.364768069 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.378177233 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.237979494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.314228337 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.315430808 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.306352851 seconds)
  done (took 32.68601821 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.246112287 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.252615271 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.239578676 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.254314569 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.240018844 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.240051649 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.238705907 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.24450246 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.237430638 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.238232884 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.239966148 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.252649309 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.242505149 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.239278173 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.248037633 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.240860806 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.24608114 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.243975027 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.240146199 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.246990795 seconds)
  done (took 26.016125586 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.227947943 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.228363249 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.580717704 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.485806612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.230112539 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.22850498 seconds)
  done (took 13.125987549 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.301300449 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.44706868 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.235383671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.556196275 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.642555863 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.236747526 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.237613337 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.470785716 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.754700126 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.726008563 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.296087236 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.302725385 seconds)
  done (took 18.352786586 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.241489158 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.234847704 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.243670603 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.250474531 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.285994321 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.254307375 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.242910763 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.230075474 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.291614874 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.30494385 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.255043381 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.287357115 seconds)
  done (took 20.269648233 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328530716 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234715942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236104569 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299325385 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250468043 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079327362 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232573968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.906874302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.258003351 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510262089 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238992412 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336089054 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492562461 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246842463 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23962974 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.203581162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468541994 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705413451 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240693546 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245032345 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273265837 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241725519 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24049311 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436717825 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257003047 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235010628 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.49946729 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235138715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501824127 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254060518 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247197879 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235878637 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514455283 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86072179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35319426 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430386014 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257506155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242745119 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.243882603 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.257797285 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252007846 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2427588 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.247845224 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236779624 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236464046 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239282266 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922278159 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.262748756 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.237465444 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237294323 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476328143 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338434926 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.2436855 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238831291 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258713754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238273771 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.245327221 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3806565 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838797444 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239135105 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249098311 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.243509219 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23767236 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2607289 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813591282 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.260913647 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.244561093 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.244105007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23805023 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237961734 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.262103404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237714918 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.263309684 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238063567 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903342701 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258449645 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239509772 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756791787 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24463321 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.244858572 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.469451266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236990935 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23806818 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.238274309 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238694958 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906907784 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24713556 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.246122648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284130542 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928553695 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.450614596 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276390224 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270919633 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463058868 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.234005042 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239301179 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.247887779 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245386234 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260313713 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913757108 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256292885 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.245007173 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497579907 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.449961758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240847179 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.220987107 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683513999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259968612 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.260317894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.239031912 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438880307 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.790297598 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275546957 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240394983 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263329642 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239429833 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944689462 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248211469 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.347292366 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244026255 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507617714 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.011849169 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241461144 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.309022905 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244599615 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24012817 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241740945 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247424379 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240605216 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.435180989 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262442287 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.256100465 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.240823265 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241904148 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.243198921 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250134425 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.248290671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.46615939 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24036613 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523948968 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240341548 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24096838 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241661736 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.465455484 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.242536254 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.583208107 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505461469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241637829 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248530235 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.259713733 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261832991 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346376375 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263296948 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.242219721 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.504552926 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.249337498 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.248771473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241966112 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250225811 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247793011 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.251971951 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240073294 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786898116 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240125011 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248824809 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133350841 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.259542542 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310778566 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.25135582 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439481653 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.259349069 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26396356 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.252427692 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.242951321 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473099613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.253395707 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.242870526 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326906875 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.684239047 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800776428 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274521173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.243858597 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.243757012 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.244043443 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244513595 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243805184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244068733 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437328898 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274601944 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240745288 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.807062813 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261183674 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246095054 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.258154914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.256646533 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.253449784 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245397679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.244630413 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250883393 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252203707 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.262010772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389970016 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.261890457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246270033 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.764672214 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254029407 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247545575 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245237774 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280542035 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245864287 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02113791 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524205341 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24596566 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499619438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25211519 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.283761597 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.246022034 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246765338 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268198439 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.256677401 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254890301 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.258373754 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246256721 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254424321 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826971226 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936335327 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74213739 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268480754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.248777011 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252561757 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92775736 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264985444 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247142 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46988277 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.940643748 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26532672 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692200586 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.267534065 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956715147 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487290359 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486622288 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251179385 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.248975597 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507650055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466914994 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283397298 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248189523 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252370428 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.243332637 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771976286 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272616883 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333883091 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930045146 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2641686 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256891574 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.306184457 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247610857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621668681 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265596175 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249465707 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250279282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260550211 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471191313 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272848476 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249212248 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821909126 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276484091 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.698272252 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266309103 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.445461175 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280827678 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.263213822 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.258556917 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.256171422 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.509233471 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489685908 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258074064 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259996164 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752126329 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.135740782 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.258573297 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250568056 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962695809 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252635984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519669136 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.258020064 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.262384843 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257800095 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251487481 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2518464 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.251259595 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258582301 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226781395 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711884313 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.26453093 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259704679 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258096225 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256343485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.50762976 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.268368511 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790994533 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501088307 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25677376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280099904 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.258444806 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25345876 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.254057586 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252066064 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253097743 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265459573 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.475729848 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261824684 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.248603463 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322640127 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481003265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25323411 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259753724 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480960464 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.269512287 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.273217953 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932053834 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305621174 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266323316 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259746593 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260025215 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.296954178 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340309916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452129069 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.280308239 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.264138495 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627522819 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277348879 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260350144 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.270216538 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349328702 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25909428 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.265611826 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.035930436 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797169755 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954271673 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.803916199 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516687762 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261300146 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261852615 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253157879 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415206902 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253663736 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532395407 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248626232 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.245447855 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272385902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249721171 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254014131 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461637782 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521769284 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245932059 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245844793 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249993388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.242281552 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.253715834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.454196584 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704566162 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772731359 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250647169 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245610844 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933350855 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541986669 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246663857 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248034739 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246049525 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.264126648 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256037089 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.257087595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258407388 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396876726 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486640565 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883061677 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.275008845 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.278806464 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.767789494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247962473 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508750272 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248726296 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.453641496 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809112797 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918088086 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520052839 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319891759 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44713071 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.266054151 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411747612 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.248953418 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253378847 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249957986 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250020441 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.249575133 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.259826781 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796995267 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534693853 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.256191143 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.249258598 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285423684 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.2594485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.47332026 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929207288 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474082791 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.259498584 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258867225 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250787505 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800056905 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509190163 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257686013 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.256822378 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473129232 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.271844429 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275514391 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.941090786 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.251172959 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772489469 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.225090349 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273856045 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250585409 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.908221777 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803975805 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.275882851 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715225698 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254898427 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253377943 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532872219 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.259761817 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251215197 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549707151 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.257685117 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252040506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456942901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.80945099 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991441849 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.273179278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262439571 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.260570696 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252856112 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292463272 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25252016 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255286031 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.648887931 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270730801 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253746937 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267301318 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.257597329 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257286872 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.259264223 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254162552 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.261232502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.260843212 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.253374345 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260023565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385383146 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782108305 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271873538 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.933149239 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.57930171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.509679826 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253718394 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.254983299 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.260197185 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254040971 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253737057 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254908785 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.259801591 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78166593 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.256363541 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.270129268 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261747446 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.255154703 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466152467 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264951177 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459398479 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27260473 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277288569 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.250998953 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255602697 seconds)
  done (took 913.759767994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.277635682 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.272556734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.280727746 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.258586014 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.285451127 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358937373 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.313324153 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.354627068 seconds)
  done (took 19.568906666 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.253459306 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.281676554 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.26501325 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.265803395 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.255938472 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.697252584 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.284602759 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.264655792 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.278336844 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.255446922 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.258068055 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.254203347 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.267756722 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.258274149 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.265519272 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.268791971 seconds)
  done (took 30.842414109 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.066999783 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.329099267 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.836497345 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.296447607 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.287475655 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.258504975 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.405200301 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.268677569 seconds)
  done (took 24.916690605 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.265230928 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.265138802 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.265086529 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.265886926 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.266209125 seconds)
  done (took 7.495464783 seconds)
done (took 1156.903358368 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.264324052 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.264003218 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.264086162 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.264098219 seconds)
  done (took 6.224328024 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.254508019 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.25406818 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.25341997 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.266729593 seconds)
  done (took 9.197499055 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.915231853 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.844572117 seconds)
  done (took 4.928420134 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.730615483 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.734489348 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.729640433 seconds)
  done (took 6.364262424 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.539839523 seconds)
  done (took 2.708593241 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.159213556 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.255295066 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.917744833 seconds)
  done (took 7.50118942 seconds)
done (took 38.091870935 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.25735042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.501047715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412450392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.259569658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.433700848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413592908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.994114173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.256125272 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.263868241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.264962017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.265321862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420386458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.039855732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.506254901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.042119111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.506950219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417870864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.256174191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.282890015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.25538876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.992159277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.260822327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.256658157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.276831553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418346268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.403320444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.257018272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.52312177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.257969462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.2590447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.404726685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.263033728 seconds)
  done (took 78.793493209 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.257921317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.257977412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.281108979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.258807906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.267087457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.264140699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.260201813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.258241779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.286681505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.262166355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.259602014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.265080357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.261014154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.258713562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.258833392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.259740789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.259614817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.258706202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.266910477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.259929531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.261209605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.259973646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.259129231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.276010436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.25883702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.268108374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.267367411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.260290734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.274912304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.284228853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.269184315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.259288352 seconds)
  done (took 73.634395506 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.260521931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.273256832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.260814617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.261364949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.260456596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.261750661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.261284173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.260735617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.279883704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.263191651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.260928453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.25932849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.264381867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.259585956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.26211756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.266473783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.270046239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.266425876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.260816701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.276654561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.261840509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.259808911 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.289678259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.261111945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.284890913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.262985123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.26123642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.275530096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.261889065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.26143481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.264253688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.273316329 seconds)
  done (took 73.682242271 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.544953472 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.271539633 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.274720008 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.266020155 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.273683533 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.272139958 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.265423215 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.551513289 seconds)
  done (took 13.894295109 seconds)
done (took 241.173183748 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.266113259 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.749837414 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.31267757 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.265624049 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.291332851 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.291853948 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.475318033 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.308903417 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.478883267 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.285623353 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.303168595 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.268112368 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.008603579 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.409630433 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.098414349 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.211423692 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.088892122 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.264010855 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.826859563 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.537599438 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.296841646 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.267832406 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.093658029 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.113519312 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.263134472 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.345187925 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.361721614 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.480429735 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.422927045 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.344166517 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.7674184 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.270317924 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.266970005 seconds)
  done (took 60.212889063 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.269883716 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.403831496 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.273394544 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.273540088 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.406623528 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.291542039 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.270551511 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.273002211 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.274815713 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.275219728 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.274328302 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.274331936 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.276261191 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.33231847 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.409191994 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.295102277 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.271229301 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.401002291 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.27128367 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.277250319 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.328989672 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.274705704 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.276915385 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.331545768 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.275618334 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.275537969 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.403195518 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.294930217 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.285570034 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.402256666 seconds)
  done (took 40.423073315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.275743657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.846390831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.989537431 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.279980623 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.273641994 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.278094711 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533116784 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.277032571 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.277231393 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.276387894 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.742725319 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.293278706 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.306347659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.015791812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.276768752 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.277436431 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.277616879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.274652032 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.869019666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.283659164 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551474408 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.278182492 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535281821 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.287122067 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.296056148 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.276368829 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.280434502 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.088191261 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.295044147 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.744804209 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.981359181 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.535586931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.040661853 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.025306423 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.960659341 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.283999001 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.280397112 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.749390577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.29362694 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.2764979 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.534849745 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.28140212 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.001840082 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.972398776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.297485041 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.279214576 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.101319546 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.765466833 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.510160714 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.286524979 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.027754513 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.284353191 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.281062282 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.278503804 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.497375284 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.278958861 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.27637415 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.113189783 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.301042931 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.535120674 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.285243643 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.27747409 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.860713648 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.277472434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.856901943 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.282657508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.286084272 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.296219992 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.004438227 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.284736818 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.987512018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.294042592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.28099049 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.743555886 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.873356062 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.163184152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.281162257 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.860419524 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.070263813 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.556886514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.282589969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.056780037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.556600481 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.281139392 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.282386726 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.283803774 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.282219769 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.360666048 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.534511933 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.937863044 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.984049355 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134758345 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.559064916 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.287561488 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.280172734 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.115956518 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.300630864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.282084457 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.005946709 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99176932 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.300888638 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.288149081 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994668462 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.303136556 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.541254167 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.285462091 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.013287252 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.285870243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.360691655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.282479771 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.285897414 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.301767378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.541011869 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.284564611 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.282313099 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.972571472 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.781255046 seconds)
  done (took 180.80220627 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.27430435 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.273249526 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.280207715 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.274284231 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.273457145 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.28249874 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.275723458 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.274276927 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.280711002 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.274562321 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.273752218 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.284163714 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.281362547 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.274923069 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.275920094 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.275696852 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.274444301 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.281696953 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.275168968 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.275440324 seconds)
  done (took 42.722210625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.284074154 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.789967215 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.778781517 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.284829656 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.28440685 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.282953653 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.33182261 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.301090243 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.28572092 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.552913835 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.43819072 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.303946269 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.28491676 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.285221937 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.761571291 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.289603812 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.553811621 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.789857008 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.28640154 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.789044116 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.285505718 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.286382839 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.281939157 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.790800946 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.574210948 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.542229626 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.338709275 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.807216612 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.301301309 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.286200437 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.790346346 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.287887965 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.283340968 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.800637705 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.301915896 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.301036284 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.286792404 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.336039987 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.352133493 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.571417212 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.277968655 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.546949424 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.299942703 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.472610851 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.289823176 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.285866356 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.798054235 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.303513875 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.286709521 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.288978202 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.293751094 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.775232663 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.303945823 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.775469858 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.303257656 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.289153191 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.793355477 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.773087113 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.782407761 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.443196928 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.303777574 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.542965875 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.293936322 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.805361337 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.307235513 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.289449767 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.290667074 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.441808241 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.818337218 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.547800702 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.565468694 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.567508442 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.293136468 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.343706638 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.305073461 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.189068319 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.346114623 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.703972241 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.567307293 seconds)
  done (took 117.86144868 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.543749938 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.394500737 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.66281007 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.875376047 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.308892703 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.417925026 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.393703964 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.528878018 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.297933746 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.36298612 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.882292756 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.398657861 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.033888907 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.365951216 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.403680678 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.436092428 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.673165461 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.238776455 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.980887275 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.860024244 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.313034629 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.382324533 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.830063347 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.488537411 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.285910494 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.869504469 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.205863279 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.927302656 seconds)
  done (took 50.555060893 seconds)
done (took 493.751718355 seconds)
SAVING RESULT...
DONE!
