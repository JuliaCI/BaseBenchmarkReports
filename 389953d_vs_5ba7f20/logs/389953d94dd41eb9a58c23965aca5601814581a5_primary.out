cset: moving following pidspec: 5480
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.040069985 seconds)
loading group "string"... done (took 0.639918252 seconds)
loading group "linalg"... done (took 10.172999542 seconds)
loading group "parallel"... done (took 0.196850399 seconds)
loading group "find"... done (took 1.599493663 seconds)
loading group "tuple"... done (took 2.303378285 seconds)
loading group "dates"... done (took 1.594168922 seconds)
loading group "micro"... done (took 0.259171608 seconds)
loading group "io"... done (took 0.610944846 seconds)
loading group "scalar"... done (took 49.535319725 seconds)
loading group "sparse"... done (took 15.091831061 seconds)
loading group "broadcast"... done (took 1.325693258 seconds)
loading group "union"... done (took 13.542849364 seconds)
loading group "simd"... done (took 2.883964075 seconds)
loading group "random"... done (took 11.600864273 seconds)
loading group "problem"... done (took 1832.68386355 seconds)
loading group "array"... done (took 28.080875212 seconds)
loading group "misc"... done (took 1.230227767 seconds)
loading group "sort"... done (took 4.143855237 seconds)
loading group "collection"... done (took 20.505091109 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.782988308 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149642192 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.226913959 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.384017744 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.244772214 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168637774 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.178980028 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.590078962 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.994155977 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.301376688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159895593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.604386239 seconds)
done (took 6.473282538 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269183887 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.39981178 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1860857 seconds)
  done (took 1.215079104 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.083326656 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.190089355 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.119474679 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.117876686 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106676163 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11770149 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.117593823 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.117914499 seconds)
  done (took 1.520275648 seconds)
done (took 3.725996873 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.573931248 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.895993288 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.547948346 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.18326147 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.209055518 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.189684776 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.331738004 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165393383 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128867792 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112495293 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.211589391 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.368861147 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.535325808 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.021316951 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.113260857 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.116855551 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.103699284 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.716051257 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086975801 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139088052 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.610649432 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.122032223 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124676336 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.132158362 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208612074 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142098361 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.177145456 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099250017 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.694096493 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108369001 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.243456085 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09101097 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183825391 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.260433141 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.088041817 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113960511 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682234254 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19256033 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124615084 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.122651159 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669953881 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087484809 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.249517344 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.112658772 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.119437414 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189333257 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.130206625 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.087824179 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108486146 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107413386 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163940662 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.474501226 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111999804 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176134459 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113895028 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.714010066 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.107374027 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.161819113 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.144506464 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.113395526 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091092165 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.119392442 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160304007 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120497721 seconds)
  done (took 20.640908464 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167928876 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.175411578 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098387492 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.147304153 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.152585106 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100463941 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104501631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084793498 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.134454594 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195957232 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.147022537 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193260686 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080979787 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.105665163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.149255518 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255608872 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112353954 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.128197809 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.105200693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097499686 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.147719351 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.118409421 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114429291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.116995557 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175262505 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209303792 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114958008 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128421037 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.103719743 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.122659639 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145374833 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155783174 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09637185 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08962867 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.206584572 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124471242 seconds)
  done (took 5.557638601 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232685102 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124738125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.245307526 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187125394 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155009961 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190236737 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150713258 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.311455016 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.262442922 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193012432 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136464691 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117953782 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098940803 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086682711 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099237947 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732422068 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191573109 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157644945 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156915861 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111404887 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103639364 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392500956 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109844145 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088797116 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108250363 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083776114 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.229018495 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108852407 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.385616128 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126104693 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0969867 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138650095 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212242707 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143625024 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151740285 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093876784 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10391527 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228828891 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116928275 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099030166 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117450143 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140089392 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141378216 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106462702 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118293512 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.253870757 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089406281 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128518205 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.162907401 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.220358549 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.138729216 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.142546704 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08758636 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.401501264 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104351467 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110810754 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103410694 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.309888381 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.145527241 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.163292672 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087702245 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101805801 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108895176 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084195506 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.457398211 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117898045 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.006098088 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.090419525 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.177584153 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106256835 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110438924 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108436028 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091842652 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122946254 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101888758 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084833434 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102605618 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099004566 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091434955 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103695129 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.125219921 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09247485 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.101158971 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153676396 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.123624308 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120099905 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129565707 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092469288 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.101764097 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132675185 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08673712 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106709616 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.179853227 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111221902 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.088860598 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129639051 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106007432 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.148723154 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104416615 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.220288215 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088779311 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130829148 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107849563 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132589844 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.130023373 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101406597 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092506958 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09987232 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086951983 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167857161 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087126945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101370642 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104630923 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103144253 seconds)
  done (took 25.386208555 seconds)
done (took 52.213281715 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.523760274 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.126430117 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.126956963 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.126008282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12470835 seconds)
  done (took 1.745630987 seconds)
done (took 2.43560666 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.402894077 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205928307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127486517 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.203505902 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.113928739 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.228213311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.191832975 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.127785035 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.22307644 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.106988396 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.199119496 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108340674 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112005991 seconds)
  done (took 3.069165582 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106667948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.130079991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091516699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120973821 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101045373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105432912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118969975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137992958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103709157 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111990594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086391373 seconds)
  done (took 1.899809937 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103393948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124857548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091225717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118138044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084765507 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117239114 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116262609 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111373544 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117892526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113922221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085622019 seconds)
  done (took 1.874504754 seconds)
done (took 7.52388686 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.150087998 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.59570219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.157864389 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20734192 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.395615677 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.252529333 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.586316263 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.170099511 seconds)
  done (took 11.423584004 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.182680619 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110068031 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094917897 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10858595 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094365916 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.109929576 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107950807 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093345423 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.106954795 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092981801 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107676008 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.106725953 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094885824 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10703988 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092987686 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107274935 seconds)
  done (took 2.476439177 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145457906 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14472959 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1009228 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.121151481 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112858217 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098106734 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.115893457 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113638144 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097782907 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.11258262 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119559782 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103074407 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.119075304 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110975248 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100796329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121003472 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111433825 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113860999 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100952592 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115770999 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.119238362 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099231609 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.118734277 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.118898607 seconds)
  done (took 3.532333946 seconds)
done (took 18.121568492 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.181865581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106880259 seconds)
  done (took 0.987047305 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.157047477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160056907 seconds)
  done (took 1.020026056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.121789106 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.105791787 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146077289 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.12323645 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.104980922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09054655 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140047605 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106234454 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091352348 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.105362221 seconds)
  done (took 1.842797052 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097356982 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109604413 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118328143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154805805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103749141 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.111223509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111286687 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095439793 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111381995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.105755504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10096108 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128960346 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.11303408 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132257191 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097467811 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115429947 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118754634 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.113332865 seconds)
  done (took 2.745986944 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090716011 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107868242 seconds)
  done (took 0.903825298 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096737495 seconds)
    (2/7) benchmarking "second"...
    done (took 0.10710227 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096335339 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112230766 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.10794571 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092252626 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106436876 seconds)
  done (took 1.425246757 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.569327927 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28528457 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.392793428 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.129857543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152306966 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.40937594 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154494218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.124677945 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124901645 seconds)
  done (took 3.093329877 seconds)
done (took 12.721454386 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.098621541 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.245200288 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621044082 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131322787 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090486167 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165796228 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.327193516 seconds)
done (took 2.390723184 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371332621 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165446613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.098733828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.104848479 seconds)
  done (took 1.446402844 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086192558 seconds)
    (2/2) benchmarking "read"...
    done (took 0.114124355 seconds)
  done (took 0.913413178 seconds)
done (took 3.077166262 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089975573 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.138465856 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103957723 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088776828 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.104980933 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089220696 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105125063 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087945993 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103866502 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089043771 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.103747022 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08831325 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.103213706 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.102394102 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089280858 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103431029 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088292048 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103352042 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088574305 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103733679 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089655052 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103543145 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089372016 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103488215 seconds)
  done (took 3.113090623 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116096311 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.108736647 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111329243 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09592537 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.114619882 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111165964 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095938308 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.107305403 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111810502 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091939903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110680849 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111411165 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092795472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.111888157 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105994327 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097874787 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.111566718 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106915489 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092861236 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.111276393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.110300112 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093422872 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.112791423 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110496293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097446922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111121225 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.106471294 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094190307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110282449 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.11043424 seconds)
  done (took 3.89414131 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098687458 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.100967311 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087226158 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114527061 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086798989 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.106744104 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101809363 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088347544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.102325265 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088351439 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.103042488 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086326114 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.101721533 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.088339709 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.105034081 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.108402444 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107215286 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102001619 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086054214 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.103608175 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106814164 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087635069 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.105194182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087263071 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.101271608 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085758523 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.102085461 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.087004332 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.10281282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086212103 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107614066 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109052254 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087128732 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116977425 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093485877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.102379941 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.110701965 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088562104 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.102939553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086274547 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102040431 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.086970195 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101815883 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113467024 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090917513 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102359093 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088077661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103286557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.087969442 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.105673337 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086683988 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103324148 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104388076 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088941604 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108064156 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.198692934 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.103021377 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08670945 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105029082 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102828602 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088017912 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100957655 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094311316 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.102959971 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.128012452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100970157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.101527187 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090254714 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106812995 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094825862 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.105290595 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122507 seconds)
  done (took 7.9524279 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093839827 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115923059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092163166 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10808936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102569856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087597518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113238256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08786409 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107472338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123275546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088439162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106473234 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091550332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10644216 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102724308 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09236106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114014515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087830447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.102732194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105724449 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088686275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112739697 seconds)
  done (took 2.959908597 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.263315519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098079506 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.159214308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122982448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.128040839 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122625553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096087377 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112619567 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110004446 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102115132 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116868056 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11072857 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.128671623 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102514709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117178009 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118378013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095597507 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118346072 seconds)
  done (took 2.952850008 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108000063 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.109407997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132032823 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093654357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.1097365 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092814873 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117815747 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123261135 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10802514 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094033056 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117411349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107604722 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094805107 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109064882 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093440435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109565424 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.108662212 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094213021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117619431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116504011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101737811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119661971 seconds)
  done (took 3.112261031 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110400859 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108322225 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.145302285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097250762 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.105462272 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104045289 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099807823 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.109096477 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116038773 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093805544 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10934968 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088699561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.117364831 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108767484 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101491821 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109065522 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108380891 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093415106 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109381721 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089995779 seconds)
  done (took 2.862834138 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185463786 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108143629 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123379289 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135798623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122136721 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10940744 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135859899 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122746198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10735207 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14013229 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.123750104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122635488 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134995982 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116105773 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123543447 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135716196 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135751765 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12102369 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123866778 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12477269 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139248335 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107863006 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135229499 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12345133 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122806995 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108668925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123625908 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131901474 seconds)
  done (took 4.284150139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091946925 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104796082 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091531821 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105163778 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089921114 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.105696999 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09046304 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105680905 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089807563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105709153 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.090076008 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.105548898 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105529669 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090965619 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106115256 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090663494 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10550974 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090447989 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105534108 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090369859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.105280963 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089866484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.105447004 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10555365 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091863512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107341349 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091105521 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105751062 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089736819 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104974314 seconds)
  done (took 3.696138851 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105805888 seconds)
    (2/2) benchmarking "in"...
    done (took 0.134524532 seconds)
  done (took 0.979561091 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091754109 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125375817 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087570904 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11310121 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117620424 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091866265 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118033551 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116499395 seconds)
  done (took 1.602934106 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.159577352 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159394736 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098328899 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121033056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158012778 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151209344 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176100153 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114359023 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094782546 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.105059398 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154585239 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102635055 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09767992 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108903108 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096364541 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119906296 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104484354 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102393332 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115843889 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.109124663 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097541985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122602906 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115375555 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102920872 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106682869 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116047181 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.103956505 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120270416 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109109959 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.101615362 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111479416 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086894809 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111641803 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.112529566 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090112327 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15653923 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123929546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109968426 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098141314 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113731077 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117372528 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.089945326 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115315471 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094295741 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117497183 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.112600803 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098279818 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.104656258 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102973628 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092664384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104680333 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091700816 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103905817 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114201335 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.099523894 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127469396 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108933597 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092915975 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107785936 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091975494 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111296773 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10788909 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100169963 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.111861014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114334227 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098636506 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113239462 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.104967287 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088498207 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106006679 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.099618304 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.131143286 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117524002 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096903153 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114225097 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.106510671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094573449 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113954957 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112144175 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.1008228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113638079 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100218976 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115720766 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108306754 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.092252314 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115097721 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110345203 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095942022 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105426153 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127268234 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095854908 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106313998 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089323053 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116427324 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108532623 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096192863 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104337562 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099273929 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.105119852 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098177988 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115094313 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111611578 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.117669401 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098435158 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116050588 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09737255 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149048584 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110408711 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108184129 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088915482 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122483316 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089678992 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112672486 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.103374877 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094570873 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110125854 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097541614 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.117507604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.109172858 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09645482 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117474923 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117679289 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094652571 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.105212752 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092073301 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113458218 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118443702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101069806 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.111800401 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105362967 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089996815 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115824479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096752711 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111996978 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11323723 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095153786 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.105324887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090190672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114613221 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.117732202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092072836 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112539175 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116644851 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.096523024 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11206891 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114597359 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092379215 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105552002 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099992423 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110214188 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.105439238 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102484071 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109290999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.109653443 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094241751 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118757788 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093305895 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116105991 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110396402 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098863169 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114368596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08893079 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112922748 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111134855 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103905885 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110555357 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10628471 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090096358 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.116126301 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089911315 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113464357 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08783476 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.11180046 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115343202 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.090765779 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.112682852 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091782084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127190426 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123868496 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105748693 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11444302 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.118408247 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09572792 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113385429 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.112674199 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099504204 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11534527 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09832613 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112569168 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113893193 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091956746 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.108073198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095554478 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115780603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106324362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.090080927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104874119 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097221189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.118446489 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114985484 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098524522 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111175778 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113334861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102900413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111352544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095934149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106244247 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113774626 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102568305 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116402862 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098864078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.118815804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112334541 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090152707 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118678915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110908141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.098754336 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.107606773 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090518786 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106650392 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11631877 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095450666 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109971666 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088638047 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117561596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117573488 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095356402 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106236619 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097126282 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122283087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108889487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098326634 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111571548 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11584727 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109299388 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106590506 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110220195 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.103253792 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.11482875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.105411898 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097522483 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111977063 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093145156 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113269876 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094525725 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112282221 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116966202 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095053376 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.106736838 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093184446 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112681281 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106004917 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091842404 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117503394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111217542 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093934909 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122425236 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116057919 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098117881 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114470449 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096630936 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115392782 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115769818 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095400398 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115584762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091504822 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106956615 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110591131 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090079467 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.108306845 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093140549 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115978785 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111531593 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095915498 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.114031021 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119152122 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.095291597 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116622865 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13571899 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09101313 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107263718 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11228592 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097201954 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.11052555 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093994073 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.108818351 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117971764 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097014136 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119194379 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110753737 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.090814858 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115897828 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093895068 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117670558 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.116545269 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100201588 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109414371 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096637401 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112207638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122012977 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090948065 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.120864002 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114664644 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097462076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111689607 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112787368 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.093265576 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107545064 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094419989 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116761655 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113817883 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098138036 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114954419 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.095765129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112351603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108775002 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099529586 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.113605956 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09979576 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.106739767 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106498374 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090058307 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115891204 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098192736 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.116205471 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108573763 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095757962 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11700788 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096532227 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.106866365 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11879587 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101602413 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116273147 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121280656 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089663414 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112453975 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124303284 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09069171 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11229485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092019747 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108380998 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100512783 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.116814945 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117888951 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095563614 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106900035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089743283 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.116640673 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.112648866 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090299321 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.109975131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09873643 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109509759 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113047367 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099686716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116045038 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09972006 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116242628 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113622423 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094998144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.115869721 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107641393 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091802633 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10833216 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094976564 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117237538 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107484782 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.091538882 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115116316 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094707333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113073839 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098184151 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111974282 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119181528 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098741431 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112892367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120848121 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091298894 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112874808 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0980868 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116988177 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106185018 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096382393 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114782854 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100759703 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119008193 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115860804 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097935198 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1161201 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.109051428 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098490048 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116227287 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098579882 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108944979 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116315155 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102603671 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.109702041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.096152252 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113467715 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109810175 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097124218 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117824627 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113303841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103178624 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.117148315 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095691075 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116831925 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116213202 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098211159 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118606426 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092905022 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117309566 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108311986 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102636258 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115338815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117774814 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093875443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110059557 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097755472 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115995916 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113786088 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102639725 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118469135 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090033939 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107786339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109348668 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.096226011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122252602 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119499906 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.097325453 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114834092 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09211919 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.109091199 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119164021 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091296815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111675778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098019767 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118121021 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112867242 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092321576 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114966994 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118754526 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102293721 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116885963 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091866333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11665108 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119380544 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095910053 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111241948 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11246873 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10123786 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.116325177 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094009557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109312827 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124013927 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101236586 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119081381 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111392386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09866197 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113406145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.091948362 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12010339 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114198631 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099185814 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114605254 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116690275 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108335742 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108696814 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093925299 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124927815 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115699177 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.101837626 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112773749 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113996952 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10127428 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118424437 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092620036 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109928048 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110464953 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096278484 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109107983 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092394221 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126746046 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119734906 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.097141566 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116435106 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115773584 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.093665169 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.111367758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091507191 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119306021 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094948347 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123834593 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109167751 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090565634 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111746021 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116238171 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098060691 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117120023 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092286894 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.111714896 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092117417 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.11513727 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.123081587 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097043385 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117076955 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1151074 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096790538 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.11176948 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104685253 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.110670678 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115252684 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10885387 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119798591 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116256335 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.099991473 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121634757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118396699 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093797358 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119041845 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.097480099 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.117449626 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119020823 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100840317 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13167292 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114995184 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091248567 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117472674 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113276841 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092751435 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.124450857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101392333 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120491436 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11721845 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093989464 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120650493 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122214469 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098936989 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11585036 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114725946 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098442119 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11395115 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097824327 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113662384 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100737588 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120043836 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118038895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10265942 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110669668 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125298646 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.104878498 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.121504027 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090779608 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112040133 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109538876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093326907 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119296062 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.093607339 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.116461603 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096383762 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.116888588 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117728374 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098186224 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115695641 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119112817 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100352153 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.109535484 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100670224 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116685066 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1173076 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091958956 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118113495 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100743841 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121466993 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124649524 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100226862 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116174558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113075175 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100360292 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.112182878 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099729484 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118055315 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113728803 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092343195 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11930321 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10335438 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117500421 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120146817 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102953007 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115947159 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100121434 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12316511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111100376 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093367201 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119509961 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093105855 seconds)
  done (took 65.134655449 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.172393935 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101669527 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112845496 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094308554 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14395635 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113643555 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111428991 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095620069 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113784877 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128760658 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094222763 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112502234 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138377209 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144723713 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140839066 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112445359 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112824635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11227105 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093571304 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112932674 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137561417 seconds)
  done (took 3.311611354 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119958675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.134241007 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131862555 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13531681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123866865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111644572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.130658884 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129929108 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.133946072 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12615305 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134536659 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111576054 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127045928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126105633 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126117205 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107571348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136759912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124849544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131977437 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.130687027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108903934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131397867 seconds)
  done (took 3.580623661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.106287237 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.117971702 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102133173 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11443269 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099414486 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.115606095 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123715563 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095532431 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.123587755 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095964773 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.11446539 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.115186025 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101637204 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115151435 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093733998 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.114559316 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122532088 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099619962 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.120028829 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096111822 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140580294 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.115834755 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09648123 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112757923 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.129045886 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101950554 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119220764 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099240023 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112390532 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118956747 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096176788 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.117935549 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09981273 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112668866 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111448246 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10092085 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.11893354 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095855521 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.116026087 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.119200243 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09801975 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12045671 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104962275 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.115933078 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.114509477 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.099410932 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.119727634 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095711887 seconds)
  done (took 6.102178489 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.156926357 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.175371509 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.110399681 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142953319 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.142374402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.13392462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.120341305 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158992112 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10070372 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122368967 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.141456301 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.139797095 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122512363 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109953376 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.128600708 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126788205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107830001 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120795902 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128854469 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102048971 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131303693 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126059912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.13590646 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13497431 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109111889 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.125873635 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126636148 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110290564 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.136599187 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.13060425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127178656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107975756 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.139864316 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126037975 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121382285 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106418244 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143947301 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12766748 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125505756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100372064 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12213557 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126443359 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104523985 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.142389757 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122672803 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124321422 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104847886 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121430501 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.141058018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108244703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.134334559 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.139365375 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124848776 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103274157 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128757509 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137967452 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122077181 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102194988 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126986262 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.140647117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1233063 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110929594 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.140571484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121447372 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129808409 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121710494 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.126221723 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125397411 seconds)
  done (took 9.535644602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111044667 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.144390923 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140487401 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139089044 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105986852 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127030991 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.125580349 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125917502 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107599925 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13501931 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126382148 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.212523101 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119159211 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132227465 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106932882 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125818014 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.125059717 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105568855 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126060823 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127390307 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125784564 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119628721 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.127609352 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137962158 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14134926 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11909879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107274759 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126355271 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13853848 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125846165 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141962632 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108118516 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126588106 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138776212 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141345541 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105930335 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116339563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125964233 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107042507 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12698734 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118697419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138935724 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107065136 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.118914406 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125416848 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106313966 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.138772479 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140614615 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132716595 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134297117 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126401478 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119268583 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127507549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125865117 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.139570741 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148249334 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138710971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138408815 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10735016 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.139099762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138963741 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.149356824 seconds)
  done (took 8.761941689 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097208442 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115876302 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096690479 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115612044 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096957314 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116967174 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097200531 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.11594915 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095168976 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.116233288 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115358382 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097286959 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114572306 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097707317 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115765501 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096759392 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116021541 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096026184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115603046 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09696188 seconds)
  done (took 2.952911827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109579214 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.139111609 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119173888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109487854 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.120762019 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128364382 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099393101 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120073101 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119526632 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100664295 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.131786261 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131247126 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101604717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.128008076 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130648885 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.126924368 seconds)
  done (took 2.747913525 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123976512 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133121747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174933375 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.123691294 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118057279 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108457715 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.117333343 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095122029 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.116642417 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125699117 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104320699 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.13021848 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.116953495 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096326633 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12132432 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105251031 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.115641317 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124211041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.098230568 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.176882495 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.126818907 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.123422534 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099210923 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12039425 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.123602216 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.107758144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128599703 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097485669 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.118622841 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.118107076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104159711 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129067274 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.116208356 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106672782 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.115763992 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096919015 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.117707335 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.118062228 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104989813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.116807768 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.115063868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102750053 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.117672841 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.098669471 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.116299262 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118562662 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097224088 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126620079 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102789801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.123961433 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.11737545 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106304608 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125770365 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130695833 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109107283 seconds)
  done (took 7.255620682 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115232354 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121979588 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.125560355 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095146623 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121189686 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108467607 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122930872 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122386366 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103156962 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.114198119 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102211488 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124228267 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121999274 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101825683 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122148129 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120911145 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095642116 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120966647 seconds)
  done (took 2.899861063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106774308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120173783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105265654 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120128595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.120164007 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100534 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114802797 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.095841066 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11576438 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099503326 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121542713 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.119623813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096855088 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119460751 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099466995 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120138415 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119410252 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095673704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.119737761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096469959 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120138284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09504907 seconds)
  done (took 3.260189744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116563296 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180880365 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.132382867 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191889599 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121748446 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119068944 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112681037 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122642194 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141213448 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098482642 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119491685 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118855128 seconds)
  done (took 2.419335103 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129819113 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162046013 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118702032 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101230569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133394199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126457762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106467864 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126956667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137734318 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143148715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125924466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136685223 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11755443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138809449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132553922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132877593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106105842 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126884689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121558782 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150113087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126970294 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117914602 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127557183 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127328401 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107110948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140342995 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136730016 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142130007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127158823 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136932845 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112746108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126650742 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138028641 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142602996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120201025 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11909208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12619752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149266789 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132782612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139065262 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101309832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132970138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138858341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134549567 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138571781 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106851919 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134639332 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12686058 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106270924 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175955726 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114513362 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140237677 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132444425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137624821 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139325317 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15772955 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142133097 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139604236 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112860996 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143894099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140199873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133357671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140505961 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143159369 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133452887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141081094 seconds)
  done (took 9.507729222 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147160481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121001877 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126656829 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144063528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140361658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107033169 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126813363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126562718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106965215 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123132218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177234933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128040432 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140128068 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140276441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106725543 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127905018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126947361 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140931298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103684851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157493598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127793468 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13920017 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141336899 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140702674 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143798966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112737446 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12852787 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126810626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106430751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129497537 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135743164 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127737365 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140529337 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100206608 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141137825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128218968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106615965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136052953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126798931 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132871321 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140409323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15063319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108056096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129152484 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143250206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127181958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109083878 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123458334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12786265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103768106 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144501575 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143217448 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143805359 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139286932 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127452669 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107482779 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1282529 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126874309 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107212994 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134331072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141333475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126887574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159060994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126941724 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107229102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140695013 seconds)
  done (took 9.412252243 seconds)
done (took 175.006638889 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.163631455 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184790272 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.159891671 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158682255 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.114896174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149902435 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128407743 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.159008957 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.114444599 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093648508 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114878517 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097679091 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181614097 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.113633868 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094179884 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119347547 seconds)
  done (took 3.006148186 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.221619001 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.316816582 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.137107591 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120322782 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103184758 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.119782683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099017789 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.123087706 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116295031 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.109068804 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.118988781 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.118548922 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109266558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.118697394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116428781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098340411 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.130682331 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.118731011 seconds)
  done (took 3.254716887 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123013475 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158383027 seconds)
  done (took 1.140245519 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134034769 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.224735811 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307514215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178292131 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.15071523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144062354 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.179531107 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13744294 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.215040884 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.143254574 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.142995679 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10210172 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151484453 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.129696529 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113224125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123159172 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152647156 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132253892 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111613055 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125870468 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146418998 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104659228 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.129768315 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132625719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.204591315 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.143985199 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104111964 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125344944 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126309699 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110228986 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130190865 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141421566 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.142550727 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.214494375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.110500067 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.21143861 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.113483378 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123034484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.131052661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101294401 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.128132011 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12762576 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140729961 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101916414 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124662841 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133951095 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104088329 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124608535 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131528317 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.135688798 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111415748 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131095314 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.210082388 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.113278519 seconds)
  done (took 8.522928425 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.933047217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169219523 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100932464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.065693218 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155733581 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140672434 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.915197806 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148619006 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.289248303 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.929376372 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141336 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113925921 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.290975404 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283197042 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199548416 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.379570728 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.79279805 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136819623 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153784097 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.17335086 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107518853 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152430425 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143905717 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431568504 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.125681799 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120844458 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107200527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133276255 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.208551595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098975255 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123576118 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.211427992 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.319395874 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.247641708 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12282732 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099507409 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119052881 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19666823 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.310166789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.256375578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191574689 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118185071 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11847283 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113046681 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143845883 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115911929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192575762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.224989302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.20205588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123737888 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13365286 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131033926 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113234881 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.210948682 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096042704 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.397853726 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386196328 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098469886 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131360559 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140955856 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.308820798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119319596 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.268229341 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149879396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.252649515 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098422586 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852881694 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.215363523 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098759422 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131459683 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129882076 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125166257 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112456893 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184647189 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.416113378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115697272 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12446828 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119424337 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234718989 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.119295703 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119371233 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.193536654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124279532 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108910667 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139165173 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136413401 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.220655389 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.282281925 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136430982 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129777759 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105980824 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135477444 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123941772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.241569478 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.260415991 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.207233763 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.246490095 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135601492 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.214272021 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.195660364 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132513419 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.20028736 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129352789 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140635172 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134056417 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.258278652 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.162512197 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099426694 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125714326 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12898558 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.167140201 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102221971 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129660414 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.219017582 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.475693474 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.216326432 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098567496 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124891597 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13049033 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190872061 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128555358 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303590934 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13112788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.197604414 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129306871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096578735 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130826115 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.214142082 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114536514 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130797915 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13526624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130617215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282636059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.259999155 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137935331 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269958245 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.202139241 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132043359 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203832613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131145524 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196996636 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131150446 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133661861 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122482638 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.851232295 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134386998 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110216084 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127002909 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209990436 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120101024 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100512827 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.119614039 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097774324 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843713872 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124759718 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096796174 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.122875675 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131217243 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108496148 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128650032 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126665113 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189745574 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.29783029 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114265618 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129238907 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120330916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191173164 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125249358 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099307752 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120766571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.099224094 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130849217 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125779644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100537601 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.224466387 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18762148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.281716683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.555002107 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120642251 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119995388 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.27237251 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099472818 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.369875678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108666092 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.266755841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.218927302 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.116621112 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381912601 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.199379028 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210422336 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12473259 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201597254 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117721116 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127822156 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.192184748 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120801753 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10707976 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.209228275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13860788 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136403752 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203723714 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100975057 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278623968 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096688785 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.220472254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102720321 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134651158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.355552033 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120396621 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142502721 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.190979612 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126442261 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120453005 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602337326 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12216732 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131791037 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110578536 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.286714373 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.196796171 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1293869 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129077126 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113705525 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.214079793 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.241946168 seconds)
  done (took 49.549612255 seconds)
done (took 66.329898805 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.332798487 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287979914 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.348072471 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242456697 seconds)
  done (took 2.187723173 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.237645742 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170925978 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.221128682 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097872303 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.230168011 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097921795 seconds)
  done (took 1.950562519 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.544129578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.446341022 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.357355814 seconds)
  done (took 2.24801462 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278145046 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.306701483 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.374240426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.52159483 seconds)
  done (took 2.488447861 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261756526 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144538505 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.137409739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.190191122 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.226842963 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.230857311 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.162242512 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176624378 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.147410345 seconds)
  done (took 2.627826971 seconds)
done (took 12.403941145 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.208998685 seconds)
    (2/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.129754082 seconds)
    (3/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.204391002 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.306167858 seconds)
    (5/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.353169988 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.173976541 seconds)
    (7/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.172596092 seconds)
    (8/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.267737073 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.207775267 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.231209526 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.329849039 seconds)
    (12/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127921657 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.15816825 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.204687577 seconds)
    (15/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127942475 seconds)
    (16/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10483468 seconds)
    (17/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.273545703 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126806478 seconds)
    (19/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.257506148 seconds)
    (20/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.182278235 seconds)
    (21/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089384316 seconds)
    (22/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.300901451 seconds)
    (23/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.089552894 seconds)
    (24/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.186053072 seconds)
    (25/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.141466802 seconds)
    (26/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177099384 seconds)
    (27/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.139169521 seconds)
    (28/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.335254793 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.139003245 seconds)
    (30/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.154360252 seconds)
    (31/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.172513637 seconds)
    (32/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1390569 seconds)
    (33/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.26659051 seconds)
    (34/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.234129402 seconds)
    (35/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.129317428 seconds)
    (36/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.258141357 seconds)
    (37/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.212684011 seconds)
    (38/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107537447 seconds)
    (39/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.140604562 seconds)
    (40/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134103605 seconds)
    (41/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123877937 seconds)
    (42/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121587496 seconds)
    (43/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.169424663 seconds)
    (44/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.13748499 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.162666798 seconds)
    (46/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.153416042 seconds)
    (47/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.230329077 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.130688514 seconds)
    (49/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10597051 seconds)
    (50/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.309258113 seconds)
    (51/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.236428029 seconds)
    (52/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102857374 seconds)
    (53/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.179587284 seconds)
    (54/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.207150392 seconds)
    (55/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.120611538 seconds)
    (56/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.316354414 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.187365709 seconds)
    (58/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.116554899 seconds)
    (59/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203255573 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.127725317 seconds)
    (61/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112736696 seconds)
    (62/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.220633054 seconds)
    (63/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.19528096 seconds)
    (64/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.129434374 seconds)
    (65/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.221023682 seconds)
    (66/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.180577376 seconds)
    (67/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.156900128 seconds)
    (68/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.216054947 seconds)
    (69/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130023654 seconds)
    (70/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089440698 seconds)
    (71/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.114261038 seconds)
    (72/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.227142917 seconds)
    (73/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.148035133 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127736999 seconds)
    (75/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.1264756 seconds)
    (76/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.166376011 seconds)
    (77/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119679625 seconds)
    (78/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212067108 seconds)
    (79/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210388122 seconds)
    (80/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.204482964 seconds)
    (81/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.169445482 seconds)
    (82/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.129473739 seconds)
    (83/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.118386249 seconds)
    (84/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.118774331 seconds)
    (85/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.129413478 seconds)
    (86/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223842156 seconds)
    (87/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.151309504 seconds)
    (88/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.090843458 seconds)
    (89/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119716652 seconds)
    (90/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.095483642 seconds)
    (91/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.129405096 seconds)
    (92/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.154383669 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143237132 seconds)
    (94/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.322094249 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105840638 seconds)
    (96/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.151921913 seconds)
    (97/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142985631 seconds)
    (98/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089962738 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.128305389 seconds)
    (100/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.145062742 seconds)
    (101/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168826151 seconds)
    (102/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089913827 seconds)
    (103/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.140100706 seconds)
    (104/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.143710143 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104853422 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141244565 seconds)
    (107/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128158795 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097654796 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131606083 seconds)
    (110/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103082317 seconds)
    (111/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.130172835 seconds)
    (112/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129065872 seconds)
    (113/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106576406 seconds)
    (114/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139376299 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.225258319 seconds)
    (116/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.205962727 seconds)
    (117/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.123944391 seconds)
    (118/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133442682 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.139310228 seconds)
    (120/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090467784 seconds)
    (121/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138025155 seconds)
    (122/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092435195 seconds)
    (123/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.112247076 seconds)
    (124/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.130803751 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.113732868 seconds)
    (126/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091795977 seconds)
    (127/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.113171818 seconds)
    (128/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090533429 seconds)
    (129/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.151035617 seconds)
    (130/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.121833168 seconds)
    (131/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.095645712 seconds)
    (132/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140268122 seconds)
    (133/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10093736 seconds)
    (134/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.140728647 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.129200805 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091380559 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.130119135 seconds)
    (138/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229603326 seconds)
    (139/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091431853 seconds)
    (140/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112342389 seconds)
    (141/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109577302 seconds)
    (142/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.113604621 seconds)
    (143/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1076379 seconds)
    (144/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.112503396 seconds)
    (145/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.205686623 seconds)
    (146/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.153226861 seconds)
    (147/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165318165 seconds)
    (148/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.112773647 seconds)
    (149/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091003506 seconds)
    (150/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132128393 seconds)
    (151/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.092213085 seconds)
    (152/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.1130536 seconds)
    (153/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103550077 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.142795677 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120922607 seconds)
    (156/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.168827021 seconds)
    (157/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.113228423 seconds)
    (158/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.182584414 seconds)
    (159/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.140900912 seconds)
    (160/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.1134241 seconds)
    (161/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105876579 seconds)
    (162/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13841707 seconds)
    (163/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.241416828 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106620072 seconds)
    (165/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.144563906 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.131525732 seconds)
    (167/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091276115 seconds)
    (168/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127697963 seconds)
    (169/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.096660907 seconds)
    (170/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113089448 seconds)
    (171/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.099126915 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130043279 seconds)
    (173/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125892133 seconds)
    (174/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091140609 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134742569 seconds)
    (176/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.09762938 seconds)
    (177/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174435089 seconds)
    (178/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091512985 seconds)
    (179/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.119232092 seconds)
    (180/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.22193486 seconds)
    (181/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.092398091 seconds)
    (182/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.112365603 seconds)
    (183/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091502614 seconds)
    (184/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.113748335 seconds)
    (185/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.091258498 seconds)
    (186/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.095457482 seconds)
    (187/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.112181024 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098441559 seconds)
    (189/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.11892362 seconds)
    (190/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.1310534 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099779164 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128325079 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10523353 seconds)
    (194/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.113678219 seconds)
    (195/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091564287 seconds)
    (196/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131801875 seconds)
    (197/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203873274 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106755133 seconds)
    (199/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.130067116 seconds)
    (200/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.177697011 seconds)
    (201/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120395609 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129190184 seconds)
    (203/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.188127494 seconds)
    (204/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.113057187 seconds)
    (205/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091290544 seconds)
    (206/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129055731 seconds)
    (207/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089401145 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12968585 seconds)
    (209/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08986222 seconds)
    (210/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.158540155 seconds)
    (211/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.112569944 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120592317 seconds)
    (213/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.132523729 seconds)
    (214/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089268628 seconds)
    (215/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.11433836 seconds)
    (216/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090680091 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128286383 seconds)
    (218/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.088457644 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127880359 seconds)
    (220/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121167593 seconds)
    (221/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.134490609 seconds)
    (222/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.117993812 seconds)
    (223/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090301404 seconds)
    (224/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139957549 seconds)
  done (took 34.065532197 seconds)
done (took 34.973098996 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.499125257 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11272578 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.134396465 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.133490821 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189663386 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.135514447 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11749521 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.138496276 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.138303024 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106669346 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123611657 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.114149499 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133776386 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.190250481 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136849949 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125879078 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101592958 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.137973248 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.139946906 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12004162 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190680154 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126034251 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.13782685 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101554724 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189646229 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126790706 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132221337 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11009211 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.138200969 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107535114 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.133597473 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124408278 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11883796 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.142914354 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121251318 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106486043 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122635581 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09771256 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132996769 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.131423323 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116054551 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.132828387 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13509905 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103236397 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.132132449 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12948342 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100643544 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138475096 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100164931 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.133404777 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126400626 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119577249 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.129748716 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122199473 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10072127 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126877796 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115214776 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125589627 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.137395904 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099964259 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1275582 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100213314 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.133206407 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122567563 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.106039831 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126061872 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10651285 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133811211 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.129860676 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104348398 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123762497 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.120955623 seconds)
done (took 10.436562406 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107436286 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184434121 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.188954216 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.196250342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.158076931 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14311538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.145439619 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.155614725 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.118296523 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152493071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162050677 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.154536079 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.197858646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.138562532 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.142494927 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.109878702 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138685265 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136323437 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.199539038 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12656024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16159654 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.138516977 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.16054338 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148330978 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108523073 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164707376 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13503475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.108329392 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13173915 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140118816 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150876419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108421547 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133380874 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151970654 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118854208 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.137751492 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14363889 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11006521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131098619 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129748467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12037386 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147800304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.130114506 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14209676 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109409887 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.137223882 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138188873 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115519556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133244193 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.10941445 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.134359136 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160629057 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.138258336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.115148803 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13915207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.136965736 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.115065042 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.13956637 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133475934 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.113549026 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131839052 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130778613 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110872871 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15749854 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134666247 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.137287916 seconds)
  done (took 10.132927004 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12790481 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.164416533 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141921345 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.141214566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113837775 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.121793121 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121078625 seconds)
  done (took 1.895415939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099500328 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192459572 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.192442569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216349151 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184218415 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.203745425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145493278 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099740084 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.159855171 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134738137 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.193584631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.226234445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.131806222 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140877008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.195993017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.099569355 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.195456726 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.124671403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135335939 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.192385164 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138258236 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129321089 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140896483 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.123802381 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186053764 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101228408 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271359088 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140034398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106431226 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.133142525 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111164942 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.233562486 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186950383 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115475816 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.128751381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188792178 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.186825103 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136460129 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.202539659 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.129713042 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.188028208 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.110018554 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.13663584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138264005 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.110658423 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.173092983 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.141560627 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.137470812 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.132766916 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209409237 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.111962386 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186988582 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.133736967 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.134009188 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111297687 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137887926 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14234332 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112689927 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193003425 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139716814 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187722743 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189201817 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.186005479 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212696303 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121460888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187703212 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.18489423 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.134904064 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133600147 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112183 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213676811 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110667234 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.138869964 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176524547 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138211089 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.190095914 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.189840841 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107114565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139859105 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.129519409 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108937936 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1240832 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176829811 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134687397 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109181336 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145635687 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138144761 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113049297 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.129766557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151465355 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11101558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139596388 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.140344327 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13637826 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119201204 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191487912 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138278768 seconds)
  done (took 15.698074418 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102474735 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.124717485 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107109398 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.126719387 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.126039996 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102037466 seconds)
  done (took 1.678243659 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.135358175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.138518691 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148114355 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113455855 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192362219 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21886919 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.197213572 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136974569 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130307942 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.149803292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.193136536 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196735409 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.193142454 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.142810589 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.198187563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.141367835 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.197516079 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136448691 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12115406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135298718 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143338315 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.139373602 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10981135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.187580793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.140301748 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.139081044 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11138184 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.14794809 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.145365735 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137522885 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117171579 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.138921267 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134440326 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112282511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.223323139 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109504271 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132830748 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142120997 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115420913 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.139007792 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.197044237 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133925059 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.119847306 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144016162 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136602002 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.132856665 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117928587 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13658908 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.197209695 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.142555506 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141390232 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.113790694 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.140428034 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.142263295 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109053892 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137425626 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14227154 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199752815 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.141693564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109767295 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.139979181 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.139314443 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135546195 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119376484 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138839676 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.141247727 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110111687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138458883 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.134335723 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115915471 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143740967 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.137876356 seconds)
  done (took 11.408562822 seconds)
done (took 41.774405432 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.202095723 seconds)
  done (took 2.18843138 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.970854242 seconds)
  done (took 1.96130061 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.842890253 seconds)
  done (took 16.867917471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.579961539 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.650634952 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.013259564 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179626011 seconds)
  done (took 3.413036344 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.975850219 seconds)
  done (took 1.982246652 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.373017611 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265835523 seconds)
  done (took 1.636569964 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.869599369 seconds)
  done (took 1.872966608 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.388265914 seconds)
  done (took 3.389076648 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386578806 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202486588 seconds)
  done (took 1.602137734 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.664164366 seconds)
  done (took 1.672955246 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.539411587 seconds)
  done (took 35.547465102 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259570028 seconds)
  done (took 1.280474231 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321533129 seconds)
  done (took 1.333352726 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.327770768 seconds)
  done (took 4.344057702 seconds)
done (took 80.084899827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111867698 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.138539841 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115174787 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.135842881 seconds)
  done (took 1.506440353 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12268082 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.139880697 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14189391 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.112798489 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.148230783 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.137178772 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11113793 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.145735214 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.135949229 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.116428782 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.138880839 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.112921973 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.140591738 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.136852351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.111188732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.140891249 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.141812629 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.114193046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139481914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.139220968 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.112426828 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.139263197 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.140698307 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.113964819 seconds)
  done (took 4.15496943 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115164166 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.130309059 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108909685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129852837 seconds)
  done (took 1.50759371 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.122105731 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.158145035 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154729957 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.121571428 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.157863905 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155542045 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.107443631 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.134187455 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.135711849 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.121977999 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136475121 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160293506 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.156514685 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105876548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.148625444 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.101632642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.132666004 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156213115 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.120826088 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149651443 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.132018934 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120904155 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.143115394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152134848 seconds)
  done (took 4.307414729 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.222708682 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125430042 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.161012243 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.190622108 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.164734267 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.133835665 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137723871 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.143182527 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.14380777 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.115056892 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.141554692 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.196855631 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140440546 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117589617 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.139615879 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145414459 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.142224589 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.116480963 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.14305821 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.149252664 seconds)
  done (took 3.992575011 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113710426 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.129362984 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.100513633 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.128930456 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.13633249 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108123003 seconds)
  done (took 1.740380876 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101475199 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.122846859 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099882461 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122812586 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104900569 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.124526719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.097496001 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12476118 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099780231 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.126414393 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.123035385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.098596552 seconds)
  done (took 2.375244987 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.324499918 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10295496 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134563198 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.128683571 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.133299816 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103522235 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145931561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.102721832 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267932954 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129971429 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.120921245 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.23302287 seconds)
  done (took 2.958358285 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24093124 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140018799 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271643884 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399027512 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184964124 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189531986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296017586 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187021865 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.239199026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13519642 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248631727 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178486279 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175941893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205303321 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134071746 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.210800978 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227486633 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232693801 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171595228 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236514446 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189630838 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19335358 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235606006 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14886114 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157569931 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187341623 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.139402929 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151135192 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198939963 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194586567 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20059897 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171290591 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162595779 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228867919 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278942179 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204233807 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.363231217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141425537 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.235535795 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211851626 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298748689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135505207 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250506966 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17569197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127054429 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23206213 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179517621 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210154748 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151599931 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136494292 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239016264 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201967313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.212415383 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171346839 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318795915 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171046334 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168031528 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200694161 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244307152 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220526323 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190759409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.139536363 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207307979 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209895615 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207568916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168193957 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193357013 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146305239 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200595706 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248775253 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214267655 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190328425 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215073384 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155003367 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187146294 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194294554 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17744888 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205610318 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185130403 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.139654491 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173480245 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160774687 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119295163 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.211768023 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141657993 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234151216 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154866089 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211943021 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255379345 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155504393 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212143158 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18939123 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193391246 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167723978 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112883454 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168566803 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185561946 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180524685 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15064296 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179317848 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164843537 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121455204 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174354365 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.142028901 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184144122 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.153631556 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193764829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189235968 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153794152 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18888212 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145495724 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185121332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220527086 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214178027 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124576588 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155278852 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221972092 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180229435 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.158811993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200257728 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240703498 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163728026 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161409216 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22419277 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225017362 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162899358 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217501315 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175143056 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131427091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.176234941 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182991796 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179579819 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178133576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148414078 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179683657 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220441884 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151606164 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15692465 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201233236 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146605015 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121576977 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164479519 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161140152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163796241 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.175417342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134519446 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177705216 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184679476 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176883831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181444229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166028602 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257189405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125442588 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.186360831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168989047 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.138739222 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.208615599 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212924689 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152411488 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211061483 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.195497861 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245135791 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190768988 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148351253 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208388355 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124799588 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.140796384 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195187549 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188193602 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186653205 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211176709 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240069924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196256648 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181439731 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171782739 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191392001 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202309571 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181574383 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167160541 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186285603 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197804777 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.140942874 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143370779 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.121782832 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160484808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154845713 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149335317 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210199235 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189462993 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210228214 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186683123 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160517365 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211023473 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.145431086 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189789824 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200670584 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157968095 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214219325 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232501779 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192401991 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137398406 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222180871 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.114210849 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144222709 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155272397 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195187625 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124637133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158623653 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168720641 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211213971 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202358223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172206931 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254559163 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194870708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220586122 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.140228709 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185577709 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194073317 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181237389 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.204742912 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128993909 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182904236 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205108901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175819549 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247802922 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188289512 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194597798 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226804446 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.182231738 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154162146 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172706733 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192628417 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166031859 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187790412 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167712068 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131164798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17572605 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.158585672 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147303108 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208810999 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16707981 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232676799 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153591461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230601429 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117442358 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169544762 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185061879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167003773 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.136988906 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195476255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21287648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168321817 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181291663 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198883707 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153652257 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32980134 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217279175 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239170334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16833822 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141048972 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185630383 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181703154 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213049049 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20882913 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168642403 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208827028 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181892468 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137015715 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156326377 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168870598 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17451606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.177964719 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.156800287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180447336 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138263347 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240940349 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164864226 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18295707 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189834673 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142967169 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179324833 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162046298 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231133266 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184043771 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202264526 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.180486437 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192426656 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241225005 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115975509 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14752178 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.146406007 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208603081 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122766788 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184323824 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.230193582 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223130985 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185810339 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192078465 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15829654 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.145319074 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183862788 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170593302 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223722898 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16517282 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159995868 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217720065 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.175815545 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152976092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188490122 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300872488 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168345752 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199243309 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111749845 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.318958289 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119820305 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154862008 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183040612 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197407976 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.170717674 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.205041561 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191973374 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165109565 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182516581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134466309 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238679533 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234094542 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198723119 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227665809 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137093613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182287736 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213557965 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202166686 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163342036 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.144729607 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184728181 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209757714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.241484225 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130100677 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187403965 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187017144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184858088 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229331153 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1523981 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213935309 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123714407 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21970455 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137933314 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145839694 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182399942 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204732685 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15353048 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200129407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181634297 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151150368 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147531191 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180884522 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182294623 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149743345 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.152255208 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207382147 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.147522407 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188084496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207229271 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149493638 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180470104 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139719165 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153015247 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169587679 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166073959 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157902293 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164193924 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234051181 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12735263 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228441605 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199946909 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189470108 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182331008 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16546243 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.657733274 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.150408877 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209472648 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170074558 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217214819 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171645672 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192013497 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185736877 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171452363 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197587666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171421379 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247139973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191210471 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.186895597 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156200153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167177151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167995958 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125664461 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174800689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187185449 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163633868 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160093459 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184717868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166829405 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.165671331 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132575634 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212687245 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168780897 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237348642 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211492181 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170651917 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191842345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203837409 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147670778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188951558 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198459556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162940272 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183835482 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.124574685 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158002378 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205607112 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.1425578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188176351 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184762273 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186234895 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187973846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130707539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186295461 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169062585 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185732781 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14823806 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181248415 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183149137 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152109359 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121561486 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180314423 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182506166 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.183756866 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148393366 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166372715 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232968705 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.11590625 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158860457 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299982203 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182135236 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246818968 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150239456 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156975896 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167795495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185383728 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181422945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183947016 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.121430297 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15016959 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.153412651 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.20464041 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.181243469 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181067381 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204564144 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184495658 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214412422 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.166562701 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.294598142 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132110781 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179800092 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.15556683 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.150647894 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160751169 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131006915 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177286431 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239042064 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206518304 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.176821904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.139571506 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149358227 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.142382651 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1252776 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184471437 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175935109 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182048143 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172217522 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.137872083 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168573501 seconds)
  done (took 89.612687809 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16184938 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.157634415 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164341745 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.216378068 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187226024 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.276364267 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22426817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246064198 seconds)
  done (took 2.762970923 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.142960863 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.127526669 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.160782296 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143275442 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.143731404 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.460917682 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.152473659 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.11384651 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.208282116 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.176842599 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.11387784 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.710833475 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.138827536 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.139157529 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.135289251 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141038098 seconds)
  done (took 4.334295614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.356688158 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546459363 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.69764128 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.267057638 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.25254351 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200918693 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722805711 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189393574 seconds)
  done (took 12.36695925 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145994738 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160547838 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.362667139 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.229360845 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.177802896 seconds)
  done (took 2.223774108 seconds)
done (took 134.850819151 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.118115192 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.162093826 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117774315 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.161700718 seconds)
  done (took 1.688623199 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.164748483 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.129952223 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10380999 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.127437473 seconds)
  done (took 1.67024425 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.56385005 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.099498203 seconds)
  done (took 1.838602815 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150614458 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.164930257 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16263858 seconds)
  done (took 1.629378074 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.126310969 seconds)
  done (took 1.268661582 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118386468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.142190091 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.197067818 seconds)
  done (took 1.604773268 seconds)
done (took 10.842004419 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140248416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.442691758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428916278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126330168 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.737716362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.421579628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047485326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175961301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185096374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.105519864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.155685724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685304916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.065784258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378273403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020314976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376781457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713766319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107776628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1416131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107065454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021669914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132373003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.107678879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.134842829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.684694361 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.439028889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135105605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.391610789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106185366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138362283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.395656688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132420638 seconds)
  done (took 17.519828861 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151463262 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201653011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142450199 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107064576 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13829111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.133554626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.118574927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148606545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197907204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13332612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128047488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.132508501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.138028499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107283415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.158739515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105222265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136551474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.135350884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114522208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136695294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.155923256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105772032 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136056773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107987781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132401963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.146006771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106363696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.149692141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.131400791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111788556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.139587022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.105991439 seconds)
  done (took 5.447435038 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15569047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.211665803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144184021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.170824036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186873549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.107695343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227416972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178453613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202076266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134852388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156841817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107002698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.17765946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133924394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.130877692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.134394269 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109178051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13675441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142977332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107722956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.156160248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133106277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10836389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137731518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.106172879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.147868319 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.134034149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12201459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133958156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13969985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112781847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135394447 seconds)
  done (took 5.78411586 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.121007207 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.148536124 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.128978169 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158988083 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.143292933 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.118580579 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149042467 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.139763569 seconds)
  done (took 2.264912725 seconds)
done (took 32.164904719 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132957161 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.154336038 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125249072 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.147666989 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.208755971 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.13593186 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124970819 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.136932399 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11980648 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.15806153 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.105426433 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.139638174 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.154577938 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.117451014 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.192396763 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.149007444 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.199348789 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.192911206 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.110952007 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.148215356 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.139734926 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.200793507 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.117926933 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.140656037 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.20386469 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110099549 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.190102422 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.14486004 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.142973399 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109481418 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.191746523 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.144676642 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112606484 seconds)
  done (took 6.052816399 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209456805 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.222612237 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.108094191 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.13809457 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.220840911 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.136765008 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208171667 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10857965 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.138655687 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.107662098 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.136919581 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.209562813 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.21694223 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.230902885 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.249356058 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.2188764 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204764096 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.216504356 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.203346187 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.250854413 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.209695145 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.107560065 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.219062503 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.225078928 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.137635241 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.107047489 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.243872305 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.243574845 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.24848037 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.207605408 seconds)
  done (took 6.856111705 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.121128135 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.153207803 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133951763 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209929023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.179420052 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.150864001 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.119238404 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.161159987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.162325712 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.107011067 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.147653855 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.172950735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126748002 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14695976 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111941477 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.156864841 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.163890932 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.10894594 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.14255556 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156383524 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.126523684 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.155593934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.150350763 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119197683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.135448921 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117214652 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.140360979 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.149918521 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.115328816 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.146448593 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.138068715 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11249859 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.138970961 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.117441031 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.140071716 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.148935897 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136417224 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146808571 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.147276512 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143859931 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.145976581 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141145025 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.129899015 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.19145405 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.137591022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.120953245 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.150973944 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.117503145 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.136173994 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155948972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122600507 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.1390629 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.158523763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.10742583 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.13677819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114580699 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.137886828 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.138281946 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.11732924 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.14081232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134494178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.145210576 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142888152 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.110904377 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.142444578 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.106561387 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.137549721 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.142091991 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.131958139 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142974141 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.170949239 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.108092248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.147481395 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.116327973 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.142777741 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145852757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.107228668 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143552517 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11603579 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.14360669 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.144171452 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112629977 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.14120549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.126932472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.158034573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.149227364 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.14717315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.120640315 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.141238904 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.110621456 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150879521 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.139174731 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.113198909 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.148569358 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.109078202 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.140814023 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.148699363 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.117858324 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.135401765 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127331296 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.143689734 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.13554326 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.126727503 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.139669728 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.111597166 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.148032182 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.148743274 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109700758 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.146630444 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.119132003 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.136780302 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.141809992 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.112705651 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.136655648 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.125712618 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.150109405 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.142208289 seconds)
  done (took 17.215601613 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315698262 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.322862864 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.218866468 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413164857 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134189712 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238354766 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.287684461 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.24046703 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.138842816 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183226969 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.20053146 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278964608 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.107814737 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.171272386 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.318870584 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.388661148 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170996289 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18729251 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185918235 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.163936619 seconds)
  done (took 5.851147928 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130529078 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.181743477 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170879802 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.171346222 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.114578002 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.151193547 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.135529209 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132532997 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.145874654 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.145575731 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.107272141 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.151234855 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.143744812 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.11933815 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157896424 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.184312798 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.113325107 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145914676 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.160023172 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115930108 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.145332217 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.165969304 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.146499072 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.138829794 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.148904428 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152614009 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.107791532 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.146543394 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11087239 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.143043905 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.143955208 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130259223 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.144957062 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.143727529 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.117884069 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.151395023 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.111079495 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.139429274 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.109391986 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.140431623 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.156541621 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.118695367 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.141786598 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105262063 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.151105225 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110896452 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.151436454 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.148568923 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119630581 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.154810629 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.147234642 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122220351 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.145290146 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.156612612 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.112021283 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.154575271 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12209285 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.150279189 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146987647 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.106598846 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.135248539 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.139962431 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.114092789 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.152580887 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.118515172 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159873505 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.153380273 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.107917683 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146092371 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.143455769 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.113119751 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157352979 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165971021 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.112448679 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.143373246 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.160847326 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.113199488 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.13086354 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120718237 seconds)
  done (took 12.124458008 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143815972 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.145334676 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131762447 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176349926 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.228466493 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11426161 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.144024965 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.158867322 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.121266409 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.152304728 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.149905852 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124411863 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169744363 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.1533736 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.113846612 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156154522 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11813129 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.187759608 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160916141 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.176315035 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.196364543 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.143171533 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.154226601 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123463539 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179345703 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.151775191 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146629635 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.149838517 seconds)
  done (took 5.479025748 seconds)
done (took 54.735718522 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.355874932 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.476651796 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.266425827 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.26184683 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.295490795 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.27365187 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.284433649 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.455216223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.948861741 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.254871911 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.262191192 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.260512211 seconds)
done (took 28.59361843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.261454056 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852339011 seconds)
    (2/2) benchmarking "String"...
    done (took 1.612527862 seconds)
  done (took 4.654755754 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.257611991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.25193687 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.498346257 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.249948261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.267170443 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.265955378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.245184924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254985246 seconds)
  done (took 16.224233883 seconds)
done (took 26.591763659 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.260541014 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.439330541 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.49087185 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.258515431 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.238342361 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.237886589 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.236388222 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.251114549 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.230613087 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.22499916 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.221985078 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.50365562 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.228556486 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.646346875 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.222379505 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.23424118 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.237467582 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.447844977 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.22470816 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.270117844 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.212234836 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.21597884 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.241567173 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.256026676 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.224732109 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.22457928 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.273950596 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.218450479 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.406329452 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.245608283 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.212688629 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.234091353 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.273587623 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.220950203 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320866211 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.250521403 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.389805869 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.215578457 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.218059676 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.224044007 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.397879383 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.596202538 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.232662787 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.220500629 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.225745059 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.256329085 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.213423169 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.934557206 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.220060889 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.236066472 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.26801205 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.606026984 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.226573032 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.245768788 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.22321846 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.431384916 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.240907419 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.237335748 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.254855537 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.234271081 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.234522349 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.233863909 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.22488981 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.231580029 seconds)
  done (took 144.79229156 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.222106873 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.221189889 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.225478571 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.283896627 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.22421558 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.225701573 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.219576137 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.222478876 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.220170783 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.254296875 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.22409724 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.223571793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.226010718 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19051763 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.228332765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.243458327 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.226582586 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.222169445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229639232 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.222392957 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.247541808 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.224257841 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.239647007 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.226397362 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.254229045 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.310799708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.245264578 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.238784046 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.229068833 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.220620014 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.252300301 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.286849093 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.776852305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.085035026 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.229108183 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.254672438 seconds)
  done (took 81.035793225 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222529136 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221932305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223743155 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.251873101 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.223615948 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.737737016 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.74105156 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.956187695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.308175384 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.407943028 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.428621308 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222821672 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317488809 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236474404 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222170188 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.236477679 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247820433 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229615791 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223048514 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.737968785 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.238851637 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.386037328 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.388851624 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.238537023 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254489495 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.623117991 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224547965 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252847194 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.547646878 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.268739479 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224357729 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.541814807 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.182609938 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334945449 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225289475 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253082395 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222872264 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497582372 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223046962 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.223523002 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.22634231 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.849842354 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.227980202 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.736373047 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22968634 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.123798021 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22256628 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222401439 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.122623765 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.765700354 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.238571255 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224446491 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222941657 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227887717 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.222798841 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22615122 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253653958 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.138320975 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.316924073 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.240282317 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225649595 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.232680075 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253799577 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.225998844 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.3011873 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241463799 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.085882975 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.301945081 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.339007867 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.741760001 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230735555 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319079428 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342957975 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.224936374 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224852526 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22641965 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.226437704 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.333587653 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227229248 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.22699489 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615916196 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.392168646 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.245416871 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.399129104 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.324053926 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227991396 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556487918 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.228870283 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.22618793 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916839048 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320256046 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225528834 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227131883 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224303963 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.226353634 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617019928 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.743595526 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.411838193 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.230547183 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.292522939 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.230825792 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624440768 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.731905401 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854466813 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.231017391 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337135451 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392495131 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.244279383 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.226358779 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.405785277 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230002083 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282430235 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.230031727 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.623892901 seconds)
  done (took 367.778738744 seconds)
done (took 594.782733282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.899548426 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.854896592 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98672401 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.886894402 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.848354313 seconds)
  done (took 10.640781834 seconds)
done (took 11.802947581 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409071102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415276892 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290149338 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412706291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265627066 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426671548 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39685629 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.254914624 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.3326477 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.3120486 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334726939 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283233583 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261749546 seconds)
  done (took 18.562420769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498115516 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.244183019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302643772 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.467949894 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28029045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4962084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.546792946 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.245532018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387922735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252706747 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251387059 seconds)
  done (took 18.144002937 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494877949 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.242163765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308174412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473895769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.279330466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483069408 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.541439843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.243532485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401612526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250710187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25046191 seconds)
  done (took 18.139993148 seconds)
done (took 56.014569096 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.276936045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40125635 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266089019 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.252230894 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.248263138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.250031063 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.255584711 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.248892346 seconds)
  done (took 11.37537892 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.24817045 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.24586884 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.247369386 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.248353432 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246260498 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.246090774 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.244145098 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.24593916 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.248121342 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.245824993 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.246355013 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.247770613 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.250438861 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.248179876 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.248287333 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.247572772 seconds)
  done (took 21.129203591 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.249455783 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.246598377 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.248575972 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.251247848 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.246798037 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.24763134 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.248315966 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.249392122 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.246759471 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.249095104 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.249137727 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.248561326 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.248049772 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.248414843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.246928356 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.247760525 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.246587869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.245838819 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.253439844 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.246421849 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.25075739 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.250083913 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.247366411 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.248560205 seconds)
  done (took 31.141846656 seconds)
done (took 64.816497914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.235703197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.258466885 seconds)
  done (took 5.663559344 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.307046616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.309338195 seconds)
  done (took 3.788058545 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.248107648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245588346 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.250588438 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.246828911 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.246232785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.249768257 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.248991719 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.245861719 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.247747365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.246775118 seconds)
  done (took 13.651633687 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.247572091 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.24927049 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.248573837 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.247619618 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.248941608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.248382795 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.246556016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249328544 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.247073607 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.245976901 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.24780033 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.246896177 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.2453128 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.247444247 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.248703573 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.248670737 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.247723442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.247587704 seconds)
  done (took 23.636815841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.262648733 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.270838912 seconds)
  done (took 3.706351749 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.39025281 seconds)
    (2/7) benchmarking "second"...
    done (took 1.290642236 seconds)
    (3/7) benchmarking "month"...
    done (took 1.364086815 seconds)
    (4/7) benchmarking "year"...
    done (took 1.354784666 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.289409891 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.268528612 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.290879082 seconds)
  done (took 10.421851632 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.250138372 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.447690973 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.555198839 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.82899777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.249877619 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.294776545 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.124669082 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.298969655 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.285624943 seconds)
  done (took 14.509332898 seconds)
done (took 76.547350382 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.242006991 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.286367389 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.266819 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.262304218 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.59268188 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.288283107 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.246441796 seconds)
done (took 16.362015944 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.239866737 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.245118961 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.23373939 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.260622308 seconds)
  done (took 10.153385106 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.24045617 seconds)
    (2/2) benchmarking "read"...
    done (took 1.597365596 seconds)
  done (took 5.01136038 seconds)
done (took 16.342041363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252310675 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.251194891 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.251308399 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.250738833 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.250128813 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.252734325 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.251274956 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.250209599 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.252641456 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.251477208 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.250581158 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.248935389 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.249922027 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.25371733 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251278696 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250782373 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250650092 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250102042 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.249396411 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2511964 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25148716 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250369328 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24911395 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251278209 seconds)
  done (took 31.197765499 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.253792818 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.252314219 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.253217332 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.250597847 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.252819395 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.249131403 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.251751848 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.249870973 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.251659349 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.252584062 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249961421 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.248948936 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.251915852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.252415932 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253319423 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.251941771 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.251983836 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250459301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253818065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.253168078 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.251329247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253930003 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.250403844 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249762936 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.25171098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252037514 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.252140862 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.25099276 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253149615 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.25259775 seconds)
  done (took 38.733229109 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.256874899 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.25753804 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.255913452 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.253181514 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.253729217 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.25211112 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.251984117 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.251711512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.252910501 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.252022302 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.25433293 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253040737 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.252923404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.25180217 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.253972143 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.256050736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.25423366 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253354626 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.25699501 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.254251636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.25342681 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.253185539 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.251410574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.252191234 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.252283658 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.253416093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.254221423 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.254381984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.253676419 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251268807 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.254176982 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.253186648 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.250982609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249943926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.252929706 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.254448453 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.25870805 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.260817108 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.253328553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.252953787 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.253084387 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253165576 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.256137469 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.254689442 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.252928069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.253231609 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253072267 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.255823865 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252427433 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.255263596 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.255111566 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.251185881 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252359987 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.253449804 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25686339 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.254008981 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.254328856 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.254885775 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253406957 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.252515133 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.254626525 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.254328333 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.255636443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.255626233 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.255263149 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254900158 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.253454355 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.25573576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.254397651 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.254486119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.25513863 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.257458447 seconds)
  done (took 91.472460779 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.257507249 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254036816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.25322089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256262424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25453594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257291523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255761542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25640198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253330153 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256749793 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254280452 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256782985 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255400661 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255663942 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258690707 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255324967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.257733523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255644032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.25673583 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254815839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255055326 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257649816 seconds)
  done (took 28.80882837 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255643621 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257450617 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.256641213 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256066132 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258196198 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257180402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.256566975 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256454745 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257906716 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257617819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256352158 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255809871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257538661 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257193476 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257666606 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25909948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254966894 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258340806 seconds)
  done (took 23.806449238 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.256412424 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.256866735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.256851587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257699503 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.256398731 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256488068 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257590925 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256235213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.256394639 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.258526171 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.256156098 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255274745 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.256852712 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256034215 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255609619 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258317952 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.256741973 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255810282 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25773717 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25631999 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258573416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256952642 seconds)
  done (took 28.832978532 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259125881 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.25765292 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.256568822 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257844448 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257561912 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.258470847 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.255567586 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.255556227 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.259445781 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.258078878 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257695662 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257826757 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.260620891 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256929423 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257673777 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257652057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257346989 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259005799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257830602 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.259814123 seconds)
  done (took 26.340057079 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259820752 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258302635 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258562286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258377959 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258446118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.258908361 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257259646 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259103494 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257976371 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258732693 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258839286 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258768597 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258812162 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258896041 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258789058 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259504079 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259689421 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259852129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258034323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260043098 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260516064 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261365494 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262635904 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259885712 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259804898 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259650657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259339227 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260702902 seconds)
  done (took 36.445805865 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261727053 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260460178 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.262836743 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.257773979 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259015614 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.259463648 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.259409607 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.259275228 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262302164 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259665034 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.260937245 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.258309084 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260575439 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.260055354 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258598013 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.258356548 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260105392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259523893 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260588598 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260709143 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.262962222 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26427778 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.261504646 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259820285 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262711476 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.257829553 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261891124 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261850082 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262134185 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261723045 seconds)
  done (took 39.003076746 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.308567362 seconds)
    (2/2) benchmarking "in"...
    done (took 1.308156762 seconds)
  done (took 3.804265453 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.262530352 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26134104 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.264952276 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.262523593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.263371402 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260374246 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26266106 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261823943 seconds)
  done (took 11.285295358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256235585 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.262963968 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26056588 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.261720404 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.261225599 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.257228776 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265363437 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.277689161 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.257879008 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.260739341 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.265011645 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263099725 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.26069354 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259392156 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.257402128 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259279667 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.264573517 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.263126782 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.2628965 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264195145 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260948291 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261217154 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261222909 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.26668295 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260465861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267257153 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261767152 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.265613795 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257446272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.263845544 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257894013 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.26321869 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26408236 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.26248723 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.264190734 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.263113911 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265279081 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278077325 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263922314 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263565763 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26268371 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.264326347 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259561504 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259182389 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25958799 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.264882514 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.264086951 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.265023311 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257580936 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260846703 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.271577583 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258048687 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.261593047 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261438763 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262235604 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264830757 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.280637055 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26377288 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268163196 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268217701 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.269872272 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280650636 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263385594 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.266284105 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266308687 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278506389 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264942102 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.2802126 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.26487776 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.266786378 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26730622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268868382 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285041017 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.263756428 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265657607 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.266404803 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259827511 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265420864 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267126709 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.281902692 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.263620919 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268978233 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266182268 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277098731 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.262898832 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.265183381 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.26708932 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.266165394 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.266209947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269378817 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.285751419 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.266751948 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260927296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.261401015 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262421555 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264691594 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259066944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26165485 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.265799498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.267091091 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26531703 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265746284 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268367582 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264333765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266372274 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26579182 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266152624 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261427204 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26658475 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.264920252 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265539509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262671803 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267366856 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.266432901 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266194006 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268136299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.266249429 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.263737374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265637833 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266628263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269343031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281068218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267588126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26681758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.267438438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277355248 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265525713 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.264612862 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.266827651 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269800912 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26582961 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.264622714 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.267541774 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.26381722 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266212447 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263520662 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.268407004 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.268168764 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266915386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264473831 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265643319 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.263399088 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264701835 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265486633 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.266100538 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.265478131 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270646691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264684182 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264291688 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262918758 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.266093063 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270488568 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263959882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267413662 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.264534278 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270060946 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263443435 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.268727685 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270086297 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.270257704 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266138943 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.268088722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268883636 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267684819 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270127554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265042045 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271766177 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.268052079 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.270071746 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262628327 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.268896332 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262148787 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269875897 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274814657 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.271087373 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.270123301 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266031438 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267057064 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270124664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270342881 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267499632 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271397199 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268444117 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270383749 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.270826705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267940322 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268743917 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264868476 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26403352 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270275939 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270185337 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275118437 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275513824 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289446515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26597235 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272881685 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265425093 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27347731 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271197053 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271619735 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.272216045 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268676106 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265059878 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269257837 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268811143 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269803455 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.267931882 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270596786 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270983958 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269543628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27142441 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266248698 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266275614 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.269596684 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273526406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271052346 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265837153 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.270981884 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265567301 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266148632 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.272573915 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270252339 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.271686748 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.271354186 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268331283 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266827351 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267715328 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268224305 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.271647791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268268851 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266717791 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276221354 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284050771 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268302172 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27245342 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.286159074 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.264780201 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267332816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.270911771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.270789973 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268127547 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280242681 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.269168593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270466487 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272573933 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265823843 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270148095 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272183134 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270645514 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266828394 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272897131 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.271039599 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27360017 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266579052 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268429046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267192913 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271068541 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273167167 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270471048 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268715038 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268925033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273489936 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271970107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269057509 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277937589 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272011174 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.265996869 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.268656135 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.267115998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275377339 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266947605 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.270128272 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.266782329 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277182114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293698959 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272076331 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284937889 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27067026 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271256269 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284948453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.270915122 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267795305 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265754801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26669613 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.266639809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271647243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267240322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271163491 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274129537 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269792352 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275499716 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.269676233 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268488942 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.267984131 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270460756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270381739 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267624642 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270300106 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266186741 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267723351 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26781212 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.267281393 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273579861 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286975807 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.268458282 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266579441 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268086126 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269735659 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.268130648 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274345884 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273802484 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.278534628 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26985256 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.274460829 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268302255 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27523554 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.269579835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270678591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.2773158 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272669923 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.268800368 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.268612794 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.270722359 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276419919 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291977836 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272613032 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275867575 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271814219 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.272074558 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.271208781 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272434303 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273399039 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.273977779 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276433034 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.287149433 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272235871 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268166418 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.273771494 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271726191 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.270141769 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26839688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270554567 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272046463 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26929551 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.268285052 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267420412 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271843962 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273046529 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271910991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27408477 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271987683 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275546187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288070966 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274876492 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.272484885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273307054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273345488 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272777475 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290163028 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.270853251 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.27456723 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272215949 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270896868 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265112347 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267977422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272811121 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26865908 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.276123849 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.272684321 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.271963006 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270113168 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.272853379 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268580864 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278622024 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288544559 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.267617176 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277199381 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.273479485 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271844579 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275402532 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273748079 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266594988 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271355116 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278069822 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280763643 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.271009826 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.273682014 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272519385 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274862288 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277378782 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274034596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277638519 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277590354 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271206485 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.274162559 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273540404 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276531912 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271262718 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272365399 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271298812 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280607974 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276904734 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271466743 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274931289 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275527591 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.27138209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270312551 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.273502925 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274364994 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276123567 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271956104 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277041563 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.279486447 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27322158 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271798098 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.275809876 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270490448 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273365119 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2745243 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276180213 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276952487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272540126 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.276878809 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.271030847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.271046144 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276346272 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271700282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275445681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272229834 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276402999 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271199714 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.275937694 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276823597 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278102052 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26965352 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272372551 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276909636 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275925568 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278873963 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.279131104 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279919372 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272111599 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272534114 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2776942 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271155806 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27491803 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278079974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272529596 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272806049 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278321125 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276506148 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278798779 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.272852943 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273142162 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281918578 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292693723 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276479579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276114477 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278196178 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271053764 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.277888322 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276640758 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271409903 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277753203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290472532 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277041464 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276026062 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273433363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276349907 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281219648 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278850489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272578358 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274726076 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.2766935 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277757321 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27711318 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27637688 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272920131 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275013196 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277384694 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279238222 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.278828226 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274657085 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274014105 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.273763705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277663379 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277667695 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277980904 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.277873508 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276234201 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276135144 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.276520787 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275083532 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274920525 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.276534462 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281326971 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279449078 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276090824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282057686 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286229397 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277383383 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273191327 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.2748637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277068301 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281841185 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280174497 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275701891 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27527255 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28247178 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279303904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.279565895 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27850959 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287565977 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298980149 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276918154 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275738403 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27834104 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.279388214 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280866102 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281543365 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275753577 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280199346 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285902399 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280125351 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28265281 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292631935 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275915296 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.283162437 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278345126 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.280777403 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280161046 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280410396 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.280398176 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280613367 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28758659 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282771116 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283719515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296879944 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294316293 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27683479 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278762627 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279436348 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281310292 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278116737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279803036 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280429557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28015483 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279963969 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27777126 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277895223 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278666614 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283461754 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.282019703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276529262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27762882 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.282320477 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280365885 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279247886 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280641015 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283092581 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28375314 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277633338 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286504179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299866817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283805679 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280633027 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280741725 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280905575 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280520928 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284087359 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288227026 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284343606 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280124328 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280435412 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282223368 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.284688079 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277788262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.28036387 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27718293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283754053 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286672477 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303460246 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281202677 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277960473 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282620691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284309558 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282220469 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280397018 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28380894 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278704037 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279272453 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286195492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.284508659 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283574903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280396974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.288545924 seconds)
  done (took 759.564723135 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283139639 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283959169 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284496137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282699358 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284330714 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283184539 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281570293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28116521 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281065665 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282850732 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282018842 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283940636 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284056293 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286092315 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285446939 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284380242 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283040593 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281974632 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285070589 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286319132 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286213667 seconds)
  done (took 28.157707852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283932266 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283989847 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284787523 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280978612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283180825 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.284072644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284094769 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280756177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282926996 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28021536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282337311 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282997451 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283204101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285230033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281837888 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283404646 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285527821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282278003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.283082596 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284794808 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285156954 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282703012 seconds)
  done (took 29.433267087 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281908926 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284066376 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280315808 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.28439448 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286876657 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.285034387 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285684921 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282660634 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.284660136 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.285722863 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280399896 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.281792479 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285207484 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.292747792 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.28057625 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.285248074 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281093642 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283557386 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289783853 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.285618877 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283288681 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.286418384 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.287304451 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.279669033 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287892274 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286509971 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.288186162 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285933015 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.280716921 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287271963 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286719972 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.284932396 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282174817 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.281416707 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.282873529 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289324482 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281697522 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.28689205 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.287319302 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289916594 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.300533517 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282369028 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288971049 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.304120471 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.28763316 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286192352 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292307254 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.287802668 seconds)
  done (took 62.932917979 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.862029873 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.881195428 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.880475499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.876849055 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.885588476 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.873497989 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.873320249 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.873164641 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.878004077 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.881239563 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.895849876 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.883350168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.885016737 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.872814119 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.882986286 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874159325 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87840681 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.874610613 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.882422762 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.8726773 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.880316891 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.882193043 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.882530698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.888626475 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878221308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.874724122 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879822199 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.870577902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.874975712 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.876381694 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.885319463 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878695621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.891376468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.884301918 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884428528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.876274634 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88427258 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.87747355 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.877519698 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.882593752 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.883775509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890252126 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.893818125 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.888560765 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.893362288 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.885033551 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.880830675 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.884806388 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.880653808 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.883302029 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.889578279 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.883120178 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891861366 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.882628057 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.887472922 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887595743 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.887574366 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.87753365 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.887254793 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.879752703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.888536538 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88429659 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.892925498 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.884873751 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.884282637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.882337541 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.892892236 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.881741809 seconds)
  done (took 129.19964157 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293985281 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28989575 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291933849 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291394811 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290316631 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291103394 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289507189 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.294938669 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290880589 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29036102 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289256187 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289425003 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288794884 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289786736 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28209935 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284042777 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284298626 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284998711 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28543564 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287366254 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286214951 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281036996 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28155465 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280008882 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281619696 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281180978 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280258231 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282267693 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283185087 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280458316 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278779687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278464903 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278247989 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279956779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279741551 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.2787665 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27916089 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278152475 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.27878488 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277708095 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277184436 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276518127 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277286976 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278456139 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277896512 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278671137 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279086274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277401614 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278871149 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277338779 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278883322 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27871773 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278011925 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279514275 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278873901 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278760564 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277820578 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279602972 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278150833 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279127867 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279042599 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.279826064 seconds)
  done (took 80.722985484 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278891209 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279804368 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279324077 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27866994 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279738376 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279458559 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279538195 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279104071 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278821041 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279318001 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279977036 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280974449 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281576721 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280330145 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280236226 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281678617 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280607153 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28091796 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279538109 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280679319 seconds)
  done (took 26.801013437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279930293 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28033285 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281386994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281128741 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278840071 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280467029 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280631368 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280423387 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280206171 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282357077 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280566872 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280963199 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281199229 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281153515 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280914168 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279912544 seconds)
  done (took 21.690729618 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.281331365 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.280313461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280468314 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281558505 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281212946 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28268881 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280469086 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279779126 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281416061 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280914503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281986065 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282297713 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281617259 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280203058 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280971968 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281950229 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281433331 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280130682 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.280605186 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281432962 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282458946 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282798497 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.28294085 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281029213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282645323 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28271973 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281567928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279513734 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282040176 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281207436 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281107354 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281967936 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282823858 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281939559 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28091912 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282469373 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282033679 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281795046 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282104942 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281112368 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283682385 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282287971 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281849406 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282675504 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282378098 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282468825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283845914 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.28344236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282837168 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283095797 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282279072 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282681984 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.283289293 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283597743 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282367382 seconds)
  done (took 71.707656141 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285206737 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283176533 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283492403 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284056392 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284094852 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285752851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283702417 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285924923 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283039455 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283022277 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284214172 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284860041 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284440544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282290906 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285446576 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28390005 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284155118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284488102 seconds)
  done (took 24.319627264 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284506779 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284025877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28513146 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284452581 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284776643 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285405504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284892386 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.283985327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284599989 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283154473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284014258 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282493272 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283358386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28465989 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284833072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28466882 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283891392 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283942182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287443161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284368909 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283646245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283131766 seconds)
  done (took 29.462252248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.279525789 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.278758778 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.279838039 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.293791036 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.295708453 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.278849479 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.279813241 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.279993373 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.295705873 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.316388362 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.314600272 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.296327409 seconds)
  done (took 16.694135716 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284600129 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284562746 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283974377 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284879134 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284482648 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284926729 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284262004 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285789199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285119602 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285393172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28534712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285148952 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28541037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285878129 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286248865 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285245085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285708357 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28512033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284255722 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285173088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285566372 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285401608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28490911 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285652895 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285973909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286859524 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286042858 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286733404 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286496525 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286063526 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286413961 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284332051 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284596798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285373715 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284907751 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286403836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284188064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286946637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28608963 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285195662 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285333014 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285077198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28566972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284761275 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284841395 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285199115 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285935946 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287210556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286258465 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287031851 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286215164 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287833211 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28634643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287705631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287483879 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288084806 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28635225 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287465013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287640964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28856414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28735537 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286831127 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287501892 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288417894 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287963706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286991713 seconds)
  done (took 86.083219801 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287555403 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289791492 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287137432 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288784622 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286816681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288740603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288408544 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288213515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286678064 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28906291 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288301897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289030043 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287908756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287682115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287444903 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289235378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28937332 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286930604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288168856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287664551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287477979 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288852166 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289414288 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28832821 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288200554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288781063 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288464975 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287707187 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289266147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288129144 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289399261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288649963 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289160355 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288053064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289521736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286948022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289325817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289850033 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288838752 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289162898 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288461753 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290298823 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287824932 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289458816 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28983421 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289434514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289369125 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290650032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290165916 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289737027 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290364739 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290211066 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290271373 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29070026 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290814269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290588877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290110261 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290454521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289563047 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28970194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288946316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289829534 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29081965 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290738903 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291245468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289423562 seconds)
  done (took 86.288677155 seconds)
done (took 1813.964725544 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452528682 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403376075 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.284572072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.299605481 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.285490588 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.310173147 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.300633614 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.287108992 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.285521372 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28504424 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285359378 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474892123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.285711014 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.289499916 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.286626812 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386347869 seconds)
  done (took 26.42168145 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310049458 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.301426592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.40306923 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.318421595 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322055968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47706748 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353371607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.300246779 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454125594 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.319687598 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.296371454 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32137762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.300190345 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.296214606 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318525805 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.479289641 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.529434521 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.293670718 seconds)
  done (took 28.611147789 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.707849551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.308196575 seconds)
  done (took 5.236080307 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.317554903 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.297112413 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299287342 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296264242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.288906026 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.289189104 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.297752499 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.290867833 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.300330292 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.416811069 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303961028 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310435432 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315693845 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297907354 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.301859677 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339793413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441287232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30138122 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300714123 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30284204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297542657 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.400728794 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337874385 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301354889 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411955867 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.306844071 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303564684 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304553445 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448263489 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301406929 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296825802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.297908554 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.298405281 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.292254084 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.734693175 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313496067 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.30675179 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323349016 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300842033 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451080346 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.299721403 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30355567 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.289855212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733143245 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42933052 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.409281313 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.317983721 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.30004997 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.300156134 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360826238 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297183352 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299731952 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356798357 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.070720281 seconds)
  done (took 83.329605 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.292710712 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.290548052 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471175218 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.311119664 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291280233 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290680956 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.306718146 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.55492906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.311843599 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29165871 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.619932582 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846071874 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316024243 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.352999673 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.167262432 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.367059193 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294600002 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.306813637 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.295531046 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.296625633 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829697241 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293111015 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.30868337 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.362279629 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330853425 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785846971 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29186636 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.294803594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311556433 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.292134043 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801116089 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.311163583 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.36706862 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.293861882 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55239267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647525467 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611790026 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.293812526 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337983068 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.2924275 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.308696034 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768800066 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.629013221 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.294182002 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.292799152 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782292481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292854351 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.303263043 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.297608638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542221499 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292871875 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.294461984 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.309386476 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.29748035 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.29286325 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.380949793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383002458 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788411888 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293432412 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.294365015 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330478455 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294761734 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.300584745 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296553541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.315083059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63279463 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520647909 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.299972117 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632177414 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797867523 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.313963668 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873676047 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312639184 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.314858637 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.484164672 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304358235 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.293885019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797702171 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.323986409 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.296237399 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.615624674 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297674093 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.611653075 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31116394 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295280558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844849909 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.295330382 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.306986603 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.294755482 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299826157 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.293815618 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29741143 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.579158407 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.326642417 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295612152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.295671651 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.335519056 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295265635 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.296951525 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301415368 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859442277 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.324803401 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.295109883 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297729235 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293173607 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.300969993 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.294573494 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.297026372 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562498633 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294279457 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.316513739 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294993123 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29685129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.307677006 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367471897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.302466218 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.583303228 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.296719564 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302089142 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298126866 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295234703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342812262 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296111364 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302911864 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.147684355 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.557080682 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310674473 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.297980277 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298729182 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298343041 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296888047 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298706858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345913702 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296355053 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071910644 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33009053 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.317487573 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.296805092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.296996969 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297710895 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.299088991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299789164 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58541587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.562692409 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.51025094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301832302 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.296284288 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038163576 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.344956753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477817078 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31693755 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302291587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548163696 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.504239337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299968103 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.298501603 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.298713544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559307687 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.300971131 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617320867 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832743746 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315429176 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.303811265 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078727767 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.006871934 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.303872166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.297654039 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61984813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.313106296 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.297266401 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.296882489 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299505031 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314747835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.319139269 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29924933 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.299262935 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.297629675 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.316979217 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488289604 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.314479284 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308831501 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786421668 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320755072 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.298693411 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.303537628 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301485005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299350203 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.372423712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.304372354 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.342285566 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.29884872 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300027057 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806435364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.298856743 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.299696339 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490054742 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978633932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.319101686 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.299966506 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.31591688 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.214278342 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.81132016 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333222057 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.587738469 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.307264507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.338365856 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299432711 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39912298 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812941816 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304281356 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316742655 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944001569 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.314522401 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.697816882 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.299805187 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301726565 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894238318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.317387508 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.300957767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299189494 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.300430083 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600715709 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.299781964 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.306262513 seconds)
  done (took 489.696296593 seconds)
done (took 634.503949993 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.299800842 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.301163016 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.295698406 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.301176182 seconds)
  done (took 10.429988498 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313158041 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.304427373 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307950569 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.304947326 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311091792 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.303029607 seconds)
  done (took 9.071304157 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.296459002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.302699435 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.301070532 seconds)
  done (took 8.12710422 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.494158533 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.322355867 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.607487251 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325150714 seconds)
  done (took 8.978794829 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.308279528 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.309735457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308871709 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311621888 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313318544 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314391034 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.312290521 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313105579 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312518454 seconds)
  done (took 13.031267707 seconds)
done (took 50.866240532 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.394675773 seconds)
    (2/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33667799 seconds)
    (3/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.344404475 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.435247828 seconds)
    (5/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.297259245 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.36295923 seconds)
    (7/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.473960636 seconds)
    (8/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.445750982 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.521708724 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.43614198 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.330654324 seconds)
    (12/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.456916857 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.396024113 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.409468266 seconds)
    (15/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.396597382 seconds)
    (16/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.376144139 seconds)
    (17/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.499707986 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.404615277 seconds)
    (19/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.078477465 seconds)
    (20/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.372508299 seconds)
    (21/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.422143585 seconds)
    (22/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323665211 seconds)
    (23/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.300582653 seconds)
    (24/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.383369854 seconds)
    (25/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.417691428 seconds)
    (26/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.486385746 seconds)
    (27/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.305876973 seconds)
    (28/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.380169756 seconds)
    (29/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.338536073 seconds)
    (30/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346817863 seconds)
    (31/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.295240925 seconds)
    (32/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.323871293 seconds)
    (33/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.408569133 seconds)
    (34/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.40086862 seconds)
    (35/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350742124 seconds)
    (36/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.427296056 seconds)
    (37/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.43695759 seconds)
    (38/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.358640544 seconds)
    (39/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.453979821 seconds)
    (40/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.507133692 seconds)
    (41/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.324948734 seconds)
    (42/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.389733214 seconds)
    (43/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.338589014 seconds)
    (44/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.302919208 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.380667057 seconds)
    (46/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.413405364 seconds)
    (47/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.293031754 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.339466623 seconds)
    (49/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.331559114 seconds)
    (50/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.503753562 seconds)
    (51/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.315763002 seconds)
    (52/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.33237829 seconds)
    (53/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.448302616 seconds)
    (54/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.048508386 seconds)
    (55/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.606247614 seconds)
    (56/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.64582409 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.403496832 seconds)
    (58/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.410014628 seconds)
    (59/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.459484376 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.409982581 seconds)
    (61/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.343701899 seconds)
    (62/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.488999563 seconds)
    (63/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.197505035 seconds)
    (64/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.359548826 seconds)
    (65/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.439190754 seconds)
    (66/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.309486283 seconds)
    (67/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.412429886 seconds)
    (68/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.340526021 seconds)
    (69/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.332402661 seconds)
    (70/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.443152094 seconds)
    (71/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.052538761 seconds)
    (72/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.049066201 seconds)
    (73/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.382714045 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.408989011 seconds)
    (75/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.360512839 seconds)
    (76/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.301457649 seconds)
    (77/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.383273021 seconds)
    (78/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.292420835 seconds)
    (79/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.417019335 seconds)
    (80/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.050280601 seconds)
    (81/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.387674451 seconds)
    (82/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.4599949 seconds)
    (83/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.471702202 seconds)
    (84/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.517710915 seconds)
    (85/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.964944623 seconds)
    (86/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.303139124 seconds)
    (87/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.510796072 seconds)
    (88/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.389957201 seconds)
    (89/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.387943667 seconds)
    (90/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.449747168 seconds)
    (91/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.348624417 seconds)
    (92/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.302001864 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.38074925 seconds)
    (94/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.438575951 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.39992787 seconds)
    (96/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.313184573 seconds)
    (97/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.382261072 seconds)
    (98/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.396371422 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.349337412 seconds)
    (100/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.3438879 seconds)
    (101/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.396659168 seconds)
    (102/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.530717396 seconds)
    (103/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.322615109 seconds)
    (104/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.349504883 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.415227295 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.305830707 seconds)
    (107/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.313534176 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.412409309 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.335289536 seconds)
    (110/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.41270104 seconds)
    (111/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341866915 seconds)
    (112/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.316630966 seconds)
    (113/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.407891501 seconds)
    (114/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.619491207 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.99290053 seconds)
    (116/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.066985928 seconds)
    (117/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339825284 seconds)
    (118/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.38582839 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.341493594 seconds)
    (120/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.085130808 seconds)
    (121/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.431598435 seconds)
    (122/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.174723176 seconds)
    (123/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.446931755 seconds)
    (124/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.522722096 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.299714016 seconds)
    (126/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.122154148 seconds)
    (127/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.060882532 seconds)
    (128/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.464772032 seconds)
    (129/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.314646806 seconds)
    (130/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.41386368 seconds)
    (131/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.363946364 seconds)
    (132/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.306521726 seconds)
    (133/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.462616904 seconds)
    (134/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.344165258 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338988997 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.30496224 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341147884 seconds)
    (138/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.550800623 seconds)
    (139/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.47145877 seconds)
    (140/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.118759588 seconds)
    (141/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.355848168 seconds)
    (142/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.214605806 seconds)
    (143/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357356091 seconds)
    (144/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.081604859 seconds)
    (145/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.987047618 seconds)
    (146/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.366822363 seconds)
    (147/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.354813712 seconds)
    (148/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.439642258 seconds)
    (149/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.296590136 seconds)
    (150/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.487986914 seconds)
    (151/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.965000054 seconds)
    (152/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.996043946 seconds)
    (153/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.50356273 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.451743525 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.381172978 seconds)
    (156/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.390058362 seconds)
    (157/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.360935593 seconds)
    (158/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.028548628 seconds)
    (159/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.350357689 seconds)
    (160/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.505999126 seconds)
    (161/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.416896721 seconds)
    (162/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.50990614 seconds)
    (163/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.99335454 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.520957729 seconds)
    (165/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.324462746 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338216467 seconds)
    (167/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.325386596 seconds)
    (168/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.310376844 seconds)
    (169/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.505909093 seconds)
    (170/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.319463647 seconds)
    (171/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.310167843 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.515858046 seconds)
    (173/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.329979533 seconds)
    (174/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.313528479 seconds)
    (175/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.506915066 seconds)
    (176/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.478139211 seconds)
    (177/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.444675527 seconds)
    (178/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.655729042 seconds)
    (179/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.557343981 seconds)
    (180/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.963313125 seconds)
    (181/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.990681223 seconds)
    (182/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.410545494 seconds)
    (183/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.220658219 seconds)
    (184/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.470251449 seconds)
    (185/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.02321512 seconds)
    (186/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.372058481 seconds)
    (187/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.347608934 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.359303574 seconds)
    (189/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.458805148 seconds)
    (190/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.357194334 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.395692515 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.436546905 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.436741184 seconds)
    (194/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.297066223 seconds)
    (195/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.563699395 seconds)
    (196/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.3570206 seconds)
    (197/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.470591886 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359600282 seconds)
    (199/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.332953565 seconds)
    (200/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.415120206 seconds)
    (201/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.416288363 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.409341879 seconds)
    (203/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.345039123 seconds)
    (204/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.415854198 seconds)
    (205/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.300561248 seconds)
    (206/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.326899717 seconds)
    (207/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.418918259 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.308843596 seconds)
    (209/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.462855831 seconds)
    (210/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.356654023 seconds)
    (211/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.443398721 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.530251401 seconds)
    (213/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.33949025 seconds)
    (214/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.485212715 seconds)
    (215/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.477933147 seconds)
    (216/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.127379245 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.445523225 seconds)
    (218/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.361329634 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.465582594 seconds)
    (220/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.360529974 seconds)
    (221/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.356628531 seconds)
    (222/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.368679149 seconds)
    (223/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.507090806 seconds)
    (224/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341083763 seconds)
  done (took 365.794677553 seconds)
done (took 367.022038826 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365093812 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.505589345 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.3185006 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.317738374 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362052353 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.313431262 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358770883 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32526592 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.32825879 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.32697309 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.315067162 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326823328 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.331516488 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35537913 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.432908591 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.325833976 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.319101236 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321373032 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363777887 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.382709877 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362470379 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363106201 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.336255058 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.318792515 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366580271 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367162075 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.324798333 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309695459 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.328862742 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.365145657 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322167194 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.329622996 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374989054 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.373846192 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36214611 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.323341662 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361697487 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.507179413 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36112221 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.356812815 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.32756773 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.373791147 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331010807 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.33039761 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373460352 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.336385473 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367660306 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.44308017 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322221782 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.308140853 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369831485 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.384654117 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.327834482 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.304244776 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32043788 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.44699574 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323894024 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368758735 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324896908 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365873017 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.434164523 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366035863 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384902619 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367801294 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.326341741 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.334290962 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.32380797 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.384392373 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325339316 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365623945 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36601014 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329264587 seconds)
done (took 106.711200888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440191393 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.316294173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.455825272 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322597055 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.478260343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460214405 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32290324 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321961576 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.322839607 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.126907235 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32438353 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.323837895 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.317711209 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.322979579 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.444615418 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.323229575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.322213084 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.032334218 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324611577 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.45953968 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.316337407 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322796244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.323035193 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.124393274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.316564722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.312624726 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.458577444 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.323782427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.026071742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.314001605 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.317317674 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.026509483 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.459959961 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.3430157 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.332626855 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332243393 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.478771316 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340616938 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437903749 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438946028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.457197095 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.361271194 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.315454624 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.318397273 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325361545 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.323254701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.324249459 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351843784 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.317933902 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.324748167 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.031787232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332802267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334492676 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326078405 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323804177 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343186217 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.325460698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.323980351 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461314502 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.325075025 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.442748756 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.124588927 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.126675778 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.325190472 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.314619397 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326491218 seconds)
  done (took 107.558092392 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.387555387 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.397261786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.429786332 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337516162 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.371852446 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.432426054 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.321907056 seconds)
  done (took 10.918867848 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.326731676 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325934585 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370362419 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371071256 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.325653534 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.478859964 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325622654 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.332324966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.324708361 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.373745672 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.325574 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.325264502 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333534376 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.318882149 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370709572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.333874133 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.43739198 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.323082124 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326177354 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479685233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326126173 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.33549744 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.372895063 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.332451411 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.326165337 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.328645802 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.092605169 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325649324 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326159752 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.327305001 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327027043 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.375335618 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32728043 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.320783901 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327911705 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441148722 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.327446635 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328361943 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327388017 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.325482103 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.326508457 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3288358 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.326342064 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.325759223 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.325818436 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.344968974 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.325797859 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.323955977 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.325865837 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327421761 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.374091227 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327642174 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326296985 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326177901 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.378162887 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336631935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329070061 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.328047439 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.327566514 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327136398 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.48047311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372753209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.328196245 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371152366 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327871742 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.326569443 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.327977513 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.32779623 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416154121 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327929797 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371822527 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.327756819 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.505054865 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.348133033 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330066332 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.327187168 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.327288849 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329502952 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.321527 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.330946836 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.329762414 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.325820806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.33144554 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328740492 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327781419 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.486814629 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433702011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.329591893 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.337910148 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.33271888 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.32843875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.377823309 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.328772872 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.328685337 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37887183 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.439962255 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.378473465 seconds)
  done (took 136.810610771 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.336187941 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.33832784 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.328518581 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35205061 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.325696108 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.326453666 seconds)
  done (took 9.250796147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.32661767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.332158063 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.330039001 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.329889466 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333299266 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.335491164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.336692834 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33441629 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.336309043 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332801314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.330279747 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333498822 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.331207606 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.330407436 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.32934563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.33094425 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.330603121 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.330670659 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.329310279 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33039788 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.324479989 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.330659338 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329399345 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.327543807 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.333684485 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.330998856 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.346198776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.331705456 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.332755974 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.331373766 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.350728909 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.331704392 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.328413088 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.330715267 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.33528328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.328451749 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333999238 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332647524 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33164107 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.331663932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.333876881 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330637261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.330397706 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336477356 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.328919768 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.331901794 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.336719572 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347149417 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33192147 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.333667392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.334561757 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.33207571 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.332376976 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.333086382 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.330167581 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346987729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.337045871 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.331774917 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.332562138 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.329307778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.334948309 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.33190333 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329674277 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.334665563 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.332587488 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.33395124 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.330262754 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.334927614 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331562529 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.333370024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.334753517 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.331775458 seconds)
  done (took 98.211972609 seconds)
done (took 363.987351244 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.203113228 seconds)
  done (took 4.450607879 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.328598195 seconds)
  done (took 3.578792871 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.313594107 seconds)
  done (took 21.564935833 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.335730728 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.325695948 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.367303929 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.326985874 seconds)
  done (took 10.603945699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.616452257 seconds)
  done (took 3.864687595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.32996217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.326858619 seconds)
  done (took 5.907909409 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.523926885 seconds)
  done (took 3.773143272 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.809291024 seconds)
  done (took 4.058213671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.358331833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.340674721 seconds)
  done (took 5.955821336 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.314662469 seconds)
  done (took 3.562383418 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.700491403 seconds)
  done (took 37.950383439 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.328693286 seconds)
  done (took 3.580507006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.362208943 seconds)
  done (took 3.611132879 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.727133065 seconds)
  done (took 5.976118647 seconds)
done (took 119.685723364 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.322903312 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.324136277 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.32315982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.323822874 seconds)
  done (took 10.542583909 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386243984 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385482529 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.387865501 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.385838294 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385048431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.386934239 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.359787001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360882437 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.386716109 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386408936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.386365512 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.385269561 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.386264969 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.361283999 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.384500304 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385686472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.385826597 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387862699 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.361921016 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387254163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.334958315 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.388325759 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38656288 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.336409457 seconds)
  done (took 34.31983841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.824361071 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.40221903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.484451679 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.382290357 seconds)
  done (took 7.343740137 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.412497129 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.411479336 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.425536272 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.465021942 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.477044338 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426392544 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.3575327 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.357040146 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.344704797 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.413194385 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.462802574 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.40472667 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.493414472 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.335217729 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.542259351 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335608887 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.336372844 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41340104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.465564932 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.478230172 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.337057083 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.41450783 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.415621449 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.414088729 seconds)
  done (took 35.190223396 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.346345363 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.352831203 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.338887981 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3545449 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.33759357 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.338270933 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.339524152 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.344176499 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.337475245 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.336374423 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.338585768 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.353177736 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.34240496 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.338760126 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.346327873 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.338727216 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.344142571 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.342276629 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.338555093 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.346108049 seconds)
  done (took 28.107219592 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.326791648 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.327334292 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.677653609 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.583280091 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.326360881 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.330044464 seconds)
  done (took 13.823938007 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.399247942 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.532928379 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.334468891 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.662174169 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.749734053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338548299 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.333818241 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.568383567 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.864795097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.832455487 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.391852598 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.402049928 seconds)
  done (took 19.666585362 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.338118492 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.331987665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340803921 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.345826191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.385067336 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.337312993 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.34136121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.328858137 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.387964251 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.389564081 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338422829 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.386580173 seconds)
  done (took 21.506260098 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426567722 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332315346 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332489462 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332504496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337999562 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178025132 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328947602 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03949385 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.359773649 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609339389 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331735724 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431401134 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588123419 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334337488 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336381848 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325948085 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563375398 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823434394 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337856536 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333631218 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386347344 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342886107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346842505 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537897716 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337752078 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333636585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.596123024 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332155251 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605435853 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351126518 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34289287 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333508442 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610471957 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972102616 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454374452 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532376345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337756065 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335658838 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.326451784 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.334118813 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344115045 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340358173 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344137336 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333510215 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334600971 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342924106 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053878655 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.363819407 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.334615374 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334328349 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583058238 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434015241 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.342001566 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33421852 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3747596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338543154 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.342039419 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462649061 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933898949 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335272096 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348655451 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.337946032 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34223259 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340148883 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941143081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.346741219 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.340997499 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339650226 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333548061 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33416781 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357709902 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331955758 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359948913 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334124535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012178148 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338390267 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350491096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885654977 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34532635 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.338804717 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562334849 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330406676 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329754363 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.330059191 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330928379 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030153805 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341709166 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.317951905 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397137044 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055085033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.553339742 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357537025 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363447718 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55559714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.319885076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333630406 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.336605379 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336698269 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355670579 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046022136 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355591995 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.342132842 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593794168 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.544768492 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341044046 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.325043383 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80997717 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360826614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.355333078 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342497906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536728546 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.890089474 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354896558 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333924942 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354852387 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333667718 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085453007 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342622535 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.441543677 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34668297 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603947973 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.138603549 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336708339 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402532461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337861196 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333979602 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334899882 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339351653 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335893695 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.528047246 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367063208 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350213013 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.335542719 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335031153 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.335413696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339867919 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.337568919 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558579923 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342141311 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618889579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336308825 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336692862 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335800267 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.560813758 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.342216942 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.677842364 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598712541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345688556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352600382 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35191239 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356226619 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439667387 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359548029 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.345770033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597251209 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.343538925 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.344534718 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335656364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338221523 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341144871 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.346720568 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340162859 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33981145 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321841784 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344356165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225636991 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.353334568 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404550393 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345487003 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538035429 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.341841312 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364170349 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.344961244 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.337512848 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566734392 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346346861 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.335582067 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416070336 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791168781 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913611783 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357741219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.336248743 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.337029909 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.337426893 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336857953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337563037 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338049768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537522713 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356887822 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333166271 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916179377 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344143497 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337444178 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.345868154 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349102458 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.346794221 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337978518 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.347351613 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341395839 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357857448 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352976536 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483335204 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353835581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337944653 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.857800356 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345619112 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338300564 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339129348 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373784162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337059367 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116734026 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600315312 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34237383 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590639867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34478415 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.35817179 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.337816727 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346138382 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353927112 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.343685962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367712303 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.348411039 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340236785 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340233638 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915377198 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034074624 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855333531 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353166104 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.341822461 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344982636 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053631519 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362763373 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340399511 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569542306 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059253159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361461946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800213576 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.372119363 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070351738 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594092726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577087136 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349989488 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.346121181 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593076546 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559077581 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374189838 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340735897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344947969 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.327958698 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869662947 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360751248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422330789 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046992724 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366652481 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34363381 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.391744221 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349205281 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728445408 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363483647 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340576429 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345488688 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345945765 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137809681 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349472803 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341737962 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930554925 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343395414 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.816662391 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364711066 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543940208 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.358339346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.347146056 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.348831743 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.35539825 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.600745341 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595042559 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345806138 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345032254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877623373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.230023845 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.351509972 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343482548 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094540362 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345957932 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639832782 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.352702949 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.349169132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365623815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346199537 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346339257 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.346095328 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35564098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322354255 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835475926 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.346957045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345152422 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351581837 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349102426 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59914518 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36073487 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902218755 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578886284 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346244527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386349602 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.348738157 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357237657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.333213643 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343880888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343902367 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380261665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575678194 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348653435 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.335605722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358641248 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558702258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343237781 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343513386 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59114114 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.350791237 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.365909791 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059153175 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381574837 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343248879 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363487868 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349204466 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390580108 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416051187 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549225302 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.363907096 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.35835255 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728991005 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367467085 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364706514 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.363743398 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442699029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346137076 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354210019 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.146735107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909862236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048280601 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911522171 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601256459 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350590962 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354002118 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346175146 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509139688 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346538439 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622909984 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345284437 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.341337393 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373102314 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345502982 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375120747 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561943756 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623961906 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3461053 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345927346 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350318008 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.344973533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358272124 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.556972165 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838299441 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912238972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353020538 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351949136 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064480624 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644774815 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345590188 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345926835 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347041776 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.35362094 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376458509 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.359982178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348541628 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492517839 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596232109 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994134916 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377585188 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.375985623 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.866357158 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346352275 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601122144 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354036785 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549762954 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9124423 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019577535 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619327737 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418585245 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547734455 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.350272184 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511033372 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.349686816 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351439681 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347766387 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347161724 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.348470077 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357450548 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917332451 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61921807 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.354489358 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.350838999 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382228014 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.358588831 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57097033 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06678852 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57479881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357927105 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354227202 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347023519 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910763837 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60518505 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353967337 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353861934 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576893472 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35191919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372600731 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.866491811 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.346963888 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903628825 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.325705878 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371198512 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356502188 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023305413 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92016773 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.356579367 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848050698 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359092045 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352435346 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632636321 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.359814365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360739672 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63392989 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.357512445 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36040689 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555812444 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.913914191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097136004 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.354724804 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374501468 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.357170313 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350467477 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366583479 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355021562 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352069171 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.748610667 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373246015 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351041687 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363651232 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.361742968 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358690176 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.354526261 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351452458 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.358803659 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.351220234 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.353320595 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365340478 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478719912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884620075 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369717701 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.030135718 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.679426222 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606753169 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361158051 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341345491 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.358688647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350810058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351532326 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352053056 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351086561 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915642287 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.36883853 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.365780511 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356993472 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.351099441 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563081047 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350906841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558705483 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367165577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37357348 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.337999833 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352391994 seconds)
  done (took 960.521149354 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.359449804 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.347807322 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.364999479 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.384409556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.373871943 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362545 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.360310453 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376177274 seconds)
  done (took 20.201398533 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.358987439 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.361665349 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.356429086 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.363503337 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.355891451 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.810028984 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.374726333 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.36324617 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.374200274 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.358727846 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.365873599 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.344095524 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.377557945 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.355314878 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.345609655 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.364146621 seconds)
  done (took 32.502643171 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.23696675 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.455117616 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.070433365 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.347642486 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.362779728 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.354119236 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.528958416 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.373274765 seconds)
  done (took 26.003706771 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.360415994 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.360877475 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.360503275 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.360571738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.359809101 seconds)
  done (took 8.075410607 seconds)
done (took 1219.055879049 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.359235094 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.359815709 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360514707 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.360744197 seconds)
  done (took 6.714265919 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.341241719 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.342667804 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.344262415 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.357756541 seconds)
  done (took 9.661687521 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.023166466 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.97824927 seconds)
  done (took 5.27752539 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.854884897 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.842532617 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.848609835 seconds)
  done (took 6.822254821 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.63232655 seconds)
  done (took 2.908394029 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.279712851 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.350634681 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.024552522 seconds)
  done (took 7.932126493 seconds)
done (took 40.588771263 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349823202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.61863927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.50717589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.351141334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516509114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.507096479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.087726301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364089625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36344841 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.361857432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.357390598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520287359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.138624689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.600669492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.135077625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.600386712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.511299852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.352301381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.358342441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352500455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.089688628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.352135734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360933767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360636131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.515798532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.497522637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.356180998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.601096596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352596835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.359012892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.496442164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35479767 seconds)
  done (took 81.929992571 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355642902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.352732882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.36563299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.351935039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.36631238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.362037174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.350826789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.353832398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.351872552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354300187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.352610482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352928142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.371805973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.361482846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.352471524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362598933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.352444612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.352216145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356436075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.3731461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.355493304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355593186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.353586424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35744162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.371138804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.37009347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.353955585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.371627684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.354962347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.354703477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.373446704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.355371485 seconds)
  done (took 76.760326326 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.359046544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358379112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.358600537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359791305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364186797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.359164931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.360294859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.360704087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.354280889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354715393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.355239821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.357348485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.355678265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.353924493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.35854682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.359770255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.358599332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358132314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354203582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359240858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.357913097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355200909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.371158596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.371456052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.35833993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.355359132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35440004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.355679555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.371402129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356074455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360169821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358855751 seconds)
  done (took 76.764050279 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.638623349 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.367873158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.368817396 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3601145 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370114845 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.364859335 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.358723629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.644750737 seconds)
  done (took 14.751284302 seconds)
done (took 251.481982559 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.358834618 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.859993173 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.410022783 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.357040353 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388403472 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.387831845 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.579309229 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.407305489 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.577944522 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.388069375 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.379789784 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.373010045 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.118531124 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.512325253 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.195158667 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.299828542 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.194788964 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.361436892 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.92429458 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.636520937 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389611577 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.366741596 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.189269658 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.221304343 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.352963934 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.44395781 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.457744218 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578674307 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519016883 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.442851911 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.867222908 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.366859334 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.364550384 seconds)
  done (took 63.553467744 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.36249849 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.490337528 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.367401199 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.368043832 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.498412599 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.387568218 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.362408664 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.367523865 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.371450669 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.369057929 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.369073827 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.371756909 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.370253723 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.417954725 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.495874112 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.381502502 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.362611279 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.489140979 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.363327409 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.362311916 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.415434218 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.368380868 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.372265157 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.41770069 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.367281488 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.367886753 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.492443718 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.367804592 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.370572553 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.489588307 seconds)
  done (took 43.242241855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.36956878 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.956750374 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.101438497 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.373379728 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.364666078 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.369595447 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.634166865 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.374198401 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366965642 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369318633 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.862195627 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.376215421 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401017175 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1274513 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.372316738 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.370255183 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.368955978 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.365380529 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.968295003 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.379444534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.654276496 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.373995908 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.638678922 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.379295348 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388918264 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36744157 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.36960254 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.194442001 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.387424331 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.860344343 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087015697 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.634245892 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.121937517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.128149792 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090863087 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.376519981 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.37162462 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862311798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.370539333 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.36767256 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.63562758 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.370916015 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.106935579 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.061898954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.384267222 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.370644347 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.212773449 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.878230453 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.594884798 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377553908 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.127337561 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374942916 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.373370922 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368587757 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.596251226 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.374675835 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.367600563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.228547102 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395494156 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.636980332 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.376844445 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.368304277 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.966548598 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.373516366 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.963876689 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.373882027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.377692915 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.387695395 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.111117847 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.373432325 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.080542981 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.388489129 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.372891381 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.861492371 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.969345116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.272593604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.370452882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.973045274 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.146153047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.65511796 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.372566368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.172866713 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.654762616 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.375388476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.375173865 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373586875 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37437759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.448625978 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.635138941 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.021871554 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073041949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23782417 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.65828868 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.382012549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.369603219 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218325676 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39446277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.374426587 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.107461839 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084169121 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388881493 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.378039772 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.081619719 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.390064083 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.64050077 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.37920217 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.118970917 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.372571461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.450157538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.37311308 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.376721389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.392031764 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.639463375 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.377039872 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.374325646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.058719054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.895023138 seconds)
  done (took 192.174658729 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.367059617 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.362724263 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.364803345 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.363730123 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.361348639 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.370389702 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.361446894 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.362886037 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.367537948 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.362557995 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.362743339 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.371065743 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.369955125 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.361912001 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.364843117 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.363532373 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.363945891 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.369124578 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.363910176 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.366376093 seconds)
  done (took 44.589318291 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.37374012 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.895425471 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.867536117 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.380733061 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.374680843 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369786876 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423377358 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.377719358 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.373261475 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.653188528 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.53949199 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.378433078 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.3745468 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.374765873 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.866271611 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.369987491 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.652522352 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.901703856 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.380742275 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.900569836 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.370002688 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.376126098 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.371413059 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.90156761 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.668202985 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.642429133 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.430538285 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.901959268 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.381300876 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.375364685 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.896904354 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.376763983 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.371611723 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902928993 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397262522 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.389668408 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.375870472 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.427022915 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.42794808 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.659035947 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.379751691 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.651545356 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392954748 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.555007808 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.381280313 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.364996096 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.911411098 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396558604 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.366188718 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.37808075 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.381772544 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.875970031 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394136722 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.879328395 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.397696653 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.377931093 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.905304955 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.883321305 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.891313064 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.537014165 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.378073458 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.640737282 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.380465915 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.911420294 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396646275 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.377863147 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378332467 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.536312202 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.905300884 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.641937817 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.660812907 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.655879811 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.377994781 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.434245523 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.397869449 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.303579717 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.432935393 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.791353221 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.66204997 seconds)
  done (took 125.326991285 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.633590901 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.485375226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.761887817 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.96720603 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.420948796 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.507102103 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.48594366 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.633446071 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.385347544 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451905557 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.984384865 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.482809488 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.111432753 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.461342692 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.476107335 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.519393019 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.757166921 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.342281484 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.078293937 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.962549989 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.422347581 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.472987141 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.927769285 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.589600418 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.372563871 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.951721889 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.320432608 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.02911923 seconds)
  done (took 53.285357266 seconds)
done (took 523.453533445 seconds)
SAVING RESULT...
DONE!
