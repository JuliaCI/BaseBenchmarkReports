cset: moving following pidspec: 25987
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.327922369 seconds)
loading group "string"... done (took 0.595411468 seconds)
loading group "linalg"... done (took 7.243065758 seconds)
loading group "parallel"... done (took 0.173908415 seconds)
loading group "find"... done (took 1.130085141 seconds)
loading group "tuple"... done (took 1.778967843 seconds)
loading group "dates"... done (took 1.229998485 seconds)
loading group "micro"... done (took 0.230080234 seconds)
loading group "io"... done (took 1.026871344 seconds)
loading group "scalar"... done (took 40.075261799 seconds)
loading group "sparse"... done (took 12.991726467 seconds)
loading group "broadcast"... done (took 0.989191129 seconds)
loading group "union"... done (took 13.980608325 seconds)
loading group "simd"... done (took 4.676867763 seconds)
loading group "random"... done (took 9.248738678 seconds)
loading group "problem"... done (took 1.944178861 seconds)
loading group "array"... done (took 21.570924052 seconds)
loading group "misc"... done (took 1.98041066 seconds)
loading group "sort"... done (took 3.260404136 seconds)
loading group "collection"... done (took 18.228732482 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545973615 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143094308 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119326552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140079753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188107103 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1342453 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14437185 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08672598 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.090525121 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163492393 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140980447 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478760392 seconds)
done (took 5.249350234 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205386307 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088331523 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097751764 seconds)
  done (took 0.998853488 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.0673294 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127306819 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082038598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069155049 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067664781 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082574748 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068210976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066962237 seconds)
  done (took 1.383850732 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076099333 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069732003 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086415542 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068820463 seconds)
  done (took 1.122860923 seconds)
done (took 4.606948285 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.90330441 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238556407 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191340796 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454494911 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148719673 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189528895 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675594327 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324443812 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21118729 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10083698 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105392444 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380687002 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107842192 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675374585 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07742067 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106759196 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159172612 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431696226 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08344683 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084166781 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105383616 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143524639 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105587731 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078392349 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168045071 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070864214 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149254287 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096504725 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069672271 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245667553 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191030536 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691071011 seconds)
  done (took 10.62270013 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098369481 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119416814 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070623818 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141034833 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103959078 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088574915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072635217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084772987 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093888043 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160684034 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120097276 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108131488 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083811371 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071663277 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102720795 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213411695 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112219726 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087076277 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088829672 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076459901 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124496013 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085565999 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096816978 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07946374 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15438813 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197802329 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116563243 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113683593 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071690411 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08152941 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133614094 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144353049 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070177631 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083952476 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140839476 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.115290528 seconds)
  done (took 4.73854184 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.06673878 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161803984 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09285391 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153917063 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086990314 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111555767 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085068458 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100912171 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248686357 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.075411643 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.459462809 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131225724 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103369332 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069414617 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086541029 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069556327 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.521776167 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146528885 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103126028 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103647143 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090611823 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072120483 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363597819 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069758317 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066824127 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086175888 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060582425 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102876482 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147205031 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070269018 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.225752599 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091340379 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068695869 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123089313 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196844578 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098356741 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124600628 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067973138 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08334117 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171458171 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093618364 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090892748 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068259306 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106190952 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106203697 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121941334 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084175876 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068788841 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182078382 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068441985 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100709226 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.900413925 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167878596 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097321215 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067376243 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287847303 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085189929 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085685139 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066480915 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25800144 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154859902 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068835174 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084648522 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067211151 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068432881 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383361798 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068881252 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.872131506 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071927617 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077308287 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086336453 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068300454 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090476011 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073570711 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101755603 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068231666 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068781928 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084638442 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067092719 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085317284 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086904716 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205174148 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084656855 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07063058 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06507859 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083374233 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087003195 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113810052 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07325826 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082911941 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115552643 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070178759 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067744208 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081865016 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103212778 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085580097 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085679099 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086964211 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129223974 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070798806 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.128926173 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081975032 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098716935 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088799743 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116250263 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079759817 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08526693 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154488889 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066757983 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065357675 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085320794 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065941456 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085602123 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069765495 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098246653 seconds)
  done (took 21.308897527 seconds)
done (took 38.559076951 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.298577821 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095012527 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0940742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076651684 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095142455 seconds)
  done (took 1.553435594 seconds)
done (took 2.421176937 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121386565 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119119874 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064354144 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115534522 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064828314 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119681006 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116695155 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082844829 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118022473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06630158 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11440465 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065473689 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06442702 seconds)
  done (took 2.128436735 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085084592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085719503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088268604 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083939009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081376292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084441187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080787969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107793278 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081810376 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090394975 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065913314 seconds)
  done (took 1.798834529 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084256708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085331727 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087692318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083006649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081047515 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083431816 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081568071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104615143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082306218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092380101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065888409 seconds)
  done (took 1.796644585 seconds)
done (took 6.583439441 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080544174 seconds)
  done (took 0.939523472 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.711073954 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.661841969 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085278206 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134677801 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223122394 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155986782 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.446712306 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110659026 seconds)
  done (took 10.572694841 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090840714 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10230097 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071105327 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088375205 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07069189 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091086598 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074378678 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073460321 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086533821 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073938607 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089410812 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07247942 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087085588 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074422037 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073120519 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089086014 seconds)
  done (took 2.233843873 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09563139 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094650319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09386094 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077590089 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092778316 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074506601 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095422771 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077006527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08988372 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075003274 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093583163 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076827399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091048396 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067928146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093421784 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078621718 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090005334 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07766073 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094118377 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077905773 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094217618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067645651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091617809 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077950496 seconds)
  done (took 3.010002443 seconds)
done (took 17.623039788 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134877153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079403034 seconds)
  done (took 1.078313284 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084175539 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099999716 seconds)
  done (took 1.056456066 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085334532 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083841061 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091384896 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097429022 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067539329 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085356484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106022025 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069479792 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066655534 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086531555 seconds)
  done (took 1.71150074 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07185196 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095300652 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073291228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099794743 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076386653 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083089977 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075638353 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085884569 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08109911 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081391138 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074538975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101789984 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07363859 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103290327 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074603671 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088284464 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088862491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070573484 seconds)
  done (took 2.372813464 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069569496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067732023 seconds)
  done (took 1.011072515 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070646004 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064930448 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085467916 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068144131 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083279846 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06559666 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081950588 seconds)
  done (took 1.395277352 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405653515 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110776167 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.245197793 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091406811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106734811 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264509401 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.087020306 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073237461 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090882142 seconds)
  done (took 2.389173663 seconds)
done (took 11.887321948 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082736921 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087917481 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11365665 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.428223189 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111725815 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068802599 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144472981 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212620973 seconds)
done (took 2.126707932 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127854158 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627763321 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408505499 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215180861 seconds)
  done (took 2.131454326 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387984723 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094233205 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076497194 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069812754 seconds)
  done (took 1.510779491 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068926494 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072104701 seconds)
  done (took 1.022791988 seconds)
done (took 5.677544828 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068814051 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102995603 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069230252 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06557122 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086192909 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06676475 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065272846 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086736862 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068582283 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067141247 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.085931943 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066188758 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083482011 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068913677 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066129401 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081946352 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06800261 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066050044 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082579973 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068282801 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065450712 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085216029 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065786658 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065300494 seconds)
  done (took 2.682910784 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088301663 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085335933 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075093097 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089927345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074987299 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090258901 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074823613 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067587858 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090789166 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070593921 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089748932 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07253341 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08724912 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073219094 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086532044 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073204446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09145178 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070406495 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07054065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089831688 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073029431 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08636102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072316721 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090876679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07231259 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089705741 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071271392 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084756333 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074334297 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088756042 seconds)
  done (took 3.300491315 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074394787 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065026326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083342487 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073256498 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064998323 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085560797 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066158875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082282319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067498851 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065173612 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084707755 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066622694 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065177788 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083960311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067031196 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085376398 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083487367 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065864306 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0829142 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06667051 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067896506 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083926387 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066485639 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082476901 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066621767 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065448642 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082861223 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067187578 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06701061 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083029815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068675178 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068981782 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083890172 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07245497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085566766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066586761 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069216427 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082413682 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067572168 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06508037 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083146457 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065751583 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065234926 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089588096 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065392973 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085244771 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066472396 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066095852 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084285248 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068624916 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081628805 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066827919 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067151398 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083948886 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070263349 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064490134 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084727582 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065430837 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083170961 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066757829 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064656885 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082091965 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0688625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066507689 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098351539 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072326902 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081952138 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069035434 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067559604 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085408496 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067686625 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079304915 seconds)
  done (took 6.206877886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121253746 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09358385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086331853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067574482 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081494541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067797667 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069743909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08408839 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068087952 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067481739 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067384959 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08588187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07818821 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083824654 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06897529 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088217101 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06716205 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066385395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086787962 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066307638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08662297 seconds)
  done (took 2.634010167 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190065642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089634446 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11167786 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09444273 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069383109 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093485391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071594023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090817175 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071286239 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09020589 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069845112 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089483229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070006843 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087330256 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071197483 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087738026 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072875199 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086968027 seconds)
  done (took 2.498014861 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081436433 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068113321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109776527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068003299 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086814841 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070622027 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091389399 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076898314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088952903 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068722875 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094321675 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07100078 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087640731 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070178938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070702754 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085686955 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070970355 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08565712 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077510734 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090687354 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073453439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093571962 seconds)
  done (took 2.673642592 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085110195 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069024485 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104472161 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08824522 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065951723 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066869501 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092761511 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068694733 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091184805 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070599713 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067662477 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08468993 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072654473 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086107328 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07301735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086217508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070818098 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068077601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088676948 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064714358 seconds)
  done (took 2.457380075 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090095104 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086497357 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070404338 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094623136 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070641165 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086297869 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077959476 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086674339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071171263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110685602 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069840089 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086393285 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07820229 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092103132 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069275448 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094775586 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077197973 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095112285 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068724217 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087365191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.215618321 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070760964 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094446591 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070689201 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068898233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087649688 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068390159 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091733336 seconds)
  done (took 3.32933619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069987268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067764788 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082700935 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067032077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06533813 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084054056 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066676874 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065069981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086489852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066403117 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067892951 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08602204 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067927269 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08428127 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069171072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06840337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084947104 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066051033 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066494508 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084470954 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068553617 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067262051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086030024 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066313944 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08227158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06913221 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065825403 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083005939 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068819201 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066313259 seconds)
  done (took 3.08642468 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080187867 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093009249 seconds)
  done (took 1.073488305 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067690712 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082005563 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084735235 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072924643 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090543578 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069178864 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093754622 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07318288 seconds)
  done (took 1.533081745 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085042889 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.096436918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071618728 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079785589 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098136322 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084265225 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156642102 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088107966 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075537186 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084062805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083876803 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066731251 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093226666 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068465984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092204654 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074913274 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066055428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092274871 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071439725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085566282 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070498166 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097060238 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071244333 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06522893 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088488412 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076799816 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09750995 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069510683 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088926683 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076467464 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090216126 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063786297 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068580996 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086772739 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067670456 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094999558 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083923631 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088387193 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078018212 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06936114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096296204 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064197073 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090833012 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074949685 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096159394 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070053537 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068741222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082632369 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06608232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087783808 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064526391 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06849625 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081866302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07545893 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088698296 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079571035 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066866737 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088417261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071077718 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089166292 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074927089 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087099822 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071702043 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068397862 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096345697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072255814 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095349817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064620512 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062633207 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084512282 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07682234 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108853212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074290093 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088205264 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069172866 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082895564 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072876339 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069793358 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092292139 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074401366 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08623493 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074968296 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092876905 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069418339 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070040866 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09497277 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066669014 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088702464 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06637447 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102337052 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06788293 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066190651 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084529785 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07808384 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089820661 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068710249 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081847903 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076485046 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06262605 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087214925 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069703666 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08599143 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079919446 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091498483 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075038137 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093424935 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077380031 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068113769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090012012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065875766 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086809031 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068733138 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074934014 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081395325 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071519112 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085948643 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070438184 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076399888 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085426544 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068635981 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093591403 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073879174 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083838995 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066373169 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070898113 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08676091 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072256603 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09323709 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067903091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064564617 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082144058 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071067329 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086002564 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0732701 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0907491 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072507231 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063167791 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085013439 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072755285 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094986388 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06896456 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068188892 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092569123 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07000503 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085775304 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075411505 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087349968 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068903087 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07420368 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087524909 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06377708 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089994488 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071685258 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066919841 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089953834 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072314341 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08876778 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070635695 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066822881 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092779441 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06931989 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085963779 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068467109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066703748 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096892291 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069189281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082305295 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06610645 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09301723 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066469972 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067982815 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08604361 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071014595 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087142434 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067681552 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067669688 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088366953 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078932157 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090788053 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069653712 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092021971 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079404646 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084885746 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071615788 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068708907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088553341 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070019679 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09526092 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074043539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091219454 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072003719 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064525682 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09206556 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075986274 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085620177 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067153203 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067422881 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091873885 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073887275 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091350509 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070102819 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084126818 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070388904 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071716798 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089823809 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069224386 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084526654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07371656 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0674885 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093653904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068657639 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096944892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070863129 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082006212 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072918088 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065688432 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092940707 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063830722 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084235898 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068528603 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069056764 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086341926 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070751837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080889009 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076445454 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075561112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088005598 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067895882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086843742 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075364461 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068814985 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091412541 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070949984 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092904505 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079291678 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085515239 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072194163 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09539978 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069827224 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062784021 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092242531 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067584462 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084837622 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069360016 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066643715 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089958037 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077495133 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093935699 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06356602 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069679253 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08616979 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067596216 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082209342 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073873277 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070352109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087512624 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075188045 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08829187 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069754938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089782956 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070153551 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069447405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088355757 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071109317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087605012 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071835259 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067016563 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089747499 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067890043 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08390631 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071557844 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068411814 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087084485 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074136298 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086114544 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069077017 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070283734 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088172214 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06922612 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086395676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068699721 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070990757 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088116705 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068636598 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088791176 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065201961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07453263 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087045499 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076087548 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086240012 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066438971 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073106618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088998716 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073525145 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087979717 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070181724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087596447 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069537025 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07009469 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094174596 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066644026 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097459538 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075583849 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086728063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071602407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068020516 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088307136 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066914038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086702875 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071216214 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068240939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087702167 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072546162 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088093107 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069407669 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069483526 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088310682 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068695736 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087687649 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065093564 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067076447 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086507778 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068718632 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096430182 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069739834 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067365768 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08646226 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069735574 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086196317 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066259484 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093662317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078088382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068590606 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094958797 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067680674 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088421851 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078644062 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083823898 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068008074 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06696431 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085179269 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07658012 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088195465 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07875238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068176488 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087176136 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066320915 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087703816 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068844602 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063018031 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085203387 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072232627 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085043159 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06889335 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068948743 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090274507 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069624641 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095831662 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06907079 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069024093 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087574044 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065966979 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084853422 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068742922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07088661 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08856507 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066326358 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08364303 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069334707 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068890624 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088667575 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068866717 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06898334 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094244897 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067889341 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089877701 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071717378 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081814899 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071755969 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068147996 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087305924 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067192736 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089899384 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072775803 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068495137 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096186281 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068218404 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08778604 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069384029 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08437345 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069697644 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068180813 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087490437 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068319657 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086882473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077483768 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065993839 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089989122 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067856904 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086560836 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076071792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068925318 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092644393 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074374069 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087985554 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069603031 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094091642 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073261132 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070673941 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088929941 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069161153 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092715776 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068363162 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092270821 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069979573 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06921623 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088605973 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066876112 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068165945 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088547849 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068458952 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093074067 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069587603 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085692666 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068400879 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066080298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08807169 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072077528 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094245393 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071453578 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071143558 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08300848 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065446934 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08763362 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067870917 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069173491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090168331 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074131538 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089350873 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069863672 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067335998 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096469121 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073468141 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091254276 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066527659 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089499243 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071377384 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070378468 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088125612 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069135772 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087904184 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07334658 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069451164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086948219 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075516256 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089491493 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070602615 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068852072 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087978603 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069127397 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082363497 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070405825 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069208828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092071128 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070487173 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087510843 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079051312 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083278283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070022027 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072308081 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086851582 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072988849 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082573181 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071259101 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069427066 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0886533 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064368172 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086097011 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068348122 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07031728 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087009013 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064721299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096826064 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078296124 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070766517 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087374353 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067753255 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082815308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065547142 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067070344 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089344382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070039176 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097940347 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068018133 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067093002 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.0835743 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068526685 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090527107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072752397 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065080418 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083427679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067711671 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090200257 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074246362 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067460478 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087597897 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071452986 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088738163 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068061952 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071110343 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084871134 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072174773 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099710498 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06964583 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087581816 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075408176 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093997968 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070372246 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063149192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088244913 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072113441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086581972 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070758802 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069547768 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103157245 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071399984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087393424 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068239367 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089985793 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069770798 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075364966 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089337989 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069761148 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09196165 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071047386 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095759817 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07227693 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075158084 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090833728 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071423576 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08689412 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069775006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066386082 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086728991 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070004734 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088250386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074063914 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095024221 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06834178 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096994275 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078775888 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069473635 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085672551 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067694969 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085828698 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065886517 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069607912 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087746027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067500533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065455588 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086732932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069284158 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092531751 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06922145 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069190158 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088408242 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06375748 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088785545 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072114466 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068207106 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085267934 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068951644 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087502671 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073975728 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071713398 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086965867 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069517243 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088505199 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070271552 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064075085 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094055556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067938126 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088690897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068646868 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068328723 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088595301 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071406952 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093003213 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070685978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08905929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078211538 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071112892 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085676771 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066271072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092083055 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068115571 seconds)
  done (took 47.553734431 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109747317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085330568 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063462538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082777723 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077727763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084351762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065557739 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065032802 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084652391 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067267986 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082453389 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064855608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091861712 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088557699 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095824097 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068454026 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083698371 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065147995 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083135273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066097317 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092540434 seconds)
  done (took 2.616776233 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078654766 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091905621 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076673816 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098229671 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070225263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093398492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075495639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092809446 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096865031 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071635209 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098006962 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074380441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088812119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071127587 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088068621 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074637477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098217889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070306531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092134626 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075263824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092058052 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075919919 seconds)
  done (took 2.788490852 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070202896 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06794437 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087942312 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064517192 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067909459 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083151007 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072011619 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.092354474 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072455273 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066166529 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086517866 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066899995 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087819524 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067273355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06782933 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084521383 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133820666 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072519454 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0670897 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088990399 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063569097 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088501273 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064333745 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064079192 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086917093 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072405959 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088221113 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067110313 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0677361 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086146704 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068167025 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06484865 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089471169 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067815453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08549801 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067565635 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067047984 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087535421 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064265876 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084121208 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069380287 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063155478 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087903217 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069241045 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065457105 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085879857 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068846607 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086421879 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06447264 seconds)
  done (took 4.67417337 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087420763 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132682488 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090510546 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090892693 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104584243 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095873471 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071830437 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113768771 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065466823 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086797924 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084265441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104033885 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087954451 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07365757 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093044969 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070153215 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068849945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087963746 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072144085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087633064 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072379324 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094461918 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100898216 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083091343 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091335519 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067308287 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086773486 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073722504 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100272612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07396513 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092768439 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074174016 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104083596 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070442339 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087515974 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070312246 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104897861 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068284366 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09073235 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065847048 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090425195 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072795024 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094362542 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085033632 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0890455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073020652 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088384535 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065753068 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101076806 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070498252 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096120736 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102703641 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073326662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067773212 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092460824 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101765859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068918552 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065808183 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091133187 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099721878 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066781356 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071522276 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103029883 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089429791 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07652019 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102759774 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073087803 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091777907 seconds)
  done (took 6.881858916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078368932 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093450486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083485299 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103205629 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094356645 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075994802 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093787505 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075504092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09419145 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079561022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0946242 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115219936 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070579548 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097394769 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075280904 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096271701 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075009058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095134192 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074334384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095171881 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094384874 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083699408 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094660928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101571849 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10615751 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089064899 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074863086 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094440415 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083307095 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0951211 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105802182 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075283655 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094534226 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081962237 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106725821 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094320727 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068040509 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093910003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076053579 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094521828 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070046526 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102299598 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074653549 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089735931 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075128401 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094086465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102494791 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086722016 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097227143 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098451336 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075479728 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102941891 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074219147 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094989336 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102121378 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108520053 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103437569 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101954318 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074262179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103213269 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102753064 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.0893629 seconds)
  done (took 6.546276276 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090544076 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097460228 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098553848 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065387663 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06591352 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093931787 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066433054 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084670324 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078570807 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096831239 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079897427 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092564593 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075081378 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099525143 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091517175 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077050307 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092348815 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073135803 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096449261 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072669857 seconds)
  done (took 2.646799642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07872112 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103955791 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069623334 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073626696 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092100709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073702857 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090682797 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070885297 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089392228 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071660298 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097665105 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079100292 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089061069 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075101277 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098518162 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074769624 seconds)
  done (took 2.288583362 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08173071 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099386946 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082762312 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08893899 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067310818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085296534 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068551106 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064503018 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085693407 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082386308 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090137201 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070552286 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088229026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067670525 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064771959 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091704398 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064519372 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085728852 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068041228 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102262551 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07988973 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086323473 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070338446 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070069618 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089643575 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072927627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088674504 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065815292 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086631739 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068409862 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088455438 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076290859 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084077863 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068530627 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066621295 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085673782 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068624953 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086839587 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072274638 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067577878 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087064822 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068557324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088021416 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069687055 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083205566 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070572101 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064656379 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09409388 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066121869 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088276803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068443596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089461876 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070676044 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079153386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091574422 seconds)
  done (took 5.286111467 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082998864 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070996628 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084899876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067384061 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09125397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07127568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071100443 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090508519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070976227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086502142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071495592 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090451734 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071462902 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071355208 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090330543 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072070092 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083820134 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070781268 seconds)
  done (took 2.373998487 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075715001 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068257944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095865919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068977884 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087448511 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07208456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064353484 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087530559 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067028681 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08712075 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069491972 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070041792 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087220922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070886145 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087834042 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06950983 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070489493 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087294187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068372873 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08354536 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072549841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067072138 seconds)
  done (took 2.644031248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076053693 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095497259 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165258861 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110324423 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084885956 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102219025 seconds)
  done (took 1.603406713 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094089787 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101708129 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069337733 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108186799 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078191737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090393554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070925346 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089288196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080670111 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104102919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070905526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09960729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097942786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081353448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096077917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077015251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091105995 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07013749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089857027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106937493 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072612638 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098029383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072530676 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089580443 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071685965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099199439 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079070218 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104149839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089444655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079821928 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096722084 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071046564 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09929354 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102858763 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07337288 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097934158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071262117 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108669201 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076347078 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099180851 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071171675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097462008 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098655462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075995293 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098106891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071850947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095559603 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070415554 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090705159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115465475 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076706171 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099096112 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095164472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081224068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100077094 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115202068 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084899472 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099793291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095548786 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08576786 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099134565 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075452484 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099095904 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104555915 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076023271 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099633755 seconds)
  done (took 6.862522019 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085003194 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108680411 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071241282 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104900104 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099061139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071948797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089604139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072818027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08957713 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071273785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132073122 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07098537 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100020589 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098817112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071868676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09099612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071764761 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098983054 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07067924 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116243631 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090174949 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080148029 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098579697 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097521814 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085307406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096293214 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071155498 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091087337 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070657074 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09123412 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0755804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091636153 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097494885 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070742764 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098766133 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071851472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090315331 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076837092 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090856737 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076831184 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100237156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10873018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070984057 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091343404 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084479452 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09142457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07030814 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091215519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071416488 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090976233 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084012547 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104336579 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103761729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098603802 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072679759 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090223878 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072991505 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089791669 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072628664 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095999988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07994534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091753177 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115568896 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072198862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090595573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07995485 seconds)
  done (took 6.757445497 seconds)
done (took 133.884570718 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203996866 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187825495 seconds)
  done (took 1.353827084 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071812349 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097126974 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100064428 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129639853 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089404224 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1019056 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120339908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080986089 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067750621 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089016924 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068738545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089362835 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134325772 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068404536 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088353748 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070389419 seconds)
  done (took 2.443312868 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105416778 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198343222 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111092638 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067074159 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101937409 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079547381 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087586104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080235283 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09348572 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068338827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080073414 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098915815 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066798972 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097752577 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073776423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100301916 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067131949 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100675651 seconds)
  done (took 2.65777744 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106139328 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145468088 seconds)
  done (took 1.224146125 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203525012 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125589705 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205765193 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.419861432 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.210308603 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282880818 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178788514 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177336419 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162730332 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174587302 seconds)
  done (took 3.111021654 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101337189 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171891477 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314930039 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139074104 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089422302 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11707079 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14049092 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10937615 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084529876 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102991487 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082286298 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099697741 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119571398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077395222 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096021935 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080488049 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12209049 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075416693 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098223823 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078041566 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119669287 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068523335 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096067496 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077190662 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098646258 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081636652 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06642809 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08821529 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07690853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096608977 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079145564 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114521389 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100174594 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133537281 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082893001 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15371575 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080499855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092854606 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078486493 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073500681 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09960879 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09726006 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087754038 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098068175 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068563664 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078864418 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088798322 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067759384 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101730561 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079572895 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101769815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079672997 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152180947 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.080577027 seconds)
  done (took 6.415892821 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.7481253 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111618621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09602506 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.802227023 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090493331 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106849466 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705966229 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118900685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209856992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761700002 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089855702 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09904883 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179624454 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.215230142 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93697566 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286580639 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.629987927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105974059 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110246003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133188598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139712121 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173397223 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147650321 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436735786 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076257826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092605251 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136961763 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076044852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15924499 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085070856 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09394543 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154304714 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22443111 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155775707 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09751407 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07141825 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091512715 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147389189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220669432 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188656304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158072875 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068855033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091075624 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139822025 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129790185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068803015 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139042392 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.15055195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168045228 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074231771 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095268484 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142765149 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138314007 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142415135 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101945247 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2665285 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287317988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090307495 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099956864 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104022463 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215523837 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103484002 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198468929 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13776248 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165523702 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091840852 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760855548 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146952532 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09268683 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080317052 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119259943 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095816775 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138853993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144537561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366810247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143798928 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074218421 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091388098 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207597988 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102808081 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072660045 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139824281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095200579 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101814077 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163965077 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145370241 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145440347 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209723378 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141328283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159415404 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074599983 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123475108 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095708264 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190347601 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168985338 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139290247 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206232751 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139575244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141252784 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146557495 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096412739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149619858 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119243951 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081009089 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137681357 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.18906942 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123190863 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083022189 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095485654 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140867349 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126653948 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105861713 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140796143 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149664974 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455625922 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146693439 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090016159 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087029317 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139454161 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15984207 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077039525 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230465928 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122038236 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.147447413 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120423174 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070328292 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1208437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.14014722 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099531795 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160045394 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077449119 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213646618 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190901395 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078695734 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213819207 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161485091 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077750806 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148101828 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120140806 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145001128 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099372957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139281598 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076190719 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768316808 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143939993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121951311 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095100711 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154315897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092039541 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082940852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105144328 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068867061 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762088455 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08543452 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101667918 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103934591 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07631687 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122618237 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136454647 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094624231 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138579738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.177349735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098025481 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119234544 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083096203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159088325 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077030363 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10424803 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08424696 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105628862 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122768302 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073554307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104548378 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147395503 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140773254 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191901428 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541935276 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091196347 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08431793 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198589294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071329273 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261643919 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13766856 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196345563 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142182862 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080109124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284662098 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143459448 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174804149 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106384547 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152634588 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069480856 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137203753 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141155232 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092128811 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075683866 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1394588 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167000907 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144104077 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.942323968 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071734082 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204249791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068679482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170056116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077314822 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0983077 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.236059149 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092532933 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147329557 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142437064 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094308712 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083604925 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671845579 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105863673 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138295388 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096281396 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1707308 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163940794 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136613169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139164559 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075799899 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159911126 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185892443 seconds)
  done (took 40.537163155 seconds)
done (took 58.723271288 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261084521 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178689582 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243701181 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144739335 seconds)
  done (took 1.897549568 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147281671 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105456193 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119179209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087592432 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105231835 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088517373 seconds)
  done (took 1.651107707 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405133377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265146352 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230452887 seconds)
  done (took 1.902735737 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262887323 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215120773 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451802247 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299415156 seconds)
  done (took 2.358424075 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176806221 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115733176 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068598741 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108366684 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160467729 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254399643 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128502153 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186093294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080706716 seconds)
  done (took 2.32609995 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197622192 seconds)
done (took 11.339640861 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100813627 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.20618563 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.21908156 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.195620968 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.196387692 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.195478635 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194915913 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.101273038 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193369617 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084978625 seconds)
    (11/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098917712 seconds)
    (12/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.234918524 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080975969 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104475656 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07904359 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139568782 seconds)
    (17/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.294216716 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.28849996 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.275620124 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113807813 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097208787 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.114454114 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.247498563 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098587219 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121600609 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065392044 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.124708816 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.205890404 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.265979283 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.2578321 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069056359 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092298281 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150679655 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.262648939 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131129398 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.162163494 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202235423 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101029143 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101631075 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.163377048 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096244758 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076838772 seconds)
    (43/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.240852621 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171314477 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.241523583 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099722916 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150049565 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.088215501 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.234846857 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09990517 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.190958502 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103194031 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067159109 seconds)
    (54/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.181448569 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089006817 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.226619669 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.13567927 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074223726 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195288129 seconds)
    (60/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053413064 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097932689 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068531915 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098446432 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091177256 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097548867 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081940098 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154029906 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069676938 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136232357 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.266506541 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093942467 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.163805521 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053051926 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09704767 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074424032 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102932738 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074167862 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077391563 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.26540756 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161925257 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12798846 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110923821 seconds)
    (83/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098092518 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076521536 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065398672 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.092548907 seconds)
    (87/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09991636 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119300352 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101077736 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 0.150084521 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.240856298 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086634522 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097917465 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068610484 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119428029 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.171532132 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075004467 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.243266158 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096133406 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052475599 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.254480433 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089731295 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074088098 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120633292 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13942794 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.221267315 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10341246 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074441396 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078038252 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.249589989 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115914412 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071325889 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052446364 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096515177 seconds)
    (115/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069172845 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075654445 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147655111 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100167422 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07978426 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111092884 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137693129 seconds)
    (122/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088454564 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093582437 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.13868317 seconds)
    (125/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072249484 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073657654 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110286321 seconds)
    (128/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070662123 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.159731349 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097690507 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088676658 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075032216 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167905083 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052144026 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.10167855 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055967078 seconds)
    (137/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132024441 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07331865 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114964651 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076227536 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067102106 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.137710742 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067876799 seconds)
    (144/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079965997 seconds)
    (145/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073219853 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053184524 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090891541 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069220883 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097871228 seconds)
    (150/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07521288 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07445559 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.154097066 seconds)
    (153/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096180927 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094770932 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.250278415 seconds)
    (156/309) benchmarking ("sort", Float32, false)...
    done (took 0.129818133 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108900211 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067377153 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.247433942 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097757298 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079480503 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082192791 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101115874 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053830014 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116617339 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07356832 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.164086387 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067848499 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076270181 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077960236 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143324618 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076613349 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.21758417 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146292105 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053100743 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104788248 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068607261 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.241898889 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191668331 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093744615 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089225529 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069806335 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.262002605 seconds)
    (184/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095339381 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082862556 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074950249 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076435789 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115381244 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201878308 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107682292 seconds)
    (191/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093317496 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106895925 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090062575 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075718237 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080685614 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.085605592 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099476084 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052915304 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171844005 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.243246865 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076190325 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.123449325 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053300314 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094662452 seconds)
    (205/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054428593 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209532175 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076492942 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077858014 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053637075 seconds)
    (210/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074713244 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.258967721 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065597886 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.076818541 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071892541 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053277169 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127439242 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053752578 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11277524 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055188904 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07376385 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075989186 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055707728 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053561106 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066585181 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098996357 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07498144 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.121626042 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053876415 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164806208 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071730611 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055220277 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.103372589 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06843508 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105026272 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054055791 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072783403 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102560011 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053529084 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05400966 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088602883 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053645401 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069418848 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08889408 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068707624 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072026885 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164394673 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070581795 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.086425119 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070372275 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052584412 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07753805 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075807736 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063132443 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090155764 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055030178 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110460801 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056440352 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072813946 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113411244 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054368575 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06750102 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137700797 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094942552 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085247529 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06773085 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053266092 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089609862 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.0705754 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073586588 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 0.164068216 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092136473 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076374453 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054197686 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119775227 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054188387 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088252025 seconds)
    (277/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115162985 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069461197 seconds)
    (279/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076433549 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067376554 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070340284 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0762898 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067825276 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111280888 seconds)
    (285/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055325129 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054814415 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092545291 seconds)
    (288/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076599054 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075821686 seconds)
    (290/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078336359 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067522819 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066210459 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091159812 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068930466 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075031304 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17140809 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066637353 seconds)
    (298/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.087447683 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068776072 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094673973 seconds)
    (301/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056013226 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05610669 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054256963 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077534653 seconds)
    (305/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063002224 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053449598 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096063662 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075339539 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08988171 seconds)
  done (took 35.360349445 seconds)
done (took 36.375546925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085784153 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115475598 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077600203 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116166045 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083621161 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101727311 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076325347 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079331429 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106491436 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08303804 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10451612 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05656533 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098936681 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0766924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098541999 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094456456 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103302448 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07532676 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074889091 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.09042892 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075173841 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089908659 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06980625 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056633195 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10199482 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074838662 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073116978 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100252794 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066657276 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089892501 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071245253 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074003838 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090126234 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080293404 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095037252 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075863102 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076591905 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101685066 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068807431 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089482496 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077038969 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067033747 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096105418 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076352509 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072900364 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096603583 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075061429 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104504552 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093264985 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09287468 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076374364 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099229628 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079608201 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073671133 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095221451 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075777256 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094693597 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094887261 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098327788 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071399868 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07532807 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099901061 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07346287 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07448713 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100284812 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077170404 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101538441 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073483453 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09907961 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074207738 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066843123 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098853699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072042804 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066675389 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100661938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07818734 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088373391 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074289852 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073758296 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096086319 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068613913 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06889032 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093269166 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073709295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090707098 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057677916 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070965239 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095790472 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068761421 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076192683 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096680963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074393873 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069453233 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102183956 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067686982 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095501779 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068469625 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067311729 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092483167 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072462191 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066156803 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093320281 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077540205 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09094599 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075658908 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080984623 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090353538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074047381 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066770178 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090557447 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083798141 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099928354 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067535315 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091638553 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068552837 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074898876 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089081089 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068050436 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067328012 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090811366 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073898473 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067081845 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092441315 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074880885 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10318782 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071421453 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070255241 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092489666 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06824113 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072780775 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09119968 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068900729 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069435584 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088197282 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069691581 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089484998 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075806394 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069604414 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098476346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070616566 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075260098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095627661 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073702038 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094981296 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068135374 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060284899 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091555745 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070140524 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068950171 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090126767 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069896102 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067284447 seconds)
done (took 13.544872849 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070916444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169837424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12823486 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097672788 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112530223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067334213 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10172002 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105116473 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.0932126 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127162324 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089948428 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108310705 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115936503 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0903789 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068330653 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071039854 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092163997 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08989708 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127048422 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109338789 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119772878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090846108 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121367058 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092566587 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112922059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095879044 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091422281 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072265323 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070424758 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127347415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109483731 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072152476 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067328646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125113042 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119172254 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087355462 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090220854 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08683529 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089226519 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069351336 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115743237 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10173395 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107278469 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082885151 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095208982 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070420752 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091099598 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088333841 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115825975 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08226176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112782777 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135691609 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070571553 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107375442 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06715249 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112867152 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104244429 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07183463 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068362179 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092648125 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06868134 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07129707 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113570511 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116040949 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07210323 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106940423 seconds)
  done (took 7.44390853 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088074008 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117632568 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086824954 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109294562 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069027007 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068016679 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091766183 seconds)
  done (took 1.695704566 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071122032 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090336419 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114503798 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090731753 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111589648 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08855682 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102392282 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068953333 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108483838 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06958307 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089410151 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130463608 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092265328 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076395268 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091744942 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092632357 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091791624 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092160717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073456569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114588223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0721526 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112007464 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07272514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068610485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107083869 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069123321 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138952291 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073196742 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092245872 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073579995 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067030825 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141528939 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10555041 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080174835 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068120933 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107067025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083189198 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090272583 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08627389 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096321035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084006895 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068832762 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09340638 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067213242 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073299577 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103489553 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070149357 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092211817 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072809938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088492105 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093414936 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083061127 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091960586 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073603513 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069844013 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097958728 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078808353 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0926257 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089884054 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069930514 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109457195 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084537826 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106845419 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084275719 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095142234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083292892 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106223217 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072494424 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070052525 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095934788 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08527102 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089742943 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071097721 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078658631 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094341661 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091606235 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115480641 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070991201 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101806524 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070101705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069216792 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092035807 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092234942 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095129163 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069995745 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072303239 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09586233 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067628608 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066770631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096238154 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067247138 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091787593 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073613624 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068915677 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094117212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086102463 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069047765 seconds)
  done (took 9.536146888 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073405374 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069453914 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09407514 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070829325 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06920696 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093087235 seconds)
  done (took 1.550246789 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102699056 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09401358 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083955902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09649102 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108745206 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106717705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084517835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107891494 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086216604 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10495609 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084269715 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107517637 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089044091 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098607505 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083965856 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097092688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08481457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101506812 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081325518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097374655 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091159858 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097019026 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076910727 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084442768 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097400766 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074411404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102868766 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080721212 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104356742 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084555941 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098645174 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072966905 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097098987 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084837074 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107195823 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074082279 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097331918 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074641194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101552113 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073602768 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106712638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076873688 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07939111 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097659075 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10620341 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075447337 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072785883 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102094534 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083343057 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097482755 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072911366 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097354908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073518364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09562304 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075478104 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10627816 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075083353 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106144887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076514868 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073345861 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096047294 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072867058 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107741436 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072508127 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105733039 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073093491 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098227394 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076093936 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097637058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07543386 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073369216 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096247264 seconds)
  done (took 7.549684646 seconds)
done (took 28.841886854 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.647512038 seconds)
  done (took 1.722235691 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.765190736 seconds)
  done (took 1.842190088 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.383803522 seconds)
  done (took 15.469198209 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613958728 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759188659 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.815018506 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135498939 seconds)
  done (took 3.397447966 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889298745 seconds)
  done (took 1.991794888 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239369484 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224152864 seconds)
  done (took 1.539428981 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757232075 seconds)
  done (took 1.845861121 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.334716189 seconds)
  done (took 2.414758047 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324479684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181719353 seconds)
  done (took 1.598855137 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.529532478 seconds)
  done (took 1.615626033 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.66614427 seconds)
  done (took 7.759349059 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231693845 seconds)
  done (took 1.335408779 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271818037 seconds)
  done (took 1.362985987 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.072116412 seconds)
  done (took 4.162400894 seconds)
done (took 49.142689705 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081452029 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082852309 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106682385 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079715627 seconds)
  done (took 1.436920844 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080734292 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07454442 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103163296 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074293899 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103144757 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074714716 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099567667 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079845355 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073230434 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1001747 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074821405 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097892924 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077719304 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099073382 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073992712 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07733029 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102160096 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074396315 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101523837 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075805266 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072246716 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101542574 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076999103 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09771604 seconds)
  done (took 3.167619931 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081473653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07391145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100019032 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073799957 seconds)
  done (took 1.424781205 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081487411 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11536737 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092520743 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078516758 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119033623 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11252924 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072203922 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071495967 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098867036 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079448313 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091899362 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100607086 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113737524 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078438468 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10398447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06898366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070147338 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113242287 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078513761 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103974373 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072408608 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07800679 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094239273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092004755 seconds)
  done (took 3.283376279 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080532914 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104311699 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104936754 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090809019 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117707722 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06732299 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102748618 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092309988 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151398367 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066980056 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096758586 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0681859 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097754959 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069038208 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078840588 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137120042 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113057123 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09585223 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098969422 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092363158 seconds)
  done (took 3.033220609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079089011 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071124881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091003806 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07125782 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077331238 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098768215 seconds)
  done (took 1.590777692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071962004 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068669857 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091864201 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069954872 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07299381 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092336445 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06827091 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068223087 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093364796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068987148 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068455017 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091373545 seconds)
  done (took 2.031143449 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.437412888 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070384762 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093049164 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069275611 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072414515 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091497416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082635004 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069763201 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117369994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068167923 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09236481 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070557482 seconds)
  done (took 2.442623407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264250062 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079769565 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32406311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17033903 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140449661 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157369554 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105980082 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140271477 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196780096 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139280049 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200811435 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223944537 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135024486 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167059912 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115888537 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.130536832 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186761223 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21892483 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106203808 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223645293 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206297974 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156082855 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17911981 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128925156 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134691825 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149293056 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073268859 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107400002 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23158386 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161938409 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200390296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13904823 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098369737 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230066866 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224277769 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194873154 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163312145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087241196 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155993454 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167405761 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256779512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116221444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19403847 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134653716 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106561499 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173524841 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146720143 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146774049 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137741347 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114439611 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175608876 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240810813 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166139087 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113622941 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137563647 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142622392 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145046617 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105427116 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240456906 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217945587 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159232293 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097688105 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099607782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211380538 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160767975 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142443603 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153923988 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12001903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167810198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212748109 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147187066 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173515289 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183633661 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091201586 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147689398 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194565417 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158147776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206344942 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176866163 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077647078 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153256199 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13147955 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083994471 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172191449 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077453782 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233373416 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127017054 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140088579 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140388001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135690031 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114064573 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222705453 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203087273 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106835455 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093210619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131112689 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150750489 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178451019 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115510954 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135675795 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149092049 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081450298 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165524461 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102006946 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153346143 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07906025 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176671598 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163303917 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078314539 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1531177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129726647 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128860166 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164628921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218805835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092168784 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110188756 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200711628 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179860648 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13299969 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177313533 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187622835 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128546215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130360692 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203731414 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241504019 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09256908 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223396892 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135913202 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085470286 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115291638 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156752551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140469064 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149823611 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084698863 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178951165 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200880885 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102262975 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098783463 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190632972 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084613679 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108293744 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140550074 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128031367 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097742268 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127938317 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134952333 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169682355 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152996299 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135020915 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152918607 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125746113 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224153024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11640009 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129847458 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107408294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095848486 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166771638 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190180433 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10781673 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224960052 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15534662 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132144261 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148677223 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086617424 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169790317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106093356 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073497684 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199064182 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138741304 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113370931 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209733965 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130693958 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156093845 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152574641 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163830851 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160237377 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185593502 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110318628 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114937941 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140616508 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155944673 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09973685 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098182857 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110779676 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131559254 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09827538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111056445 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171777824 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181770641 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101259608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140895936 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12494359 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179706234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104555979 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158702144 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147853111 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12172212 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185973848 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214817153 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166440102 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128021479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17540389 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097870289 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076541628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118477614 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156359221 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108832912 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086475154 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145666496 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20489388 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159087429 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167439615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138801264 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150846062 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187109544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099064936 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118600289 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206708279 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154500555 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157823106 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093966571 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126735321 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175139283 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136944059 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243961025 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144693304 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15307079 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207543759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130922259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082812524 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131689934 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167040063 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133856117 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208021404 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127007094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090982257 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138238287 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109616014 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132594075 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15749159 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148981172 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163578627 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144697017 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186405408 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083004844 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145439584 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152408779 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151655132 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091549235 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150104171 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193240958 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123877845 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147370777 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211401813 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081158757 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153634089 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235858285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200944643 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087877884 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138240223 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150094216 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158648843 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147735216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193709765 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13928585 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165493724 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11343034 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113574315 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114278945 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100733442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134605289 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123226821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140101035 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146206366 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122161342 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161881168 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140534873 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139056711 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148339418 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100476576 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119374238 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124697859 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20897201 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149251411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233518022 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129900214 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206452888 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200617358 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10356894 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081125029 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109034449 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170672926 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112306582 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163865451 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123070271 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109230522 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156173737 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200515167 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096653529 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096250869 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139000122 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164753861 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14011153 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125252839 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109387565 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221080982 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131103501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082066419 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153797503 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133217826 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130675174 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234156713 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064373735 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124956499 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078574667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108089076 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159743283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18657487 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111150339 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15403932 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151094053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15058291 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159806393 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130573736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100259003 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141722124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205945943 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158657825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116858129 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116359204 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185855901 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188488989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134489889 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124462629 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231809644 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186868787 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223935881 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116643728 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144220208 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143969891 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11551946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19764845 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110195099 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202350206 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110878829 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166623536 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132517737 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121450632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159650596 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.13990005 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09136927 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206006037 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149391157 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109802028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083564768 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148459098 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150934889 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13469637 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102693341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170382285 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074089305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194059093 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201669879 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110040368 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134569072 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09859557 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110418699 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137111637 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132008483 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113671623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123155257 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234664374 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118646386 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185446071 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198436734 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143833592 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168521727 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12840913 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664350463 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080716082 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213808593 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147707166 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23798088 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126500103 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148131948 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139217435 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154120349 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176383433 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13443433 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205558516 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162838446 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150528777 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107285364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132062037 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140206573 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094651855 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135143368 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143783817 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14701506 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12948917 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149714472 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156857313 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110188888 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097654233 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217884319 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147564137 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173727857 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198203647 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088492879 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149254468 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197946149 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082135535 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175904244 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190351013 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138392524 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127332438 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083714438 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135446907 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231762285 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075013606 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223936991 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153672039 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139279584 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143693967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148254867 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18961144 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138235535 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155814199 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123659817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141390033 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144450249 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08832651 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105591192 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133654983 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141917102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103072756 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130744393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146167321 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187885108 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098223325 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099738466 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13189236 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173338269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236282583 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11801847 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08492685 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147441983 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168825346 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14612231 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15581407 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084689717 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111568379 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085203867 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140117546 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140868643 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146238901 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106087095 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140256046 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228491287 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113098247 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226215703 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124925037 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138258233 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071496521 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10833711 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123552902 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102397049 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136473543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126887205 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232407395 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101081622 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119705364 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120889969 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077029475 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110591984 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16148404 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140305362 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150945735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126952285 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066911984 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138168773 seconds)
  done (took 71.803036674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136228013 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108340519 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121836861 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177057264 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150268027 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241715062 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185095011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228142293 seconds)
  done (took 2.528024661 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072001678 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121150521 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104046936 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11716144 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093161697 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070714401 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.298747217 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11059872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068528815 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11749744 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119651827 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095744667 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473114324 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067352179 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094683779 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088641358 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070480879 seconds)
  done (took 3.357655167 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43087713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607200077 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457893015 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075210845 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.798182911 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112338056 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.187444606 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163313783 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094995489 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4199671 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725546482 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154295716 seconds)
  done (took 17.409440971 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077582984 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070356798 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110268418 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085931414 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098197191 seconds)
  done (took 1.623856111 seconds)
done (took 116.222470731 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083101284 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34994129 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054931345 seconds)
  done (took 1.622111649 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086076494 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085187193 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112362251 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083850536 seconds)
  done (took 1.561818595 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077502509 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077708408 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111818066 seconds)
  done (took 1.459022844 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.28075393 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164994924 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091791845 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085519249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078923034 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105176368 seconds)
  done (took 1.463082375 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075876013 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076366662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100561321 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077206449 seconds)
  done (took 1.515385119 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079089155 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053490266 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056062329 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08293443 seconds)
  done (took 1.463243375 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092576864 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10530641 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084133086 seconds)
  done (took 1.471846985 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109787747 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113725544 seconds)
  done (took 1.414877584 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084311084 seconds)
  done (took 1.269112937 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094133546 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140421716 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156857338 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136928327 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167700882 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136162508 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087720261 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115763814 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10503262 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089881849 seconds)
  done (took 2.421475598 seconds)
done (took 17.466371924 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081669629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388490248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363543691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116317481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670467036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358212472 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994182815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117870481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123637516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095397063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084969342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674842789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991150445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344456089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979074021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319748012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676977828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070036728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092174065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071426869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948765861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094664877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069109113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069014106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676446105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372643645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095370872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320868656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068393127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097070522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356587851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095000632 seconds)
  done (took 16.059585695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072828491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14400152 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075621003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083554309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097950509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070750593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097839594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070569242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152465251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069334079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110845786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06982784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.096727065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071805518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087161414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094865746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070351163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06908056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095428275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069808717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112875701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069492728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068832037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096535715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068529185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106519717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070617333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068348802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09553849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071451068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096794771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071434409 seconds)
  done (took 3.95877392 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117237135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153070061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075031444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129144265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114182149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098164066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169623061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095178796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155109877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069157161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1124262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069708036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128006608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0701329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114117455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070128458 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069460146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09597702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069490248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095455796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089148479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068849462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095146796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069945282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095431463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083832027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093731393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074211589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069760106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096710913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073524376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0700842 seconds)
  done (took 4.251199891 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075060767 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076762775 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11018753 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084647858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096451582 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074452548 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073571172 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09706519 seconds)
  done (took 1.888264879 seconds)
done (took 27.351471104 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081659059 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071141334 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100809152 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082925067 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098499912 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081065926 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069160796 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102287523 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078662503 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073339441 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104164644 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068845448 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097927555 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069862446 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07532735 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095327991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080920616 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098403839 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081302859 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079888702 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097779975 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079162799 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100211151 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081273968 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10479454 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082568629 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083357622 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10121979 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070610893 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097734533 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078140394 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084249721 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096307905 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080089435 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09614341 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069991559 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068859888 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095230361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08052328 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101403267 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072956178 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100226453 seconds)
  done (took 4.80436052 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091521886 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089761999 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11315837 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071400145 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098900087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064490414 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117200424 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072392969 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.093061012 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091192562 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057035972 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.086048113 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073151998 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062904145 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095325321 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058280143 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060664758 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083685866 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061629776 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060099278 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084064938 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057056817 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062202635 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064321092 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083982217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064283604 seconds)
  done (took 3.219130103 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078001037 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085425675 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115185931 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130176347 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134379217 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078768023 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105728749 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089053416 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114947292 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068995968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071779979 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125037948 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088774587 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101808315 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069033481 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113461087 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084346383 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069989151 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102675944 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09256499 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111850784 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079431383 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119904926 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.0843162 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068163125 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097941088 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073365975 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107040415 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07467156 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077843494 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100570821 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072804929 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096506699 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081785633 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072297239 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097648386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091651362 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104792083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08109062 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068754943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099932357 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070238742 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115494842 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113360114 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09399691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076463067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075741882 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105561555 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068313076 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113117987 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078531482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067829661 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098707929 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068084855 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068132678 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109136714 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.080294471 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097439487 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078195401 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097294489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082696164 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072050151 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111294095 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068301816 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102546172 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069917111 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06959381 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093964455 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093290001 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095161672 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112077642 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095989248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072298142 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078003697 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103125373 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076025477 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093718823 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086150261 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078384104 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098463084 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077544155 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09721296 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07366514 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089790991 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098005285 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071638032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069363483 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102296904 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071399512 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095125259 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08360731 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068548692 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098927854 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086089557 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093595239 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070782093 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074127005 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10044187 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068282473 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106440774 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074771235 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069188138 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105369788 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068812543 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098033369 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078967946 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072950317 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094184338 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073688383 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100314975 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070433799 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069776086 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098836858 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070782893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103985007 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076191755 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073513573 seconds)
  done (took 11.521732531 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192247235 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185624756 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072289574 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179933415 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076347546 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.10750737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179550215 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096565202 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095651817 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070509109 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069465558 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130490894 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.122828407 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108301508 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106782435 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06921911 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113234773 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10662013 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181545285 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175802082 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114532428 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078881294 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071236205 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097734513 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071481638 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077747493 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11289361 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077938281 seconds)
  done (took 4.363857601 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084070885 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.137282304 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07615831 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092596014 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120657959 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069135168 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102260877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070642093 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107656937 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081609558 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095512523 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075773326 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074821514 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105474464 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069851712 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10528942 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079612364 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070585799 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099424533 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074337687 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107467466 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081780464 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098957813 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069782017 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075319752 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095288881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066355637 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113777191 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069742802 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119019136 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069012876 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07429575 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115354428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069559291 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094804276 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073647873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071602247 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099899979 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071601928 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067848827 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094653906 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058933329 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06707504 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108361702 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074894116 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087798569 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075180097 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099740183 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07626672 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067203046 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097864501 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072748253 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071446765 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.109273164 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073946479 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100053251 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075647525 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06719304 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103731266 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073488539 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065335873 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09431991 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075076897 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094431154 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078378615 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074008918 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095242053 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072917044 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073765348 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102921515 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072608568 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097455279 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069120847 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071120779 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101612337 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074158685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072786386 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09449456 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068942598 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068405785 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083691119 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068989493 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054905487 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09972745 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067714192 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092504678 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073961544 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076390054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109301843 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070130906 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101135745 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070755114 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067888051 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099102558 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06528955 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096815553 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089006398 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110895812 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070022701 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067623446 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113093003 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074778667 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093031683 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059668245 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075298162 seconds)
  done (took 10.0464333 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099187959 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093166333 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098323236 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084662171 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124915394 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094602523 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102686297 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07668321 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070207675 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112909703 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06968211 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103252922 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070538603 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078089793 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126158423 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077130801 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097264733 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078916264 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072082114 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136905169 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084787286 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110330877 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083541121 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095540095 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074947581 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080601788 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124837428 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08165606 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107257815 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087544067 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081215934 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125103274 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088174437 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099465857 seconds)
  done (took 4.422725784 seconds)
done (took 39.573386802 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.300632041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.488048162 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.274443553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.160236696 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.299177371 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.303885013 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.285264582 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.275267695 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.459577637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.273212906 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.541970958 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.873842838 seconds)
done (took 59.759970451 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.368395268 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.418352461 seconds)
    (2/2) benchmarking "String"...
    done (took 1.549488947 seconds)
  done (took 4.188259104 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.649643957 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.254735606 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.563502484 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.274753505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.289503963 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.722944134 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.811800347 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.069452841 seconds)
  done (took 28.20412478 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.278488284 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.60571311 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.295236255 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.295428421 seconds)
  done (took 17.69440054 seconds)
done (took 60.323632333 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.285444559 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.340438747 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.305225994 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.259816959 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.392381663 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.316803789 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.619155889 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.293325532 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.280848562 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.265663009 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.275675522 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.277557123 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.285048534 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.625078891 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.278172786 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.276185724 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.305235121 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.805615668 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.629570672 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.293686118 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.277100432 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.313638907 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.2837665 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.278067133 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.295658876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.277238972 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.277198115 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.287324556 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.122310575 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.280412527 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.34686907 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.79219451 seconds)
  done (took 192.46338201 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.275869321 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.13122839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.252556179 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.336418332 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.642519274 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.476069688 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406165327 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.742955465 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.287838841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.305288108 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.49256961 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.277635263 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.547752955 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.256272229 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.284279001 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.389901294 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.493965913 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.552915781 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.291464322 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.536445092 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.297459274 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.334721458 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.262344199 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.462806563 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.301949295 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.386435607 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.298992693 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.288680206 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.471828531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.425876751 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.282544834 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.285644431 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.790890019 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.139434665 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.282595164 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.301303544 seconds)
  done (took 151.809872838 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.562170673 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276329696 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.276220296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275760983 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30348614 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.277305639 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.74399434 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.744147359 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.778433562 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.515120238 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.332519789 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.453794326 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.279887093 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365125724 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.291017276 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.277502751 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.29213933 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.30040617 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278001771 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.277571647 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.745031031 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.290758009 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.276422574 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271044451 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.268755295 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294754048 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.658451533 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.266295902 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268975644 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293482768 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.573816003 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.308290472 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.266085588 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.513418167 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.285841789 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372159818 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266892448 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294451014 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.266508333 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.529968266 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.266160569 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266850768 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.266594488 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.269159583 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.791465211 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.267346952 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.733589525 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267608101 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.127480451 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.267217826 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266108587 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.850742988 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.636529759 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.26708111 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.26728853 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.271299277 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.26741377 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2692818 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.294448836 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.824832042 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.359877989 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.268474741 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.271204206 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29456065 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.266142664 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.420501319 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267456685 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.377441533 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.322909378 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.372439279 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736756857 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269153192 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358609626 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382375325 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.266899567 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.26830969 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.268524015 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.268489233 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.371467328 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.266607697 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.632238811 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274714159 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.271085283 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.325697264 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.269195394 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.359632229 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.268139127 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511965755 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.268849328 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.269189767 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943305659 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358293774 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.268183427 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268322902 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.267192761 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267910691 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.633724689 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.737284365 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378169488 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.270682898 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.860529758 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.269542824 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.643469105 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.728415254 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.800895872 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.27053723 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372956027 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272009997 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.271519777 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.269702595 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.29845218 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.271524852 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331200527 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.270974449 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.664520572 seconds)
  done (took 351.73327306 seconds)
done (took 698.789105695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.948563031 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.936602911 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.049066726 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.934866447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.912786244 seconds)
  done (took 10.99210088 seconds)
done (took 12.203755899 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450276009 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.445994157 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324474049 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450289374 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.298353457 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465924178 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42983438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.291869167 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.369027839 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.341647761 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371390228 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317349001 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.296136867 seconds)
  done (took 19.067446136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.579491821 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.615485185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338162614 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590808109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.312665974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.589820154 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466347 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.476863459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.465528403 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28797876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290291783 seconds)
  done (took 17.231032202 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.584492785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.579478012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343033061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590257244 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316568396 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.590346774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468592821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.477444293 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.469122663 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290580474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290574821 seconds)
  done (took 17.216625037 seconds)
done (took 54.729961421 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.28356972 seconds)
  done (took 2.499977537 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.316897423 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.476945118 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.297997883 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.28787041 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.28325049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.283775419 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.287775804 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.283483907 seconds)
  done (took 11.735453126 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.284680088 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.285836464 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.281718915 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.283626736 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.283047678 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.283707015 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.286234902 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.285161716 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.281732781 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.283722784 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.286002633 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.282441675 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.286161027 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.285731898 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.284494238 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.283690341 seconds)
  done (took 21.762860492 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.287206871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.285021784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.282600693 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.285618172 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.284179691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.285340062 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.284621283 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.284996358 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284007338 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.284618025 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.284232712 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.285400103 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.28441904 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.283711377 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.285135163 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.286131567 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.286146195 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.28374341 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.291329433 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.284639114 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.286175112 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.284695557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.284487601 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.284693504 seconds)
  done (took 32.063767629 seconds)
done (took 69.278575471 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.108263925 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.729652922 seconds)
  done (took 9.054422974 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.28701915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.287272474 seconds)
  done (took 3.796800162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.288038088 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.286836739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.2869495 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.286414067 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.288107536 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.288351026 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.289156651 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.288147191 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.289082358 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.288339223 seconds)
  done (took 14.099840184 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.288502505 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.288190529 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.284665289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.287608612 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.287829801 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.284822403 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.287282405 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.289653102 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.289767163 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.287605296 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.287966203 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.285924713 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.287525827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.286321172 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.288390418 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.288335049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.286369418 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.288103988 seconds)
  done (took 24.394319521 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.289167209 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.290828412 seconds)
  done (took 3.798207415 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.287210626 seconds)
    (2/7) benchmarking "second"...
    done (took 1.287314804 seconds)
    (3/7) benchmarking "month"...
    done (took 1.286566937 seconds)
    (4/7) benchmarking "year"...
    done (took 1.285392162 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.287370965 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.285903014 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.286281577 seconds)
  done (took 10.22649784 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.290691707 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.465246793 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.537671742 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.927438359 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.291028653 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.292780681 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.163013825 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.292521314 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.296872882 seconds)
  done (took 14.778893506 seconds)
done (took 81.369085589 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265327744 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.275741255 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.083657975 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.286198317 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.291218218 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.574748367 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.285647418 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.410770137 seconds)
done (took 37.694549747 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.27208189 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.944274035 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.947590178 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.270981258 seconds)
  done (took 11.374006853 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.257683043 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.11045052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.261403837 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.211700741 seconds)
  done (took 18.050018613 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.8241744 seconds)
    (2/2) benchmarking "read"...
    done (took 1.644141533 seconds)
  done (took 4.673357714 seconds)
done (took 41.586727864 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273583037 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.270225559 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.272140741 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.265587172 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.270368212 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.264029399 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.267525618 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.267826825 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.267505219 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.269479764 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.270659465 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.263611463 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.265875861 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26567639 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262915654 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262870161 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266965174 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.264630552 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264921841 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.263919897 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262943921 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26445963 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.260145793 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.259745887 seconds)
  done (took 31.591244994 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.26394439 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.264402124 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.264783716 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.262139585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.260093616 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259966209 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.259893145 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.259927222 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.261676186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.259119032 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255565385 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.25582726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.258553638 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.257124862 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258469438 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.256526235 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.261430354 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254958683 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255827518 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.254237315 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.255911495 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254038087 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.254042814 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256792686 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.258270606 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254554004 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.256599488 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.254154052 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255779213 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.255128392 seconds)
  done (took 38.936703797 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.258215146 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.265487153 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.254533975 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.255182826 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.254259485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.253637974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.254436923 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.254591739 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.255474783 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.256058836 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.253722527 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253396465 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.253754216 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.254629839 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.253715705 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.256149973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.253768121 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.2566463 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.252067965 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.252673818 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.254077033 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.253678363 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.251444404 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.254142574 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.253349683 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.254062894 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.252325417 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.251209215 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.252102515 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.253037638 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252893386 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.252602155 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.251606878 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.254132834 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251195892 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.252481069 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.255173603 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.259623063 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.25429896 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.253010981 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250059024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.252646729 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251857743 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.253476484 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.251118338 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.251666768 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.250923347 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25008774 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.250083104 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.251645614 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.250377767 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.250036701 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.250212709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.251496165 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250155847 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.249329308 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.248978501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.251729679 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.250378132 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.24968187 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.250482667 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.251213767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.249621271 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.248561715 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.249350004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.248835287 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.251695078 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.249760574 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.249998722 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.250238303 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.249144708 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.248875279 seconds)
  done (took 91.372514806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.251807311 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245370568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246717361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246832979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244743229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248256287 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248282608 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247893817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247032371 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248983399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249064942 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246628089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247044151 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247131895 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248555877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246672427 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248392274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244932375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.247788046 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248426537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246984668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247393282 seconds)
  done (took 28.628485286 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249814202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249732799 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245406952 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246022333 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245640947 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248361633 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248554261 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250440135 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249342319 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246022397 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247449557 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245478902 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243968195 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244299211 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244313444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247129359 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245004034 seconds)
  done (took 23.627237145 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24650272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245532646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247504302 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241982576 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.244308791 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248127305 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246057571 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248992056 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.247247004 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245569832 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.24718757 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247395075 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.247324025 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244892252 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246021911 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243536328 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24618153 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245152552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246575316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245300881 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246739052 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246997184 seconds)
  done (took 28.594766537 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249046134 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246922822 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.244494818 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245437108 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242891883 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.247111744 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248383023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.245087334 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.248169331 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.247482784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244698894 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248055379 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243971285 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246244692 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.244415152 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244037821 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248585968 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246707525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246974147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245257402 seconds)
  done (took 26.10437927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246781129 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244666644 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24321807 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245139935 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245735498 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245124469 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243558122 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245805411 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246775321 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245845755 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244813005 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245688968 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244361383 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245316334 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244510162 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245260473 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246210597 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245601342 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244412963 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244490257 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244615967 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24357316 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244755182 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244380179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244646498 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244475846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24556121 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247176064 seconds)
  done (took 36.043099029 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247675261 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247217623 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245283582 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245622402 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.244470436 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.244532696 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246047586 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.244821702 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247174144 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245829668 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.246915465 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245855088 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247664442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.247751954 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247003445 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245402735 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248589709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245454404 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244793409 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243455549 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.247716872 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247420279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248820089 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245342584 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246757915 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247192026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245808623 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245939791 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248210618 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247015334 seconds)
  done (took 38.572889187 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26831547 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267583289 seconds)
  done (took 3.716702593 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245179163 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249287684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.249226307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247254895 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246410753 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249420077 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250012927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245518436 seconds)
  done (took 11.163474853 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245585976 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.247274222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24779676 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.249997888 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.245322273 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245095835 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255480746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.264099737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246479708 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247461177 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251796203 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25580798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.251218422 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245365537 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246316344 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247727915 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251298704 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.246318143 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.245786959 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251896014 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247846562 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248541512 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249437124 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.248619492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247452983 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260588984 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.252248578 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.252514844 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247421582 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25338785 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.247103959 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249139681 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.247937563 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248121058 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250992398 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246305974 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259253418 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262938426 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255680182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248981552 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25190041 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.248642636 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247892278 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250966311 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248640392 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.247164399 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250874611 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.248487145 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.246636758 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24958474 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255836518 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247522373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248152323 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252960851 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250555352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256182378 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263661368 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25059814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256784276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.261927805 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261327686 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.256930795 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250675202 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.248522238 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259136824 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270536915 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25668676 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265784064 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250932226 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252958865 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259602013 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262311467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.258564126 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249264604 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249522252 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255414028 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249933586 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252534016 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258923664 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.268771463 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248820001 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248323916 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258160247 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270339259 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249926993 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251401473 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250904676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251219899 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24849547 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262168427 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265626033 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252639555 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249346893 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.25194202 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253119853 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250716815 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249996133 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250935031 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251964606 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253650105 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250483871 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251754711 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259492486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250502492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25063975 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.262680055 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.255179265 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249470151 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263036862 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.254273681 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250522069 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250795153 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.261233689 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.253143512 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254448188 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260023284 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251576809 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252757233 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250569004 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256896007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260359228 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.277517404 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255494563 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256012758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254874388 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.264366399 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25068934 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256382768 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.257709134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.254221377 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251564525 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254695099 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.253503003 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250121273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248948891 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251884038 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.250955902 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254360452 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247793859 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.250171666 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249616547 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249255351 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248254597 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251462049 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24816854 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250159154 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259063351 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250078766 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249409984 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247391124 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249070938 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251501139 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247227698 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248724242 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248621697 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249998949 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246250062 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246620426 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250781056 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2512832 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249794587 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247160577 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251594003 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248637987 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253593731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246602916 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247641583 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252282234 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253276135 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.24702723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250697484 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24625711 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249751877 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255369952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.252805376 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248202225 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251551249 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247633279 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247145971 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249393727 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249179696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256001465 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248189329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257213495 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.247694097 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248734318 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252553806 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.246878417 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248626036 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248705827 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250921033 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260182083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259488243 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258293518 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249284854 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25561149 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249052105 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252400437 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254025255 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249210207 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253731326 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248023077 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24934336 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247917873 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.253019831 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248426209 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248845825 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252341709 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252269615 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247531726 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254480467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251131476 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252571771 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25204899 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253970545 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249595134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248692842 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251435966 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248912759 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24896374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253580515 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251336228 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260316328 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252693546 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251204029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250175206 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249721613 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247966723 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255199821 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253176948 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251065526 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257972229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266015701 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252220681 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260172549 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264444579 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.250547254 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255061414 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253195057 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252549289 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253260632 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264193092 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254944149 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250306232 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252688145 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253085137 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256080911 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257741479 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252681728 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252077896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254376781 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255071655 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252357743 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254299186 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253287357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250866858 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253624126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255009046 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255622756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252718664 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250759416 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.249481251 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251211709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254107268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.260322241 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259383798 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250485903 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255237244 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.252579269 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259251636 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251777779 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250736843 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251139983 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265153161 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261679071 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262094786 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25830282 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256742738 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259481164 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.251781694 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258522718 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252790294 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253673104 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252842394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250629414 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254452188 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252876657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256745485 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254391092 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254794172 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262066865 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255194072 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253873955 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25258567 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253447102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257795536 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254438159 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257802949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258817401 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255949399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252150692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252179902 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260439666 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269051048 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257144349 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253610992 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.254138957 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254193391 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256269682 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254057736 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259134046 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262364533 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257057216 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265361916 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25747749 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266296867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252597814 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257566848 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262176687 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25662664 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252664809 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254533065 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254996656 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264855528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270461787 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.256843828 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259312686 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25451446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256703841 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259176131 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254403148 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2607968 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.25615208 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266471985 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271015228 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257624799 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257638955 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25742694 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254715212 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.258711373 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252302742 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262843489 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255908759 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257086238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255450387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256496164 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.259771523 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257995019 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260933695 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257711382 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260334171 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263756618 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27225562 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259984412 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259171788 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269481944 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257006526 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266163643 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2719304 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256761069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25727404 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.261162025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259728901 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.2566248 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.259506148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255881126 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25918165 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264805697 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.259401306 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262200376 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257143292 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257107637 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258122187 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26652649 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27998421 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.258050628 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26617678 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259501226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.257608104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.260956912 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258078606 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257228087 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259310524 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26872908 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270554632 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25929282 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256683012 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258585297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259666143 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264385633 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262833001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258192287 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263386913 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26177564 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.259682428 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26416232 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263394932 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.259799687 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260253622 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.258842237 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272654022 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.257709421 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.261189336 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257233162 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263662993 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259436361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.257242315 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259600573 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262001622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263410058 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259803387 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265461426 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.267220587 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262547425 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259878989 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.257471241 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259885711 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2609419 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260400214 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258676683 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260931271 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260489028 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261678448 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26375541 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258134259 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263154435 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260792302 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264382547 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260734231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266797092 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260682646 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261668362 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266630252 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263342338 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260712787 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261757622 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275116646 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262231309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27135727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2706802 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.26409686 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258655867 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262893665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270845694 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.259884862 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261330714 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261104398 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.263735254 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258975116 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265672683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260604717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271984878 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.261636469 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262151898 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271554019 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.278185719 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261424284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.262089405 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265652857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261285205 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262805824 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264923669 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259823144 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27238192 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.278870176 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263123946 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264145635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260951784 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263150207 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26664403 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266909269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263175061 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263211629 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262049747 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262993979 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26719616 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264316326 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.26030301 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263693055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267193982 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270561421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264559256 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265169073 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.264106909 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.263120199 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264282824 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267075005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26372097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.265467559 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263698452 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260923509 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264841319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267238239 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.262878654 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.264475025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268867123 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26443323 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266790722 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273897598 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275224513 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263569367 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261050987 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.26528745 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.265456198 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263777071 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264502852 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263333502 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266789979 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268217164 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263911378 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.267374983 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26601725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285465738 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.2828483 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263728548 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.265320418 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270250683 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.268904069 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266422625 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268597419 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267940711 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269131757 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.27176803 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265426498 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27288033 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278943062 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266627278 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.271948913 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267978215 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.27321417 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.267974129 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264823005 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.265731049 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268684547 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282771625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267135072 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274399349 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296017124 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281556652 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266223325 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266351702 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265748447 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264853911 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268627614 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266104281 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271422755 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2699954 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.266813505 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267122355 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273039954 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.267900392 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26979371 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269737437 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.265948665 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271124507 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.267685276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.266851128 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270740099 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267393321 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269752953 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.267566911 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267155338 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280419649 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.279036314 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.271036625 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.26839624 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269202852 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.271082043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269506824 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278581692 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279591011 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266919319 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264910176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268258725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268103407 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270526008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.267384697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.268374049 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268715954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269526453 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.281602431 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277254856 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272132784 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268901598 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267490038 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272869429 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27039124 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268950286 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26752287 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272253036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268382331 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271427432 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273148776 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.269980609 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269880766 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28203845 seconds)
  done (took 751.409660452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270529027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270153503 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27018842 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270991171 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269677883 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269623814 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270521636 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271084697 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271254564 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271129396 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270710619 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269939291 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270664157 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270786982 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270540384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269664975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269958864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2704051 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27108553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270941733 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270698729 seconds)
  done (took 27.883719289 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274750406 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27117568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270652252 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274726138 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271868021 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273394218 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272275098 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274032607 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27449939 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271809083 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274248272 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27357029 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271800547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271500691 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272272746 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27484982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274161886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27112574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274024886 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272307538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274722119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.271581207 seconds)
  done (took 29.212193462 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.272000168 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269967624 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270211143 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272112109 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.275008893 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.27307139 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268885285 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.274983288 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.275417477 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.273804122 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27001307 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.272718588 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276976677 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.281825637 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.275269639 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.274086118 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.419485401 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271104392 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.270974665 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270039027 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272447542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.278811014 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.273800921 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274036031 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.270803403 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270773149 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275850711 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.276267832 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271330261 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.271133561 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275424832 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.276301849 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271392293 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273898701 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.272185446 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.272936255 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280333221 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272283146 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.274151771 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.275131806 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280357445 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295467273 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273192823 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281329811 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.276417239 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.276530533 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275952218 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.280832237 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.275346878 seconds)
  done (took 63.808181851 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277385162 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277477095 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27200391 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276950139 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275756463 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27663921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.277101489 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276652226 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.276341584 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275752056 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279232445 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27484724 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27494547 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277785127 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.276759588 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275134793 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275876048 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274446049 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274907153 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275492287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.275965117 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277551471 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27728894 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275807348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278755704 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272864292 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275509055 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.278930521 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27548802 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276288304 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279605017 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277922542 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278327017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275883764 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275182198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.278591397 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.27914027 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27720936 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278428504 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275017992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278567099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278806879 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278437312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.278498851 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276904408 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.276987771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276072196 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275711976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277546816 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.278471392 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.277655869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.278736295 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280429323 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277218579 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277555376 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.279090248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.276751564 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.277326566 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.27967249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.277520939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.276637436 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281182073 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276628544 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.279840093 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279358755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277324723 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.277196062 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280376984 seconds)
  done (took 88.057735313 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275891656 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27635057 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2764771 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27677619 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275113945 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276172023 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276624605 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276776854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276348716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277179018 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27700696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281214376 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274948681 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282176779 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275096127 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275878533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277949663 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27696223 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276362556 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274752289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277331133 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277177297 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27598052 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276642718 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278924547 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278050384 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277995764 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276841658 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276868834 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278284319 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278247525 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277606485 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276186576 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27849191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276278184 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27654935 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27672362 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279048644 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277561377 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277233242 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277781351 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278575021 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279245255 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276712363 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278873566 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278246608 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278390373 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280056561 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282151577 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278389171 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277086785 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278465815 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278523258 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279086485 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28012698 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.284092823 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277716007 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279264329 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278568447 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278958384 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279057063 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283048274 seconds)
  done (took 80.439550964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284497152 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282325578 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.281800719 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280412969 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2839517 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280496002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282725931 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283389605 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283603688 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285089787 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284494583 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283176228 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279339512 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283923162 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280663332 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281888313 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282259237 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280610786 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285415856 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280758485 seconds)
  done (took 26.863717739 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282812799 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286213029 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.283876395 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28315165 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28530336 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280788295 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284787256 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283596537 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281832221 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283785671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284267391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284928395 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281810592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281962394 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283686156 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282510275 seconds)
  done (took 21.748328972 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.281956361 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285171126 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280467591 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281279533 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.283066321 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.284333045 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285151136 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280904632 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.280352516 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285373879 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283834179 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285345852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285820531 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279338585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283121774 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287407489 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283483833 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282496527 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285301546 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.279643913 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283791171 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282702177 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288130307 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286804718 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284934791 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283070028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.28415296 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282933403 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282204008 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285648857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.285055594 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284715177 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285013224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283494699 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281144062 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284930913 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286456348 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.28581656 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287331494 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286322575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287265693 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285350434 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.288410256 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285748213 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.28428177 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287472656 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284602871 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286002241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283049357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284028002 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286873273 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282613014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287961487 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286914782 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285194795 seconds)
  done (took 71.860636132 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286371279 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288156297 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284402162 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287837635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286803948 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285575387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288031984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284160592 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284720177 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288848278 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287242259 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287330858 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285136356 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288254636 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286367995 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287474272 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285923849 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285760079 seconds)
  done (took 24.375719244 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287399335 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287105738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.288370936 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284904542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287395096 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291021833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28496832 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289782251 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288667478 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286217059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286413311 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288927785 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290707922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289090525 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286601442 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286913259 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289613801 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288367503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28491198 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286199785 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288945312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289538777 seconds)
  done (took 29.550336882 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.285209026 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.283863294 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.303128169 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.329608273 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.317051352 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.284646642 seconds)
  done (took 9.021759898 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286303699 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290490951 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287590329 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291572896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290517785 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288493858 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287236766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287848054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290346993 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289176153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288127197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289248207 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288485846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287793765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290686758 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290193212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288004471 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286479269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288294755 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290293372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287872654 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290051917 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287841304 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287173271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288021366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287396647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291498501 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28820973 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289569394 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290676035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290934203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287445114 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29049225 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289190745 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291784545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289952581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288428799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29104465 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292087632 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288008221 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291908215 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291171066 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289432877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288109457 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292574885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287490826 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289548303 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288677825 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288479203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293850989 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291072596 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288230999 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291168452 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292927587 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292641735 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293245289 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289927891 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290370051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292127304 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288979442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288963132 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292974512 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290505432 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291382593 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293258733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289675918 seconds)
  done (took 86.345686966 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291835638 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29151553 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29062048 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291464011 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290265691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29116818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290590391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290181975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290468846 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290821408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292845057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292464359 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289376034 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289953114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291476977 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290168377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28996436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289994734 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291693869 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292818027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291135562 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291843428 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290971834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291888563 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293381298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293362515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290744205 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291304742 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291615121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291325451 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291360794 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290553499 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292191345 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292506201 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289349093 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292022958 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292030345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292170954 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292662787 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294917809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292277886 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293921147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291877405 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292259217 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293973803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292820082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291448715 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29349036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292289626 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293396556 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291806872 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293739335 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292251368 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292696543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293533367 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292771874 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293801024 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293374976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29248977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296895204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293640775 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292475673 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296761896 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293872416 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29208649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293616583 seconds)
  done (took 86.504480953 seconds)
done (took 1756.636901268 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.30534854 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.343919165 seconds)
  done (took 13.874172906 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453536215 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405305558 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.290949334 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.322325045 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28883121 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.294711378 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304846781 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288702536 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.290911446 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289366598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2915899 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478139974 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.283465937 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.286535715 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290158081 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.387087602 seconds)
  done (took 42.474801779 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.316230935 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29630019 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397890591 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306035617 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.31557951 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.46023987 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.343689273 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295257879 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.44650313 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328801419 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.692523255 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.315368482 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293616426 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.292116167 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309821351 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.461913016 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515187108 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.690901406 seconds)
  done (took 29.305873057 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.693397311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.299612526 seconds)
  done (took 9.220203649 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.30792284 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.29443682 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.311276409 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313513953 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.303581364 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.320532727 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.33136006 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.357132961 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.312263887 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.309208487 seconds)
  done (took 64.39123043 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313730307 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.296801953 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.29407499 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293210267 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.286935485 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.286938348 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293374058 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289192169 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.466411673 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.407716584 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.309157575 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300801074 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.295345566 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294720227 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297392906 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.328472335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.419626416 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.296528952 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297590053 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30046343 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295254622 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.432546592 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331070732 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.29709037 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.407435941 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.4887264 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298307 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301384594 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.413637862 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298769799 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295475707 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295558541 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.299309133 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.84734131 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.803150066 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311761412 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314348035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308877375 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299461711 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.494961055 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29722175 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.304634357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.287801129 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.785174562 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451408123 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.400339529 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.43431021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29707371 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.296239939 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.352058871 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298616496 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297868556 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324322175 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.046229403 seconds)
  done (took 108.30758872 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311081696 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.779185313 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458090541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.303521699 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.047274494 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903464504 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.288560626 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.544451875 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301390158 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290392658 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.553818917 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.757970137 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291288548 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.315691065 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.431720524 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.294834488 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289996876 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.05611507 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286589112 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.290975621 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695366453 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303502586 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.289140112 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.319571959 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332970509 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719775184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.587000551 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.718778372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.293359829 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.289607381 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.722529559 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297199349 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.37013589 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288635989 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.547870404 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.616448859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594439607 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.29173186 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30690164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289726835 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.315269629 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718481875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.603141096 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.288996388 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301575548 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.722949963 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289146917 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.297084218 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296857651 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489049946 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.244465266 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.291911871 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.57078922 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.289583283 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.635115593 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.349041628 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348666624 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751311045 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289330572 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.356482522 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.297058411 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292829031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297355672 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292309815 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293211765 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.604762317 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.671254648 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291892602 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606284399 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.716374441 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300185183 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.778290238 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.148597019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305235701 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352887225 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.29913106 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.858282976 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746590706 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.323243001 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289551677 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589901894 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.288471446 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558065809 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303403912 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292191531 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702193867 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.311519604 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.324812938 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.29079699 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.298691512 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.931496711 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292932457 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.54571462 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.334743214 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.291762263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.291625874 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.324632648 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287347963 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.292504727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.296846976 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783224271 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.293050945 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.610559921 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308767002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294381732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.292170095 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.294634647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292630177 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507057724 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.733372086 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.291448368 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295573961 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.290834173 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.289878288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.558563029 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.295474925 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57009286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.29337871 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303770132 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.297289788 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.993009429 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.327817322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292355538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.289562435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.145865674 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511493395 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310282055 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.291673375 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293457705 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307368751 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.513389593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290041515 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.334282847 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295211082 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96565065 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330074937 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.293644431 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.908739531 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297931927 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.142143122 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313888657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293651172 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585490978 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55701676 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.594628026 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.294175104 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.294331272 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938519482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301181233 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440865322 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310284948 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.349660432 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494802319 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.565565246 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295755187 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.874689048 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.29381366 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502722519 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.295938974 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598771631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.748580969 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.292611575 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298241392 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962318982 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.964179863 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.891340108 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.296007452 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.562517248 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.263290987 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.746198692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.294872688 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.295999572 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.740341072 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.296174561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303164594 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.296481327 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.295653453 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365511571 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47074052 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.084148888 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294091381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728199314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327489857 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294292227 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.295952993 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.297993887 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.650738925 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.338386225 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.298117334 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.321565104 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.300376366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300796397 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.739403861 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.229842848 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.2972863 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450387859 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890466169 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.295755719 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.297254736 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.90347858 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.582648686 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77025578 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.330776582 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.573647477 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.293731381 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334769248 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.984896102 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305177619 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782269026 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296147296 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.296525855 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850854505 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.297938528 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364245266 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296867081 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296834232 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787377241 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295521234 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303625153 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.525221483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295384795 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551063224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.299632592 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.316586921 seconds)
  done (took 1100.251315861 seconds)
done (took 1369.050497472 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.300004935 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29905617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.283421591 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299423913 seconds)
  done (took 26.421068521 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309468232 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.305488328 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307552475 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.303844527 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307084929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306711857 seconds)
  done (took 9.078765806 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.365105142 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.298611272 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299710287 seconds)
  done (took 19.20290625 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.505312355 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.487844365 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.63640606 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.292818911 seconds)
  done (took 10.163056084 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.307790625 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.307063634 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305576454 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306146333 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308711005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309818793 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.308232646 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307385393 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310744682 seconds)
  done (took 13.011924269 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.878487512 seconds)
done (took 83.99402418 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.378194024 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.648212774 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.449793275 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.061764415 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.401115454 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.299954746 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.335241134 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.299339533 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.35843468 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.546409954 seconds)
    (11/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.34357526 seconds)
    (12/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.879585786 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.346634196 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.301119037 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334115579 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.459783749 seconds)
    (17/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.499056494 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.289147958 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.601045352 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.325565621 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.701000438 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.645621724 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.581262463 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.155145315 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.835178087 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.59518859 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.316618474 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.89850231 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.434081037 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.556123191 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.769250976 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.571304811 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.288639249 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.077879215 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.171322826 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.503309528 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.30189323 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.328338416 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.287141001 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.90258178 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.407603678 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.3019502 seconds)
    (43/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.494384975 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.30429278 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.98685455 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.426908397 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.288628285 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.855048953 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.745634707 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455850621 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.289060774 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.394768723 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.644069168 seconds)
    (54/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.782896776 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.835785702 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.52384878 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.290336811 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.470846193 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.303057086 seconds)
    (60/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.066846276 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.561333026 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.302177362 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395334943 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.639671166 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.33811226 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.331549808 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.436493625 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.365636691 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.306888322 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.586644612 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.349528397 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.156128024 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.90096785 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326230446 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000083565 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.388772399 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.998802723 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.329399997 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308732394 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.315382415 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.987072789 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.51656134 seconds)
    (83/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.392649293 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.59295932 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.332883284 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.438675023 seconds)
    (87/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.481239291 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.469030187 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.31404146 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 5.558675494 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.462725412 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.517871392 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434512463 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.303559733 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.715151105 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.302361162 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.585274232 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.288023097 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.226665347 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.817827036 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.81790712 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.706661931 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.464110852 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.306195862 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.375599241 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.634464175 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.463370157 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.500252799 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.314551872 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.562771916 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.510185997 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374109722 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.315764714 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.080228026 seconds)
    (115/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391897966 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.291185306 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.307296942 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.413574728 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.304135266 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.603772997 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.308278887 seconds)
    (122/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.585796485 seconds)
    (123/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.359228688 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.991733954 seconds)
    (125/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434433657 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336314906 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.585138228 seconds)
    (128/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.763667465 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.810809851 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.333259884 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.617315648 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.569814478 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.415563483 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.664080666 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.320667129 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.290274014 seconds)
    (137/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.642059619 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.012875749 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.389921996 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.5730012 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.111570733 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.308137876 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.343056293 seconds)
    (144/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.306353448 seconds)
    (145/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443172348 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.718689122 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.17389523 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.316997347 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339510088 seconds)
    (150/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.338578895 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.428580576 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.401807422 seconds)
    (153/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.337943859 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.587654875 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.602605147 seconds)
    (156/309) benchmarking ("sort", Float32, false)...
    done (took 5.290608458 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.571434019 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.01317567 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.3033038 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340514085 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.312944955 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.49466517 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.848788683 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.682123854 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.349684452 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.378630212 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.475231343 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.545069581 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343822751 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.292270478 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.334688611 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.717434529 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.461763912 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.335035694 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.9104437 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.003093496 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.323793458 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.458709475 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.377840036 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.716417997 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.39447019 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.307377838 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.363117411 seconds)
    (184/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.319734715 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.393238504 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.33737921 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.29717154 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.388025088 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.308071715 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.642008789 seconds)
    (191/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.370181543 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.658725591 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.005144607 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.343326482 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.364230054 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.657316246 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.517874474 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.016482959 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.307146439 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.925845881 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.371087659 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.657270344 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.774725023 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.722906454 seconds)
    (205/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.834750219 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 6.312093311 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.432556386 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.296210974 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.50921642 seconds)
    (210/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.325792044 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.739435265 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38887614 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.887705805 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.952281492 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.644992773 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.383817387 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.561372613 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.087519455 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.807837662 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.399693781 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306944455 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.07503839 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.572881558 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.920425557 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.84380541 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.542506621 seconds)
    (227/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.870407332 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.560756157 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.323178415 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.312449365 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.406241548 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.425320643 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.310472757 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.936348876 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.1043014 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338239556 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.36356545 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.071747722 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.493850017 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.359308214 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.900356726 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374134748 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178167724 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.311093848 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.3611059 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.310799406 seconds)
    (247/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.378955099 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.488555114 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401226798 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.83207047 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.298626981 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325306618 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.00260701 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.70492782 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.846594101 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.091911359 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.899736794 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.351989032 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.142720576 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.512209989 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330536984 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.302125097 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.084450227 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.677185032 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.930066629 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.774346041 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.512625974 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.449440457 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343615009 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 4.365024036 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.403279136 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.70017273 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.309811163 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.365887448 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.62746846 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.129621609 seconds)
    (277/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.561131541 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.433158509 seconds)
    (279/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.589345904 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.778005855 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379325705 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.099005548 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.001285458 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337588684 seconds)
    (285/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.874019314 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.871384249 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.326950034 seconds)
    (288/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346163364 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.401872955 seconds)
    (290/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.485381344 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.401306355 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.46422483 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424697203 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126266871 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.468112032 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.314509171 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.658871514 seconds)
    (298/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.02297992 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.325591412 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.364065761 seconds)
    (301/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.495609032 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.304050688 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.147804136 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.800097414 seconds)
    (305/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.689472003 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.354886531 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35736866 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.342391921 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334868507 seconds)
  done (took 905.715967208 seconds)
done (took 906.959096309 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.350154032 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344515066 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.325111307 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.348100622 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.438495616 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.357510964 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.335614437 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.327567845 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.37257497 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.373670041 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.324612618 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.357435387 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326297339 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.327515019 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326086801 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339952914 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262908733 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327844189 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.342729988 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335891863 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343276922 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32463258 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375310021 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.354515883 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.329030429 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.328086098 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.32955227 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.34616659 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.438958924 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.329617141 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329535206 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.337797721 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.261082118 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.32729311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.320207889 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.344088976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.339076992 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.336846215 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.330495576 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.358662207 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.623638185 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.329013685 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.328353938 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.330482354 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.324478523 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.331508699 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.328937421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.334605048 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342222756 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342569994 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.635905393 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.342963354 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.332037594 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.327326134 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.33830687 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.328135653 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.331522447 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345447067 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.351223132 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343932382 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.260703362 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.334097878 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.330255951 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347193121 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337286769 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.651869926 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322351332 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.3347954 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.61932629 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.333603531 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.653630477 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.33531005 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.331361031 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343410158 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.363197726 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.27099782 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.326615555 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.329528733 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.33867181 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329837863 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.341132304 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344104554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.334937029 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331524695 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34668841 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.363441197 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.339422384 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.330665386 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.341025683 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.349455742 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.339734964 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.338625721 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.333644887 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326535424 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.339287958 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.334801065 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334398922 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.335754556 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336142158 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.341743114 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.633619922 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346656563 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.327545661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329203234 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.32982984 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.344352892 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.624766281 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.329889757 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.352997835 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.377409338 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331955877 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.266343587 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.339338564 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349499097 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.341164224 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.33504871 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.327818465 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265468116 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.624520123 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.343089801 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.332485469 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.329740006 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350668041 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.334802695 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326894024 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.275981327 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.332637704 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346253707 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.455386476 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.342456383 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.36388812 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.330394795 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.336848604 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.364708265 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351373752 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.364140265 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334537905 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346753246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350127589 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.328043348 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343959353 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342217297 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333359337 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340889677 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.32743815 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.359611933 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345168466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345736603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.353730261 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.45298339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.330149694 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.266963394 seconds)
done (took 223.022379082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.390458276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.329881233 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438859597 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.333281392 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.428176624 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.429655811 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330409215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331103449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331776704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.707558078 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331767812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332355187 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.332794293 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.330955178 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.415814351 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334198207 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331074446 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.676463126 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.331077384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.401611523 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.322049652 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.333303842 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.336745802 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.715043095 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.331560751 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.329077664 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.401821759 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334978208 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677159135 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.333986016 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.332597813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.677384015 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.421958298 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.354372694 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346175215 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341245448 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.432627278 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.348837551 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41243564 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.417109586 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.439675906 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.369837049 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.327343456 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.332873833 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336864674 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.332421225 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.333182851 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363307505 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.329459261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.335793751 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.672594108 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.346873479 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334414793 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.335456185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334059205 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.360990274 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334426869 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.331951013 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.422069144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.335866831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.395662379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.716617966 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.712515742 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.338935516 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.336599616 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.336702098 seconds)
  done (took 148.48017437 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.401746979 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.407138058 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.443253968 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.331200092 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386129447 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.445729321 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.333615101 seconds)
  done (took 11.014927026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.341434193 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339320922 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382788116 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387260343 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.332447016 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.478773565 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338932214 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.344436125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336546074 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.385072405 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.336760323 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337943612 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.347127821 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.329196342 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38283358 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347804477 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.448654935 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.336438632 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33342877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486965084 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337318572 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.346744521 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.384591297 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349010965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.334820742 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.338914462 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898322271 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336330384 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335760112 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338678483 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336765705 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.372938291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337476794 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.33212241 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338671158 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452878495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.334090434 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339676099 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.337399775 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.331760377 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341672078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.340334113 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341161212 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.340651332 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.338339267 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.359987696 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34212423 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.33908522 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.340718387 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341266643 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.383897 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341938469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339463401 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338633482 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.391516935 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347376458 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.335823251 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.337294694 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340895012 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338233277 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486386103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383287932 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340014375 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383585173 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341036162 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340146595 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.339321595 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.339884888 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390268578 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.34060302 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386321946 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.339410287 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.49186212 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.359959947 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343954545 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.340711189 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34070174 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337097942 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.330242543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.342854317 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.338595531 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.338133194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.342414442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342811967 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33899654 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441908058 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445951376 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.337775653 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.351791116 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.34377416 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.339873427 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.389594402 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342904713 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.338765238 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390114989 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.453396074 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39196025 seconds)
  done (took 153.625389883 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.344217289 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.344352552 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.338274894 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35374047 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337841714 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.336631771 seconds)
  done (took 9.325248867 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.343497992 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.346730984 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344124393 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343707433 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.339688206 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338934486 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339313409 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341588465 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.342931407 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343658055 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.341418466 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.340934812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.33977793 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.337689812 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.339473073 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343343968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.337654189 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341619767 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344957002 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337934738 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.436012341 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.339660672 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338281396 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.342098563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.344495688 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345491044 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347077093 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.345491125 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.344511238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.347134602 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.343688043 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.34042253 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.341813228 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.345960951 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.342658881 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338320684 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350487088 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.340959971 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343091371 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.339749546 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.340970925 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341575605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.344167044 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.342505227 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.341798645 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.345947275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.344968822 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347836475 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341087514 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341823878 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.340778704 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345360546 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.340978037 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.343555 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.345738395 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346322967 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.344333764 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.342177237 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34003347 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.342049249 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.346439534 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342960179 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342208922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346200183 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.352291376 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.342093706 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.342375452 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346753373 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342399084 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.346977355 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.342212641 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.344122117 seconds)
  done (took 99.060612995 seconds)
done (took 422.768520026 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.520766389 seconds)
  done (took 7.795276572 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.340559985 seconds)
  done (took 7.615801787 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.754132154 seconds)
  done (took 20.031049274 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.418898847 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.388982828 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.333189127 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.346064319 seconds)
  done (took 26.7637657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.52641284 seconds)
  done (took 7.800389498 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.347765647 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.335846619 seconds)
  done (took 13.960218725 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.7914501 seconds)
  done (took 8.065306473 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.452725125 seconds)
  done (took 7.72858573 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.35200587 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.364115259 seconds)
  done (took 14.245332107 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.321668405 seconds)
  done (took 7.598421243 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.102305159 seconds)
  done (took 8.37727581 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.356245501 seconds)
  done (took 7.632187704 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.383579755 seconds)
  done (took 7.658764406 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.652203183 seconds)
  done (took 8.926998649 seconds)
done (took 155.473434584 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.335262947 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.334657258 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.33495329 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.33915006 seconds)
  done (took 26.618774118 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.38184177 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403875653 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398952113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390589465 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.38331535 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.379664382 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391275403 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389337236 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.395140447 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.382211109 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.382015679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38655817 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.391418257 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.373278074 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.381367066 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402480582 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393448575 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385534397 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373066404 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.383946337 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352640123 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.396569694 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38547175 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.347854793 seconds)
  done (took 34.508755429 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.543622284 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.414526231 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.498386804 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.396851733 seconds)
  done (took 7.13164162 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400821788 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402114873 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413915654 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.453108173 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.488502679 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412674775 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.374195209 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371464546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357652483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.401099234 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.47592209 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420560213 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.482378342 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.348090511 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.532920236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.348277262 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.348589639 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.401788502 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.453517015 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.466302241 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351677436 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.400788897 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.404872686 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.418545971 seconds)
  done (took 35.208139408 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.350566985 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.356451124 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.354213517 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.34688081 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.348648083 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.348539826 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.354787679 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.349459031 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.371512914 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.348545431 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.348526424 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.347981608 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.346144415 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.347734917 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.34596177 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.362107245 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.362767725 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.34844437 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.35293662 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.353142618 seconds)
  done (took 28.323270171 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.340487202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.194053718 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.691762931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595875946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.340179119 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.338523906 seconds)
  done (took 27.780680545 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.406854082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.527587316 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.346301212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.672516176 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747876455 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.347503574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.345662054 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.56178126 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.838658718 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.844775045 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.398017592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.408691006 seconds)
  done (took 19.726317445 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.347258343 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.339677486 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.347460152 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.357405772 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.396406897 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.350810431 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.352596589 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.340033021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.397690218 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.401008719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.350560371 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396700443 seconds)
  done (took 37.658318639 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436477448 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390057057 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.150032644 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.134760166 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724496291 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556117152 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.108826426 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802664592 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.352058429 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620799864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344365162 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447785741 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599544211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345691545 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365563594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.305062818 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574571443 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831207052 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348833831 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.182291219 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375372306 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34940597 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.275432015 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374081789 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557517477 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476533004 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.739111154 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34808235 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608630899 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361247812 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356488064 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34695173 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622899343 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972789859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440399278 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35449691 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.107416346 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.057733875 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.326633344 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.192675716 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.103991578 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349863935 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358488423 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350258609 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281359351 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347326234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820463012 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.353338344 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.059177465 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348227589 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358479415 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441274595 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350959018 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16249129 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416285707 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347772766 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.344677586 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35048375 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922155301 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674849432 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352087219 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.286725009 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.793186775 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.192667348 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964045709 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.45288468 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.352443416 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353414169 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283285298 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.188793985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368059701 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495496428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.368988553 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995803668 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036081341 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350057548 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294488343 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87902754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351425472 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.28508545 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57887814 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348900638 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287400226 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.294535729 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.283854581 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012442803 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361673862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.656797543 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353858303 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804678213 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365190852 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367751343 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373597278 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574784565 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.23771357 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349639914 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.129444646 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493496618 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370249534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.810019799 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284653313 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.35428844 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605504149 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.967350562 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361135478 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.288201716 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564349992 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348321841 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.36628993 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359659357 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.362153295 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.923455472 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36170916 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.677977636 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37141493 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350537426 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056867917 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354595314 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.453943442 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359775366 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582497912 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.070577582 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350334216 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434372936 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350512477 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350501234 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.272716448 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866857091 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349979464 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.346595876 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360434923 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362987454 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.346957006 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297218064 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.343137016 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351421599 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.354557212 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573667479 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357779488 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62941563 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28559551 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49978401 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.404743421 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.571947361 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.491509699 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.35347808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610735291 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362126741 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361730002 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363556416 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370007054 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449010547 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372093781 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.364304917 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608296089 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.354659305 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354196682 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.277345978 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353887983 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361612319 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.359103798 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24841222 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917553846 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330758848 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354591249 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305666371 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.365756052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417142165 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356408981 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362599538 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.035647742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.212025117 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.358781414 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.348431321 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574756974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363194891 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.270609221 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432721092 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.555930727 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925501888 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366720789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.287648867 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.065938805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.046821399 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355228181 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28835202 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3541974 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363290886 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364028827 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.916310116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933897833 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356615092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.194646141 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361162062 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364890953 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.358680129 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355044498 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.011795461 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.690677035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3633414 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.367332165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496728661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.366905646 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290337511 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.358615603 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356882351 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354103171 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354880698 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387327942 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.213923884 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842944658 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610158917 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.100885718 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367460826 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.365446325 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.385435895 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356894947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.167723216 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37603361 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.372970399 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365708115 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.365776247 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.247901702 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028533242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922088484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123101425 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884302854 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295286856 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.364862825 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35597383 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823477017 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288028369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910948778 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529208709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.816989629 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300919547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562259516 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500685904 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069909089 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365022841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584690313 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289389607 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.169830699 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37979848 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564582339 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389016404 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363244627 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28520317 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.651872068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621153467 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.123556515 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437718375 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816384331 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.187388401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370933486 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.350054201 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.620239751 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525350114 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069365919 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.529924367 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36531194 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358688394 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839080621 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358243292 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581535472 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97436926 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369466249 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.564927855 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29252922 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.368941484 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.366079422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.354448236 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.530651042 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.361233847 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.61187055 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368580227 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291936509 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357327714 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916873905 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.214192562 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.362573631 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357113221 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059285891 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3593507 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639254835 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.360408811 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.027057963 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361179362 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291346878 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293914561 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.04963697 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361494519 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333289219 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825082873 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.769582085 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.411979783 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374711703 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201463229 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612544055 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.37070875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931256638 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585074754 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.210038136 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380180416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.458881042 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209723382 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.354016042 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358638969 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591358943 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25346444 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583245128 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.172660947 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.25949663 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353936587 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571047907 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357237799 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373377514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591433629 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.070460297 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.366345687 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074388699 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382213991 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359273821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277307502 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.800830102 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362740371 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438690998 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370621565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.370244915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.370075192 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524819774 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359863556 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376729949 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373692379 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455387988 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723183995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.020038708 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.366186138 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938859891 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074034252 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947498484 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374520102 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361251555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371137009 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295445598 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507903877 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587793988 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631121616 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490777682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.855009314 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385004382 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.216154893 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380275759 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572733354 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635199619 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258465334 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363910087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374182015 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.359604897 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373611682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573929894 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837859756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898715293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480698157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364700547 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.826396355 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636630294 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361622498 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362334049 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953785064 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.372697158 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.636004118 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.368208152 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363499842 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513788267 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372362082 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993158221 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.375035292 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.524510599 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.136769303 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.245014492 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62098769 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.779917793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.369653127 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942731387 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057432673 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625993909 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430110863 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37470414 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.46665553 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509438314 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.370004146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363615459 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364916345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207291199 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.074494666 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372465361 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954089989 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627766024 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.359670453 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.372363344 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387128828 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.373910891 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587302998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043282419 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590695302 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373547449 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367089986 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.181931045 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954131735 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37759642 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298049752 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367493762 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592126804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600017165 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38547393 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.81776703 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.074574865 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900935375 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.341807571 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384194241 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366473156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065689921 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951967256 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.022054163 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840152085 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923649184 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37143932 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639834104 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.367869975 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375924418 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644423403 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.370232001 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376147733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377717705 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.942547145 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08832451 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.373323078 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.250308723 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.301653599 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709905041 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060680172 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300657768 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364883389 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.540381153 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365933526 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498713786 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375553652 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.368604586 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370897245 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.099670355 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638867052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.368284915 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.357034254 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.27123663 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370377279 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36815014 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633783093 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370855299 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.031288099 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714769283 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620700026 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364172332 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.345368111 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.36943756 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367678088 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352583561 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.565916044 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.932434083 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908076125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.370466571 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.378905239 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370767539 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.583668398 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577473914 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379406283 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381927555 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371304529 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385318619 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.268714977 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.870006492 seconds)
  done (took 1600.236107821 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374773619 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.367493226 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.380547099 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.399872921 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400376314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.379169897 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.433822885 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.364945757 seconds)
  done (took 52.405245369 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.367762126 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.609115602 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.392315344 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.369645344 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.371810185 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.37239167 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.776884362 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.37178639 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.372740887 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.373826059 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.370713182 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.364968342 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.961832905 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.370658403 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.376053648 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.359433483 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.370315445 seconds)
  done (took 65.855736539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.367654501 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.69789377 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.450792623 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.365482629 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.18171181 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.374577036 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.747871183 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.40224412 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.363988341 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.493866255 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.017189606 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.371421608 seconds)
  done (took 84.139460849 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370935005 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.370245826 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.371620769 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.372033516 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.370838721 seconds)
  done (took 8.157117729 seconds)
done (took 2029.026982231 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.618811201 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032422654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.959511197 seconds)
  done (took 5.294344902 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.512950034 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.565493492 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.684442172 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712043527 seconds)
  done (took 7.778775015 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.641180293 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.734211076 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.555029676 seconds)
  done (took 6.232267013 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.67308256 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.372498245 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.483425003 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.369070074 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.369025676 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.370509071 seconds)
  done (took 20.412274488 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.371934608 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.375990808 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.373924786 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.377647003 seconds)
  done (took 6.803365143 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.351843722 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.0590603 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.350688002 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.36773328 seconds)
  done (took 18.432068693 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.117213691 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.142058805 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.117920019 seconds)
  done (took 7.683274854 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.373519944 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.208920309 seconds)
  done (took 9.885269581 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.686195561 seconds)
  done (took 2.9907322 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.508159285 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.644164146 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.392864213 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.290129929 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.417675081 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.909600463 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.870220963 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.473021187 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.286158751 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.336968107 seconds)
  done (took 27.436041706 seconds)
done (took 126.399072284 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.968917224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373679111 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.571781624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.931619208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.591315203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.574882593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.57479916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.903124293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.491966939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.435124245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.931657937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.600732313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.728324948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.36552991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.73206514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.36989871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.593792064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.004398475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.612826431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.84704781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.56939935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.57039579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.762963825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.591099927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.594199901 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.524055912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.149956593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.370353894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.788405968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.217939148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.526929137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.024165447 seconds)
  done (took 187.200004443 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.365727635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.364808398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.379921294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.370115398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.367332473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.367946276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.366599036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.368495304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371855965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370973131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.37955416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.376815475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.367216331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365624716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.379348824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.366663479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.377438892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.366231971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.366386689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.36676073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.366953912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.392730312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.37127237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.370812141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.367659354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.379572341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.367056505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367566911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.368026786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381701848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.368118004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.380476814 seconds)
  done (took 205.194068447 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.372095466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.366338249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.368131218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.381885497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368302185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369805869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.381936288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.367057592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374566282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.367221526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366331714 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.368689196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38733244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367504746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.371014777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38024776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.369439268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.375536123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.36946222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.39403722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.368490669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.369454295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.377316279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.370839816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.393541397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.37206498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.369106061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367435951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.390265445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376765301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375679123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.377567498 seconds)
  done (took 205.284931895 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.570222332 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.382855881 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.38297911 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.321060154 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.383676811 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38246252 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.378894462 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.569937959 seconds)
  done (took 14.68305578 seconds)
done (took 613.668974632 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.587383126 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.304391856 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.57643778 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.403940276 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.137099282 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.402034361 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.403471283 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.562387843 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.288837138 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.561467342 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607481824 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.3986849 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.743710713 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.402947574 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.651522905 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.496921284 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.275505049 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.38985668 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.695919679 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.896249932 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.650133305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.780754787 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.559628185 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.27622008 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.722588214 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.784572516 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038475193 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.275646354 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.402173847 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.704751843 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.924657313 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.281983476 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.450342456 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434060285 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.492470312 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.474478512 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267604645 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.431544092 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.581467687 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.554240483 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.892717755 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.107499832 seconds)
  done (took 92.183788499 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.369625639 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.370343856 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.368532405 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.371680883 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.371592616 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.373146508 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.367705184 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.374157269 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.369858271 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.368657258 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.368071475 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.373052567 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.368957602 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.373509637 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.368898766 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.36724004 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.369544803 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.36992208 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.370978252 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.372532113 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.370063978 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.369034299 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.370648904 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.370659422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.370792054 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.370450348 seconds)
  done (took 36.941319954 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.388398577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.619752917 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.777581774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.386099637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.38255479 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385719326 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.455200015 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.386433575 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.386931223 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.386153219 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530214234 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.389048388 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414532169 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.791487761 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.384458735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.386930282 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.38823943 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.382744076 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.623007845 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394690972 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457398847 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.389232278 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454322514 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.393023416 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388168511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385034609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.390806717 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.871615382 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.38552842 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.533620587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.097627635 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.452673502 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.827947027 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.786761759 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.101397848 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391540711 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.386524502 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535265662 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.387030248 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.386245284 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45369185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.386907468 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.786117787 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.997382592 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399520696 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.390524479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.892939996 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.5361311 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.611429688 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390318053 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.806571982 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.392248807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.390056056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.387792174 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610651166 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.38964668 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.38980262 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.905710128 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.393141721 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.456591744 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.39249397 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388446352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.63275455 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.388122708 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.621927813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389255192 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.397054944 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.389411024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.788259552 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389405387 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.011380259 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.399861502 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.390131773 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.531688854 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.621141614 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922351529 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.391817741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635786538 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843189851 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.455050397 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.391123139 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.860734227 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.461184119 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393074632 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.395766151 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.395218707 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.390959455 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.435853525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.452983448 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.946301546 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.003124963 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.936585705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.460385945 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.400733125 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.384733501 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.904992591 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.394267571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.391469764 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.784794332 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.013464435 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.402864647 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.395184285 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.998024187 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403275208 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.458911907 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395020654 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.794978479 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389134768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.439607338 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.395659066 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.395220827 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393675048 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.460246234 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391766375 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.395306888 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.990593775 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.553312359 seconds)
  done (took 180.956156631 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.382961052 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.397906616 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.390015854 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.378859916 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.381514567 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.389676001 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.381197574 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.383015803 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.38611184 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.383626411 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.384461034 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.384786111 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.384768379 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.387005189 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.390266724 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.389615749 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.99213148 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.383294321 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.383855819 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.383628018 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.166582928 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.384802071 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.384089056 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.3812173 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.38417383 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.386511435 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.387125358 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.382286677 seconds)
  done (took 153.49711068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.396020557 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.907918252 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.390809317 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.509444956 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412251438 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.390604762 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.509661877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.441749383 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390445746 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.392509852 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.391496577 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.668891217 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.395023258 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.871502403 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.562140397 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.516745886 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.870168264 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.399123057 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.392272429 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.394019704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.512174583 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.39786548 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.671298373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.911838889 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.400093488 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.912543049 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.378526152 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.398572344 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.390458735 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.914808945 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.392370112 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.675743138 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.459861837 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.447863011 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.915354862 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.864788208 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.877303244 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.527650338 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.394148546 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.395385067 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.394805621 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.38034457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.914854293 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.396255972 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.393662252 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.90854347 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409899192 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.399509328 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.412253682 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.393689009 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.4453763 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.446495773 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.674370081 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.916185525 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.465039954 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.435017364 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.511554591 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.75612129 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.394949269 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.874713485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.380667867 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.921891767 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.397176372 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.379043998 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.398566542 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.402972534 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.533982053 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.516733639 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.871637351 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.392402659 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.870312656 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.532975979 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.400029785 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.397881212 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.398815582 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.921040055 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.872064887 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.52960218 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.512659276 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.56543049 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.383064781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.393743183 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.38324916 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.461540215 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.399203019 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926968105 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.871779637 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.395419513 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39980155 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39841406 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.399263128 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.553919573 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.920848289 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.465756536 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.871671354 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.68923849 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.676052981 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.399617279 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.454767485 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.395868199 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.677715698 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.400747638 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.452078468 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.819354289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.674777487 seconds)
  done (took 164.35183754 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.620818235 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.518126229 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.486546556 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.497727522 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.93171181 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.938761543 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.51414561 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.510910941 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499318999 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.624975858 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.472810758 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.49638443 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.578366638 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.470029674 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.0684694 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.462847276 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.48621328 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512757139 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.497296303 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.351476286 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.993870155 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.662342646 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.554516631 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.371608029 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.481747386 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.147771597 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.911256949 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.941668428 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.554907303 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.575895878 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.930925762 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.450677947 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.277259552 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.027601672 seconds)
  done (took 65.749699217 seconds)
done (took 694.990056278 seconds)
SAVING RESULT...
DONE!
