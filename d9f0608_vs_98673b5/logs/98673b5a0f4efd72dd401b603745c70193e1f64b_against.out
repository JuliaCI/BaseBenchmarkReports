cset: moving following pidspec: 14812
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304046595 seconds)
loading group "string"... done (took 0.584561547 seconds)
loading group "linalg"... done (took 7.167879667 seconds)
loading group "parallel"... done (took 0.166530246 seconds)
loading group "find"... done (took 1.122715191 seconds)
loading group "tuple"... done (took 1.990414349 seconds)
loading group "dates"... done (took 1.266538711 seconds)
loading group "micro"... done (took 0.235097887 seconds)
loading group "io"... done (took 0.968453462 seconds)
loading group "scalar"... done (took 38.581887569 seconds)
loading group "sparse"... done (took 12.425994017 seconds)
loading group "broadcast"... done (took 0.972724813 seconds)
loading group "union"... done (took 13.180990336 seconds)
loading group "simd"... done (took 4.486504445 seconds)
loading group "random"... done (took 9.028683015 seconds)
loading group "problem"... done (took 1.943023108 seconds)
loading group "array"... done (took 21.477748764 seconds)
loading group "misc"... done (took 1.941057685 seconds)
loading group "sort"... done (took 3.252210272 seconds)
loading group "collection"... done (took 18.187051526 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548280688 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144897712 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12062351 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141852083 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186087588 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134911088 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144430744 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087639563 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048419013 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170453581 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14277987 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483042496 seconds)
done (took 5.118307977 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206034595 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088821684 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098221387 seconds)
  done (took 0.893341156 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067753384 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129903688 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081640761 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069828238 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069038995 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082379672 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068634145 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067528714 seconds)
  done (took 1.282667162 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075964653 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070035901 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08501802 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069612932 seconds)
  done (took 1.015026203 seconds)
done (took 4.190082297 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.907166489 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237594811 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191356716 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45632879 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149687402 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190892104 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667960947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337099087 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213512819 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102602506 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106943917 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383155718 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109061843 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667409755 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080186079 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107726139 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160163508 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442337411 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082440402 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084813893 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104991967 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143556309 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105355513 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07899449 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171551898 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071494263 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149766702 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09720322 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069941717 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.246912273 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191710314 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693272262 seconds)
  done (took 10.554538708 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099755869 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119151218 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070598054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14132032 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10627531 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088095289 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073267529 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085095286 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092758274 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1610519 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116650709 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107874916 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083491165 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071855398 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102280266 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215396712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110362678 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087217682 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088826991 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077255195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123639432 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084376783 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095919074 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079982652 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155110224 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198816988 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114128792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113308306 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072960273 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082933428 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133185231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145335461 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073020453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083870804 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141450661 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113444822 seconds)
  done (took 4.635755203 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.074053045 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114214673 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163107408 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093714854 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154779145 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087003959 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112553884 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084989853 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101809298 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249870751 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.146529586 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.460596535 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130293182 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102347677 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069562635 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085904781 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070243354 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.537006968 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147110831 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104043584 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104651751 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090799524 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07204414 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383604253 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070377649 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068099448 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086230527 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061530883 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.0659566 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146853932 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08659257 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208944068 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110234235 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069819086 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121099633 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183155308 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113041257 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124898051 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068515296 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067731084 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169677981 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092289095 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068254585 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107633097 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106185228 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122312309 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084927593 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069775477 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183535489 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068435967 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101867525 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.911112197 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169139564 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095207249 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067837814 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287440928 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086198626 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085834012 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066336355 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261226258 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.156432398 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069011007 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085311757 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068235901 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069781408 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406382449 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069230333 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.76503252 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072647941 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079166299 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086631045 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068604288 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090625017 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074830225 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102698472 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068795621 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06565845 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086509155 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067608253 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083024936 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071036313 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101412503 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.2082463 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071846894 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068216419 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082794417 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067489455 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102667823 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098896283 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089684132 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067474267 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116038079 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07099031 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068918355 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122041717 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068521184 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103718865 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085605361 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116106078 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08536971 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131864041 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069587185 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113330041 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074244515 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116660136 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099304803 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069766527 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155251346 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065981766 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083351816 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068929569 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066367322 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086101663 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069998753 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099482723 seconds)
  done (took 21.28659162 seconds)
done (took 38.265124207 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293807163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093116152 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093460227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077141429 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09398727 seconds)
  done (took 1.441471952 seconds)
done (took 2.206803602 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122289978 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118142508 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065201442 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113908348 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065558316 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118288933 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115936667 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082832211 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116761877 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065336724 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113140957 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066112022 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065422274 seconds)
  done (took 2.019773424 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085134523 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087388163 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087563345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083500317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081084417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084918953 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082434421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106871221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082732383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090118628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065889261 seconds)
  done (took 1.698443099 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084979511 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086006886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08731333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083537538 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08046804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08384274 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083080345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104506047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082853196 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090998506 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066908578 seconds)
  done (took 1.695608418 seconds)
done (took 6.168694042 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08102224 seconds)
  done (took 0.835156938 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.701264774 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.499085076 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085847419 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135916655 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223398305 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154712291 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440124752 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112157084 seconds)
  done (took 10.290787704 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091735857 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086597028 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086063295 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087768772 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073720686 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088717543 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07505276 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073312032 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08877903 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070987202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086563342 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071543312 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088288674 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071511084 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074133099 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088647301 seconds)
  done (took 2.127128715 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096422871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094064012 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092834195 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078605227 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092163468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075110704 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093763845 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077052038 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088610665 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074288024 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093377107 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077059845 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089447185 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067523687 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09278879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078671911 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089322196 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077707587 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093473852 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078015569 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09287407 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067928479 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089588184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07742643 seconds)
  done (took 2.892839149 seconds)
done (took 16.907517418 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133271861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077360404 seconds)
  done (took 0.972921828 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083732566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099876195 seconds)
  done (took 0.954335132 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085165259 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082897266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092590069 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094855565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068381407 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083573871 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104187841 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068739469 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068894918 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083762593 seconds)
  done (took 1.603209948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070691303 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095209411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07305279 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09886925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075835908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081828693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075507529 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085216333 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080758689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080146716 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073776743 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101310312 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073954301 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102196824 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076371909 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086613019 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089080176 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069368436 seconds)
  done (took 2.263688413 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068295702 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06947221 seconds)
  done (took 0.910920451 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069298359 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066138786 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083192393 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069005673 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08070952 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064873149 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081210619 seconds)
  done (took 1.287974829 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40163059 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110789002 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.245223338 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.090831352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105242765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263655952 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084741622 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073267479 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089906908 seconds)
  done (took 2.275768607 seconds)
done (took 11.039080783 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0809642 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088946983 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112178725 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.425355836 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107805759 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068931643 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143947385 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212289483 seconds)
done (took 2.01610227 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126895957 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.622677005 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406681611 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214408574 seconds)
  done (took 2.020998378 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384184616 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094263918 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075930342 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068887666 seconds)
  done (took 1.403079009 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067960386 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072298115 seconds)
  done (took 0.918253773 seconds)
done (took 5.249550421 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068398999 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.104865465 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068479245 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066912007 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085324847 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066567785 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065640932 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085321623 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067957516 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067820246 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.083425949 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068159167 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081631214 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066254398 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069049229 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08328796 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066469019 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066304484 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08150927 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068401749 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066055441 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081372321 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066415895 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066340278 seconds)
  done (took 2.574449855 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08809273 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084727239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074002217 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089528894 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073529219 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08953612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074122446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069323409 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088912016 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071734282 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087093424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072611909 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085757624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073689623 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086559527 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073732846 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089476 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07248002 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070904797 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088008457 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074695408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084136724 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072652026 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089444452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072952604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087995266 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071411326 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084903595 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074787221 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08785381 seconds)
  done (took 3.186064907 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073012249 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066361307 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082780137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073149366 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066081366 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083404219 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066770448 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083465368 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067251501 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066629418 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083385243 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066461467 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066533785 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082705101 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067599716 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085282782 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083116835 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066788132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081389381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067158201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069149328 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082140857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066543287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082134581 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066005784 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066322783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082718238 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066303285 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06777276 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08270717 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069559587 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06927998 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081831097 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07318329 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085392847 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06542843 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070486524 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081610444 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066974494 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066427823 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081371734 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066203534 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06562342 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087794337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066755638 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084597291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066510882 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067020002 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082628362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069682688 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081989954 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066175346 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068813718 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083231119 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070587582 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066043816 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083321773 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066231906 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08304703 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06594053 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06646944 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081443643 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068932624 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066907765 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096767557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073135967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081931314 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067911778 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06778402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084954922 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068343491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079887733 seconds)
  done (took 6.102904618 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119366183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09364615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084253724 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068582786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081385605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066963066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070427721 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0820874 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068629279 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088459693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066773279 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067676095 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083564383 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079503061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083007567 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06902514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088767713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066220277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066702659 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085832763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066745843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086160557 seconds)
  done (took 2.526254458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18887193 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089904024 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111889126 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092441937 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071256268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093850593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072481664 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087969202 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072542438 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087773385 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070674205 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088471189 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07082439 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086243895 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071513117 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086602544 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073385782 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08760976 seconds)
  done (took 2.394179201 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080466614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068524279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107431388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068052327 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085515783 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07126453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089856112 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07777124 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0869119 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068835367 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09365123 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072638294 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086916149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069801598 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071210387 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084438338 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071418463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085127215 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078054925 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089789388 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074589446 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09329946 seconds)
  done (took 2.565569235 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083582236 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070191314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103178001 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087234871 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064782726 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06795818 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091379646 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069156753 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090325006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070727486 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069126756 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082827822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07346128 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08464098 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074244976 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084472878 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071348092 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069148879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0859602 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065123652 seconds)
  done (took 2.350732007 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089435418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085914193 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070304815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093838416 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070496736 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086132395 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07808569 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086119518 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070202694 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110597572 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070316664 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085976495 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078751615 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090745227 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070048898 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094124311 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078377574 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094254924 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070653091 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085777142 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.21978508 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069925324 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09464405 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069968144 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069052083 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086987004 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069830395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091154322 seconds)
  done (took 3.228027381 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068790189 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069660241 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082387446 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066104355 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066932172 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082973349 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06656114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066416986 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08507888 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06648228 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068435704 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084848215 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06898275 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084984953 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069394668 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068838051 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085301981 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066569 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067285045 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082924076 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069484793 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068754834 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084956142 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066699952 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082001767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068967415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067006579 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082273305 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068463334 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065931644 seconds)
  done (took 2.989277859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078625372 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092506062 seconds)
  done (took 0.969758972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066340999 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083182984 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082464581 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072740525 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089052508 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069555754 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093159707 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072833917 seconds)
  done (took 1.426064518 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084201052 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.09611607 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070300896 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080419003 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096151431 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085189131 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157097229 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086473475 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075731681 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083549675 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08287075 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067966763 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091005558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06910314 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090713761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075248044 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067211542 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090813273 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071769737 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084308618 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070718281 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096207135 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071146694 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065523215 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086683826 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077283959 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096707638 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070896979 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088395494 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07647332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08989361 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063213153 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069905456 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085994661 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067329254 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095425515 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083603438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087962494 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077910663 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070652121 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095812379 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064619764 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090264517 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075331486 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095104393 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070404311 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070162682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081929073 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067026209 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087686978 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064848825 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069892327 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080747074 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076768414 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088582534 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080040819 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068339764 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087213903 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071917885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088494179 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075515714 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087287295 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071951939 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069385842 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095810218 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073568662 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094499193 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065303055 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063358457 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083361811 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078548611 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107013684 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075971641 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086541273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071049282 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083192945 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071936183 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070638389 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090869631 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076307806 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085594779 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075378127 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092338015 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068760952 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071076909 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093830205 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067305816 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087697269 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067561733 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101404698 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067887173 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066745048 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082935809 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078708096 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088448962 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069784053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066201845 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091937278 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064149035 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085425576 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070646581 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085456228 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079423383 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090907889 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074750346 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093420187 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077215334 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068285853 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088532086 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06593069 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086780348 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067591554 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075377709 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079966297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072496886 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085921277 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.07045855 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076756836 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084091664 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070036136 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092715439 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074192688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084303766 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065485811 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071956793 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085273298 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072964833 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093188631 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068363917 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064565232 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08072512 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072701536 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086485584 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0716108 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090489323 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07110565 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063946222 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084216507 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074031612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093617101 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069790856 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069497251 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091238564 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069703065 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084909882 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074985037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087569692 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067716396 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07407363 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086092162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064690178 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089315668 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07121789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068249453 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088533519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072830916 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087672711 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070021231 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068155643 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091096506 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070621704 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083862709 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069187349 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067313605 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095849208 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0707863 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080743703 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06723586 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092873718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066460006 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069039684 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084520186 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071474778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086771926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068098756 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069537179 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087139413 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080152987 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090848694 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070224049 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09094532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080184874 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085607396 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070961607 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069291743 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087460913 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069797127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094227118 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073841887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090104332 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071709594 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065850316 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091380395 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076794701 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084544571 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067585118 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067270828 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089322948 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074583166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089088648 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07030141 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083873431 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069733522 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07224856 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088100734 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06971644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084343817 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073654235 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068347391 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09316119 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07025616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095075673 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072709973 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0807001 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072744757 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083842803 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074691184 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065554883 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08368045 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068419179 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086443589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068356572 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071784605 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07996831 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075857105 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093231717 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069263423 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068052776 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085270774 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075881103 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086731662 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072502249 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071989944 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091757899 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078471601 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084484793 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072104714 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095873464 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069777155 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063338586 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090517931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068502514 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085498544 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068798915 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067422322 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088351452 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07820092 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092413953 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064666104 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08799012 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067611246 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068149998 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081474051 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073658013 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071754777 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086225279 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076038383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086146075 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070612558 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089222857 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069825559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070164696 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087179824 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072655687 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086623687 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071541688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068461069 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089049527 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068325618 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084092558 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071358665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069416521 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086380212 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074707728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086398172 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069590634 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070740058 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087128823 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070280657 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086427675 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069250521 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072101184 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086167033 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069885051 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088131425 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065285808 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075518223 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086403288 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076623285 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086539932 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066739865 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090990011 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071912962 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073764576 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086596165 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070355399 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087486979 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069652637 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071439252 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092228582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067401476 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096461392 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076979711 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086309458 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072044222 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068722327 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08789591 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068373983 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086898433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070017645 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069286844 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08594706 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074513418 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08832168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06968951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070418012 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087530234 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069262068 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087747864 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064173326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067747193 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084715816 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069862586 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096078491 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070291163 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085542635 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069056907 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071422424 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085680901 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066392033 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094541036 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078568617 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087420763 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076141188 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067764601 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088105886 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080003749 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083846527 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068865659 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067261093 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083319844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076308176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087638137 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078821607 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068559571 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085143586 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067006118 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086997818 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068004626 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06399351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084049836 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072967601 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084979887 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068791985 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069613489 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089683311 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070650737 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095706961 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069178748 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086176062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069184103 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066602242 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084500735 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068443021 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07110319 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086841919 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067208279 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083216443 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069562539 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069472564 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086942524 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069564176 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08737502 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076181262 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06886831 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088958974 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072371413 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081009919 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071884289 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068798238 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086304705 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068057251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089721902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073125218 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086468699 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077218754 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069006405 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086444568 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069522541 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084229154 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069998166 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069055151 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086827274 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068946157 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087595649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078173405 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066801444 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089066599 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069452223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086789428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076414973 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070575564 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089915455 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076765555 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086934449 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070848211 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094452963 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074014467 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089759637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071307084 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069973413 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092391937 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068826129 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092795004 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069728981 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070686422 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087983189 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067458857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085862166 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069723922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068202677 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091341824 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070352247 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085232079 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068131597 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067397826 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08698295 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072524581 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093741581 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071241336 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071796406 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082155953 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06738147 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088822869 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067934552 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070747184 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088568 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074511554 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088466244 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070296353 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067489838 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095605033 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075061471 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089733125 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067266001 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089365885 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070811913 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07112774 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086708093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070168408 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088093126 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072771885 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070434147 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085618169 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075855512 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089180243 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070595881 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07042021 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087971023 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069199312 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081907032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071488208 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071020261 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091566309 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071752635 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086785307 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079470023 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084384393 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070371737 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073719686 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086931346 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073707516 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081978653 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070975459 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070463289 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088010533 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065326139 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086275218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067806781 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071155654 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086109602 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065025744 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09683923 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078739594 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089922615 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068698489 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067974615 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08254932 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065503137 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068596369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088059085 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071380394 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096025259 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068949616 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084897264 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064321172 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06984558 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089386248 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072922849 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066481181 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082731828 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068405631 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089722858 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074430396 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06793337 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086655102 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072518202 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088460347 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067759554 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090164274 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066702526 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072929329 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099480272 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070843335 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086519482 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074785441 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0944478 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070806752 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064524007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087386497 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071867232 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086670476 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070907777 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070199424 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101550236 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071686644 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085625578 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067910488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089200246 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068852444 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076343885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087923932 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070142902 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090742482 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071416248 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095369313 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071984823 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093423042 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071955763 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071689835 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0862392 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070081115 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084701962 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068696322 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07062888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087716195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07463268 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094932346 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068899467 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096969339 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078556485 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070947636 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0840404 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068989287 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085655873 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065473407 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070673306 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086046278 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068281966 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084886702 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068982443 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070162445 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091626121 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071001052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08755752 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069423583 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063439791 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088363027 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071805981 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069248503 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085190256 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070140052 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087759153 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073613297 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090767981 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067355104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070608176 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088341191 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069875124 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064667046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093545389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068513083 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088787021 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068275321 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069564903 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087609094 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072935317 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091804918 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070955062 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088718178 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078116853 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089150069 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067242042 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066511869 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092117504 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067646806 seconds)
  done (took 47.452820632 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110630121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084060334 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064771482 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082513634 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078512193 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084236202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065530929 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065667048 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083208926 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068322648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082801369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064883465 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091969192 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088782389 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094958743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069045452 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082623223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066589504 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083092729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066870362 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091991771 seconds)
  done (took 2.517789459 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078138288 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092188526 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077332163 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096750134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07207969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092474755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076784048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092231845 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09652754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07008511 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097117575 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07375523 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087783826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070652965 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088002979 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074706748 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097029034 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070750525 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09092253 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076290487 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091729831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076986664 seconds)
  done (took 2.683399526 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069226016 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068838316 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087923185 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064817342 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068435722 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081672467 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07315362 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.092648119 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072546932 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067479374 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084749843 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067960986 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087493205 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067305895 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06810745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084352634 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134269273 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072351927 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068440949 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088028028 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064758931 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088754991 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065025146 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064616245 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085189198 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073434061 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086999901 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067084006 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068986989 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085178723 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069289658 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066037418 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087605618 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069815375 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085245691 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06773345 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068462835 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086326078 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06593522 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084797105 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069589672 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065442006 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08767405 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069380784 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066530814 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084778656 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070453663 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086407415 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064765908 seconds)
  done (took 4.585279878 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08764885 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131177371 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089648835 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092456765 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104488046 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094921367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072889328 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112414449 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066840049 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086535452 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085319262 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103607188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088423746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073982436 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093888037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068915731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069195235 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085780858 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072884794 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086661432 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072185897 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0937411 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102088144 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082902705 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090622757 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068623215 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086517638 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073975682 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100102667 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074764335 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091666277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074447135 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102640102 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070282343 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086921664 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071395219 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103417594 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068573601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089094085 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066774705 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088822108 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073245831 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093405191 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085595076 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087912754 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074425017 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08669174 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066839792 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100603769 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071872063 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095147508 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10201916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073653219 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068367919 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09141565 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101616417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070050521 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084884694 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072844926 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099229738 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067933171 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072293721 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101690887 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088683192 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076758091 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102069719 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075059506 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090828607 seconds)
  done (took 6.776089031 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078738962 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093745495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08397556 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103181593 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094718973 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077235113 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094468204 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077613123 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093019112 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081550187 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094137302 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115752854 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071675821 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096917114 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076085387 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094788667 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075823612 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09347868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075233557 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095108502 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09392235 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084573264 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094062186 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102151528 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10587812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088950375 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076343404 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093306296 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084636745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094701234 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104632027 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076225659 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092996957 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08364889 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106328717 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093692771 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068532364 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094582289 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076058116 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093545098 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07117079 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101883437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07475998 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089674389 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07629078 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093817421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102330496 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.088619972 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096181173 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098171111 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076174805 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102960563 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074632111 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09519019 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10295868 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109543703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102460407 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102279462 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075514847 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102294684 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101777362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09133438 seconds)
  done (took 6.460652938 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089802889 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095989648 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099055957 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064506486 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066801254 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091806216 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067628776 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084980116 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077172414 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095538638 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080336414 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090899442 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076183694 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099231379 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091348445 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076296145 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091069461 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073307377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095256375 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072926161 seconds)
  done (took 2.540213881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078377216 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104741691 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070742687 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074362978 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090940272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074112813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090097725 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072281794 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087912658 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072277384 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098230812 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079631456 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088067494 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075196879 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097092354 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075327109 seconds)
  done (took 2.190659494 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081310205 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097783478 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084457326 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088022178 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067534142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084422052 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069209657 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064577282 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084432521 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083909113 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088728849 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071890419 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087260978 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067683388 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065732526 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090821969 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066187845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085443089 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069058382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10224695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08043492 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086050044 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070629247 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070184038 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088964543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074459017 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088556853 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06661973 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086025365 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069835044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08765916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077122082 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084483481 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068422914 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067706071 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084938793 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069520427 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089027359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072196856 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068695667 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08693478 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069699077 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087665419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070312998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084243258 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070451764 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066443381 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093857088 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067561202 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087899321 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069663545 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090061676 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070664354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080246459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091997283 seconds)
  done (took 5.204868439 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083269461 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072208133 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084739836 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067268128 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09071328 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071690779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072216522 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090098891 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071054618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086009889 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071967544 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089905686 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071782283 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07246467 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089576319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072864603 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082741563 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071466283 seconds)
  done (took 2.278299399 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074734089 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068579747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094977354 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070651616 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087878207 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072227862 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064379779 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086818462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068085825 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087653493 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06952334 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070874754 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086153152 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071782421 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087613654 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069907796 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071842192 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086383669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070006772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082853838 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071682255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067826654 seconds)
  done (took 2.550052413 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074464762 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095347846 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164897787 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10836116 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084613294 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101448359 seconds)
  done (took 1.498753663 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093534033 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100912637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070630129 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109835527 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077894537 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089749409 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071624114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089232977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080045316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102971678 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071243771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098407494 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097979599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083165425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095411334 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076295225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089924265 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071129983 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088885946 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107003155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072214967 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097885606 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071137203 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089098117 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072353884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097315003 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080339394 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104430495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08861123 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079516894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09504264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071419911 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098009172 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103419362 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072739075 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098755015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072011283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107756386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075910358 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098984797 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071371387 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096018958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098347796 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076793926 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098626381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071142848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094850965 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071186811 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090108856 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114680499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077293991 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097850036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095211479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080044299 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097711356 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115464003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085184845 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09852797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094696434 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085009371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098348361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076513978 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098229688 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103849168 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077199816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098661597 seconds)
  done (took 6.746515944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085075209 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107285483 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072039119 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104614811 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098389696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071451124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08970063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071602923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090353835 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070959533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129802553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072050516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099961389 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097645966 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072434866 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090076066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072070381 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097907843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070992719 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114881285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088951567 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080109844 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098107972 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098543509 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08492471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096176695 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07100905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090334262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071788019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089642358 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076924056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090465575 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098778441 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071231393 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098208183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071888798 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09001817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076665343 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090134776 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077588619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098755841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10763182 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072270046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090759199 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084835981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089903212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071557444 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089386923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071271641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089358623 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085276553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103946524 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10374966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098889965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072259435 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089985182 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071803597 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090243286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072452668 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095828796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078938668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089186253 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115461323 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071720723 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090065489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080176348 seconds)
  done (took 6.639906551 seconds)
done (took 131.217951743 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209805033 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.194590113 seconds)
  done (took 1.274303408 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07072422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097887528 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100301191 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131160323 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088553131 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102981354 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120297158 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081213025 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068629494 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088102753 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069565484 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090083388 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134235574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068888746 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088016771 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071152095 seconds)
  done (took 2.352125483 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104948553 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198475546 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111123911 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068360487 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101770945 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080743486 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086986762 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079977296 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093229258 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068128161 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080052781 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09797402 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067167061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097337436 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074256959 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099700013 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067308786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100024415 seconds)
  done (took 2.55954562 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107449395 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151648309 seconds)
  done (took 1.138277221 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208234353 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124186075 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202888049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.420816827 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20759902 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279046913 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175053002 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173706895 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.151162484 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170260742 seconds)
  done (took 2.991049309 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101668126 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172730929 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314440563 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139692775 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090155856 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117673848 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140560886 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111137083 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084671092 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102667326 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083850356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099649412 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119322128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077781119 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096667299 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080835255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122807957 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076620312 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099007843 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077929736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1198199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068965438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09694081 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077319037 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099829573 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081809966 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067997765 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088103485 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077927368 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096977801 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081924383 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114874313 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09960066 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13321955 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08494572 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152927779 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080607193 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093550792 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078232368 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074976168 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099235371 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098552983 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087089753 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097982694 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069490749 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079334796 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08785202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069171158 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100905581 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080563879 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101097769 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081201835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151896203 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.080335777 seconds)
  done (took 6.343721142 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.747130314 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112726723 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095981849 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.810347514 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0919811 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107228345 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.716234997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118990281 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212902026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.767450324 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091876313 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100056904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18338577 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216212024 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.901400825 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285785066 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63853547 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106032056 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110367932 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133997057 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142219555 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177080595 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150726388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.411404452 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077471839 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094357804 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140340358 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077292382 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162542331 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087112331 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095275202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156488798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22639647 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.158794336 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098663423 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072403098 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09247409 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150112375 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219911273 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193201247 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161058036 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070344696 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092499416 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143901289 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131348002 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070467781 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141456093 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.153824043 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171345663 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075954208 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097619006 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143983692 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141729944 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.144219406 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103392893 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.26391505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290853739 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092292403 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102147172 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105783468 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214859838 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105212614 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200863312 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139991536 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169711455 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092684364 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734339305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148872533 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093206543 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077129789 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12132268 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097448059 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142168378 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146304436 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.364702982 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167040662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075171731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091863446 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187043655 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084778114 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09316013 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142820979 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076695188 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124495697 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167053598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149065571 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149503985 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210161732 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144758528 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162537124 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076160815 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127033474 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076641522 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215342261 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.175760872 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142811731 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212503744 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143066209 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.143987244 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150002088 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09858803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152772709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123005604 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082058331 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141769504 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193495937 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125070373 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084520598 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096248275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142663164 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128329818 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0867712 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163401399 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.15104567 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.434342479 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148618677 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090922686 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08856428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141584139 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163783991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077381536 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238494077 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103697993 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170618454 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123915239 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070872354 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121670734 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.142994491 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079071391 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125971103 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161972137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079114248 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216157222 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.193838403 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079142899 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219459163 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163594252 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077859923 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151688954 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122146111 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149113881 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100289706 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141425986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076216507 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747207771 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146845023 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124972639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095758724 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147626045 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093142017 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084986029 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106591228 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070185703 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776665556 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086728173 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104226508 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105766255 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078456658 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124779729 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13945691 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095329477 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141897683 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183231706 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099401213 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120836708 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084913263 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161945499 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079093094 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106241322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086771025 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106590129 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125171958 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076043882 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106900842 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150481629 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143921977 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.195171922 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552523539 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071473785 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107783903 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203263945 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073297864 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265699644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140022233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199718325 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144297832 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082150974 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292354525 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.145965765 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.16779444 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108826493 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154305381 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071084531 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13925316 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143534119 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094056306 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076712016 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141711003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167943894 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146314578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934686887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073736589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207290093 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069353743 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172286397 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079314566 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098207125 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24157547 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093992357 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150194142 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.144987874 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096117793 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086187819 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.825398481 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106707745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142062704 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097430205 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176718548 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165717614 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139360994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141982915 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076884561 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141491949 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.2117886 seconds)
  done (took 40.951569534 seconds)
done (took 58.489900376 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262092784 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181393154 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243209743 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147848179 seconds)
  done (took 1.81220018 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146979346 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106534867 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120013075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087862437 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105668939 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087909856 seconds)
  done (took 1.557971937 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409498302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269479897 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234681337 seconds)
  done (took 1.818367956 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264898395 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216366857 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454875051 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.301380646 seconds)
  done (took 2.269536803 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179002544 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116717064 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070051674 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109015732 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163080519 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.256829517 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130540519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190050519 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082869595 seconds)
  done (took 2.248669188 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20071137 seconds)
done (took 10.816084263 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.313765197 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.148085845 seconds)
    (3/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.199707624 seconds)
    (4/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118630854 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.174243976 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075538129 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100714778 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.279557638 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082362728 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.103164907 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109809182 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12753085 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106050075 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080804613 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16334641 seconds)
    (16/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085196338 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101314136 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.284126238 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.226152141 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077219899 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.295851264 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.282569182 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107736605 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140398038 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130574929 seconds)
    (26/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.26968378 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121780213 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.283194016 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077140438 seconds)
    (30/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153296457 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220044523 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.178957235 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05587012 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.183876494 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091355764 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138524719 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.142757677 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.274193622 seconds)
    (39/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.23118533 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.263031752 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097637567 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080983489 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068029581 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092274069 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081629705 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.16875282 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0904195 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091329041 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099098499 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075574522 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129349774 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.259097617 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12281037 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.174502611 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074458767 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.26669862 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 0.151888009 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098419424 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07573598 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116109856 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076242875 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.158649354 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10075572 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077632867 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074477978 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198076011 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.221349553 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054307713 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092765154 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07153539 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069406367 seconds)
    (72/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10476439 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074197211 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089009512 seconds)
    (75/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069902055 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150537691 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10337099 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098971534 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10123037 seconds)
    (80/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.124202405 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07891413 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114021662 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078045729 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098429304 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152137543 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064795862 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.158405006 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.264681842 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.164566309 seconds)
    (90/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083791727 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117947743 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.070533728 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096063379 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080464524 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159493637 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081821451 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.240313442 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069014424 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054146992 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252405673 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09589474 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117601122 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097679211 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070804628 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073454584 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077480773 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076973471 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053813396 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141727945 seconds)
    (110/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.175170787 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.217238861 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077960495 seconds)
    (113/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.261095955 seconds)
    (114/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072083096 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.055299195 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.243838108 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076666099 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101691685 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177858771 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08532015 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05436178 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171123685 seconds)
    (123/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077569684 seconds)
    (124/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092690928 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097968112 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075571532 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180761115 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.160145058 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099312833 seconds)
    (130/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.244432359 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095513055 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123746388 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096546237 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054070152 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097937875 seconds)
    (136/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072525233 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116169695 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094835977 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13903866 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073020145 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.260869405 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055266248 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165982131 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076157561 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077188934 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069328812 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076709173 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099767405 seconds)
    (149/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064975262 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097769206 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069578671 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09958699 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091488223 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13887851 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077753197 seconds)
    (156/309) benchmarking ("sort", Float32, false)...
    done (took 0.131296035 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092382467 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068795123 seconds)
    (159/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109711198 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054668621 seconds)
    (161/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065085836 seconds)
    (162/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094208127 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135652509 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106959693 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091284982 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053846227 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.17104631 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112058848 seconds)
    (169/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073404712 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068630736 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091226662 seconds)
    (172/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06858884 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054031528 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117446432 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076111434 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.183254689 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083633425 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194055125 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097247426 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077506914 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.242502638 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072758164 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100613037 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054848663 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068516385 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.33837082 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094352844 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075771787 seconds)
    (189/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055377646 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056058434 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07991173 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106312803 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168179483 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067935212 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070542304 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.180832299 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053808154 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076821026 seconds)
    (199/309) benchmarking ("sort", Int8, false)...
    done (took 0.167406158 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080301468 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101145732 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077013981 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08016664 seconds)
    (204/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137540121 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055963644 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055192586 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.077147834 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068589188 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.240935453 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056143461 seconds)
    (211/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055411528 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116122034 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076229599 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09954433 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054322731 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054223825 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077093473 seconds)
    (218/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108920703 seconds)
    (219/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213534214 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054932786 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077589644 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074704218 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115842396 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079791982 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089932944 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068297159 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069622975 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165235437 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068157424 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09039637 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202005464 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070972442 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068119938 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166465776 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09293043 seconds)
    (236/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.077036108 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074122197 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.129450862 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076401641 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089875448 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090126919 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054083317 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068849101 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078629051 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111115888 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079013929 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106284546 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064022215 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085824151 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07628726 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101521921 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068327819 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068439857 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098027853 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068391286 seconds)
    (256/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054259389 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076985572 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093779408 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113522834 seconds)
    (260/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055352564 seconds)
    (261/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076214247 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09672802 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077517007 seconds)
    (264/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075291051 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.134397553 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054530937 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053536859 seconds)
    (268/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077023478 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068308141 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055235789 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099168276 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054728032 seconds)
    (273/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074997667 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.245033395 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055380664 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092058294 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069081189 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.0544043 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078809649 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056711616 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074225874 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093852644 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192014635 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093446526 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127808515 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115516562 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091226528 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06949426 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139884658 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07703041 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115014632 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067656245 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053843442 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091930261 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065866973 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195515709 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054230304 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076568347 seconds)
    (299/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093542181 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074480439 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160048322 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076235108 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056146144 seconds)
    (304/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.086850582 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075372587 seconds)
    (306/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074320192 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092530787 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069235834 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064906946 seconds)
  done (took 35.626914307 seconds)
done (took 36.544703909 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084588976 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117208538 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078332293 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118730395 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083749879 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102944038 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075714376 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08168384 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105734361 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085085402 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10411165 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057554846 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099782129 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078783138 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099904353 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095391706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104116583 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075422464 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076010501 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08988592 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076626645 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090687548 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070757784 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057683646 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102578002 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075613591 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075701931 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099568079 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068769758 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090288334 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072014214 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075667584 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089818389 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081796025 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096708822 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076751 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078423892 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100746734 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071310884 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089953189 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07573156 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068422057 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097123531 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076365218 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074125389 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095986577 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076787378 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103923621 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094867575 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092955995 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076420808 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101933694 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079837943 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075985811 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095155954 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076800114 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095945357 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094728025 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099822918 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071180711 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076201677 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099483706 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074794626 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07665734 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099861299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077905336 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102042952 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074914309 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101204281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074899686 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069263266 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099027857 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07244237 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068476705 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101157974 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079850381 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090866712 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074839167 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075347489 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096915401 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069223311 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070239002 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092483775 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075743104 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092086608 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057787766 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072735656 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09677757 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068459365 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077191969 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09729073 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075476985 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070222663 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102860191 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069291261 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095865438 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068389722 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068548899 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092544182 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073029724 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068312858 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093412663 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078425348 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092212341 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074771314 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082332268 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090622652 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074757339 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067806674 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090707707 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084667961 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100317213 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068775115 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092450009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068709179 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076785219 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090773615 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068865586 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068707491 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090902157 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075029359 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068684775 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092993816 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07640916 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104870847 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070836695 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07258014 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092923918 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06833387 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074523293 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091184384 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068923923 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07082301 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087954441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071120796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090080013 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076164043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070862792 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098959609 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070936432 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077421511 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095987559 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075313611 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096318175 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068801974 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061555128 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092681561 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070394771 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070694218 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090881967 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07110786 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068270927 seconds)
done (took 13.585797054 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068909573 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171082207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128816077 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09884273 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112053289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069513749 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104440165 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106620109 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092994437 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129685213 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090105537 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110665447 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116691168 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091004966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068772931 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073218906 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093405332 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091543174 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127198484 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111461025 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119340855 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090220263 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12237724 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092685011 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113981446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105891644 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091908306 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073141853 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071593206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117989592 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111911407 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071916345 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069058377 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125525519 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120671091 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088214972 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091078696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087274596 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090878345 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069180811 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116549078 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103067832 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107291257 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085096382 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095123999 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072439739 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093218857 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089200643 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115914754 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083199016 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112971093 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136361139 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072719162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107441795 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068234076 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113126814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107512378 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071448018 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069362416 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093927171 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068773304 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072460277 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113791034 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118361447 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072405809 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108037685 seconds)
  done (took 7.41797296 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087085738 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119465464 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086675198 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068820758 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069339324 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091975145 seconds)
  done (took 1.608534335 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069370496 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092458028 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115218005 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092103961 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111959642 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089926689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102663786 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07002456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110311574 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070910262 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091081218 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130579909 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093989746 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075998472 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093867506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092479169 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093836143 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092120914 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072975711 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11632256 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072834558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11312424 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071648542 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070445535 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10670889 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069239851 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140983588 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075004992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093492755 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073228843 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068519752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142430575 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107476046 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080510389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069860445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107472288 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085156038 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091200517 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086541043 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098217337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08412172 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070900007 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094502014 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068614072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07443544 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102937116 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071765856 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093891325 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072795653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090873228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09311952 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084608228 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092922987 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07479371 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071005922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098512263 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080110322 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093585272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090265108 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071820238 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10993614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086195487 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107745508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086331182 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095849327 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083857969 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108504151 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073184257 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071693878 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097047749 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08648623 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090793589 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071049163 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080626422 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094768416 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093837016 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116844506 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071787302 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102942245 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069858167 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070726087 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093202807 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092928692 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096541102 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07062526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074232002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096440139 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06804905 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069043765 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096389287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069226043 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070666734 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096413548 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071118984 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095722619 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086352232 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070191058 seconds)
  done (took 9.543662951 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071267131 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070844453 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094596587 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070771679 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071111336 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093787001 seconds)
  done (took 1.461885489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101327055 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095507815 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084277888 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098787191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10894281 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108471609 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085585337 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108726296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088336538 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105144225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08530854 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108016068 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091252222 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099566556 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085103505 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098639197 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086496754 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102323813 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081880017 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099987987 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090514002 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099574686 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076354978 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086310098 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097453093 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075892869 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10384542 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082776701 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105085797 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085476683 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099899224 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074218438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09787251 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086230515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108170405 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075236162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098730314 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075112046 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103305772 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074492825 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109593614 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077319593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080918344 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097770812 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108501898 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074365397 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075088865 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103658003 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085348817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098142518 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074890679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09895399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07381652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098041065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074786223 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108327333 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074571513 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109102588 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076548667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074865151 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096379733 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074488242 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108518344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074592203 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106888899 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074911782 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097954207 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077472749 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099898503 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076083974 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074832122 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09616107 seconds)
  done (took 7.539560068 seconds)
done (took 28.548139072 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651158974 seconds)
  done (took 1.635970932 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.791374658 seconds)
  done (took 1.77846216 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.792174734 seconds)
  done (took 15.785259093 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.61682674 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.763193107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.820697874 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136849314 seconds)
  done (took 3.323916407 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.886949945 seconds)
  done (took 1.899507102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238706922 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228169517 seconds)
  done (took 1.46044724 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.743571913 seconds)
  done (took 1.746819271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.319839951 seconds)
  done (took 2.319310821 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326664953 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186489131 seconds)
  done (took 1.516144707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.531348119 seconds)
  done (took 1.534942521 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.645566521 seconds)
  done (took 7.6542377 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233739465 seconds)
  done (took 1.251160957 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272888704 seconds)
  done (took 1.278427582 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.125384576 seconds)
  done (took 4.132594357 seconds)
done (took 48.311276717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080130145 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084779297 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106973167 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0814375 seconds)
  done (took 1.3529969 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080449665 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076383958 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103421396 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075857449 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10400127 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076281621 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102546658 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080073151 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075198548 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100263152 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076427055 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098864204 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078459976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101784493 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073253129 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078566685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102897041 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076401671 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103494774 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07662491 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074024946 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101295519 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079317466 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098027019 seconds)
  done (took 3.105487386 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080404899 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076322848 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100477781 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075801321 seconds)
  done (took 1.341254141 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079396221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118898935 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091918278 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080531705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119471598 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114490732 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073703332 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073320192 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098321742 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080880975 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094900975 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101835287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115064221 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080418404 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106453238 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069461402 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071999596 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114431189 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080797846 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104208786 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073848831 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079900938 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094147878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094052729 seconds)
  done (took 3.225691973 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079707081 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10683947 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105606634 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092621151 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118958662 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068971745 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102727109 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095449134 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153785166 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068919076 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098357517 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069422906 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100401196 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068462817 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080448364 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136713693 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116736533 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.096116128 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100520152 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092878583 seconds)
  done (took 2.96982615 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077370972 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072519038 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091899251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071200877 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07900353 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099873745 seconds)
  done (took 1.505710794 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07070963 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070229393 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093836554 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069213495 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07459955 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093598528 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068706771 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070347926 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093032214 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070558247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069486993 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09201608 seconds)
  done (took 1.950221565 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.435623747 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073690843 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.097770124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068367569 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074147074 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093539472 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083165006 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071426767 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117943381 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069331253 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093377759 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070941337 seconds)
  done (took 2.367872396 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265932164 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080195301 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328370993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171165286 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143529951 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158260557 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107146173 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142658795 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200578424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141905391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203517398 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227995622 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136746859 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172010859 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118277146 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.111366737 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2145244 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225284805 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109251805 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228151729 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209472063 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158905847 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184852096 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131328871 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137820405 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153593421 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075214367 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107996787 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236547163 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164553827 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205333418 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140872201 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10087136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234426871 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229376332 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199951223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165126751 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088199022 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159222164 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168330258 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259191139 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117006746 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198598535 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136797299 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108581545 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176128261 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149801565 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150162791 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140437953 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118926332 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177627187 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244095736 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168403921 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115547354 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140316591 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144910559 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147943881 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106465535 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245450147 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221397472 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162218806 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099413395 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102020094 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214254225 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16351387 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144826303 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156030361 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122867221 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172717374 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215331187 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14972491 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178380586 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18464118 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09239174 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149912998 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199223146 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160202689 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209759501 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181263562 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076375908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15586932 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133143563 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084882076 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173144618 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079719011 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235930628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127054364 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141896146 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14191616 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113925168 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138765346 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224287586 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205604633 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107733204 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093603234 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133221536 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152544189 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181326605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11728192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113578715 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176301474 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083063633 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170330026 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102724075 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156916635 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081917536 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179753206 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164741391 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079422973 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155730426 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130819247 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131764478 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168559435 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222112846 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094682562 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111153742 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204643374 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182396668 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110482265 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202999834 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193874937 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130476069 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132648269 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182968698 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268950016 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094275125 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22579798 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137977321 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087720604 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116563275 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158994372 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143237936 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153269998 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087377206 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180749078 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203368864 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103766148 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10021959 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19326054 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085064107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110616398 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142498366 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131825233 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098823569 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130203896 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136417459 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171287123 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157503491 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136204108 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155942346 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127792104 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228316063 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118037013 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108329873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132488073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097954934 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167272329 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195372311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108198948 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228976292 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158144019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134028617 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151404054 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086431933 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172004774 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106947579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074157145 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201076714 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141228225 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11566343 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212276287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133102286 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158367095 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154618024 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165309785 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163018618 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163381734 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135214757 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116223615 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142604729 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157768072 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101512915 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098611659 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111822376 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13402916 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100624985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111660079 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175609932 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183459524 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10173721 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142277915 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126846384 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183326737 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106488484 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163278028 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150202887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124386202 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189731759 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217362756 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168037709 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130097832 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179256885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099072084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077717339 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120006036 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159625567 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112331195 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086854471 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148398588 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207333863 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16059204 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16989947 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140552275 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153125038 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189714938 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099322543 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120706961 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207129852 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156628431 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157459987 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094060089 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127328315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17810577 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138613354 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24867414 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146835194 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155097361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210555026 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13351733 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083516063 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133287219 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170290746 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136871569 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210322243 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129540983 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092664149 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140640188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110140905 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133634274 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159687857 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152510312 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165983442 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147208811 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189980343 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080752543 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153890429 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15454181 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154276061 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092172097 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151569683 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198007317 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122954374 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14797841 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213298569 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083457727 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154602537 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240950583 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20265556 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088344904 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13964102 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152875052 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160765283 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149375041 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172092922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140479077 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193075011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115545483 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114196096 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117235532 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102530057 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136813432 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124567681 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142452565 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147491753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124036923 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163976235 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143385644 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140786685 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15036113 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10222291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121380053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128198072 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212777284 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15387492 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235619688 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130105629 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210414616 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204181623 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1041548 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083164781 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108920744 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173561551 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114316789 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166306261 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125169662 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109578222 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158570469 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202579426 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100289803 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097523458 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141554836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169353966 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141239972 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128057697 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110661284 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225453079 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133319101 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08272141 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156567397 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134394924 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132968853 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238822735 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065120026 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126837899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07929097 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109728976 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160979682 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191968828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11195065 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155694886 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151892347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1521386 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162800034 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133050913 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101491305 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143424481 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209284535 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16205525 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094331843 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142802314 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18781183 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192160066 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136463713 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126073412 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235889393 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190302104 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225224884 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118751439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148154432 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147547403 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116435488 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20082124 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113147087 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203936776 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11239833 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170197825 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135059168 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123350572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161797785 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.144486423 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092448032 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208597179 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152265976 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111925698 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083946243 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149696981 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154204589 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137794515 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104830972 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173250939 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075799763 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195564955 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206157861 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111576237 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136017523 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100547484 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111036367 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140876567 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135261234 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091523785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.146636655 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233083201 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121235696 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188155004 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201617071 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145874499 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171603878 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129874316 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667724975 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082756084 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217208649 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150297667 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242838526 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128525018 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151021746 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142474456 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156024114 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179076918 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136151899 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208136074 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165732921 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152575735 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108922929 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134930394 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143207029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095494951 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137673839 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146355349 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148175585 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131485588 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154008622 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159210252 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111389773 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099213418 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22058357 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149181777 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17676529 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200168281 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089352337 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150420107 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20096763 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084543985 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154168196 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217605669 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139372118 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128622075 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084598346 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137008724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234714177 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076076366 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225044588 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155452207 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140647117 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145768984 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150214921 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19200375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139582648 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15872795 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126239694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144077536 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147799746 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088153281 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107873147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136268593 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144174978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104064143 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133512545 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146195346 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189139943 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075093689 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125941085 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13403774 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178779078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241465869 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11908509 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086631182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150392494 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168130823 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147662055 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157776192 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.085442019 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113558323 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086121876 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140782465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139626215 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146666891 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107860958 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142463511 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231521342 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11518393 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230275913 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125329413 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140550626 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072974152 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108842238 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100046953 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128265398 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138691845 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127805655 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237947662 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10139489 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120664012 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123793336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077070658 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087394206 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18757318 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143305618 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153378476 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10246621 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091329636 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140242629 seconds)
  done (took 72.783760784 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14498885 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.121236862 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.132557409 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191931525 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163240948 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258170977 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201091018 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241741842 seconds)
  done (took 2.55040145 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073038533 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119719395 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105573256 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118604216 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091964406 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071494924 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.298778652 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112027895 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0695376 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11735597 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123064743 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093653586 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.471704839 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068201439 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096012981 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087933491 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070108121 seconds)
  done (took 3.280619635 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.435687285 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.63897123 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.455780292 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076486496 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.896544923 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.109838987 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.381720524 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166103857 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093941485 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.435252235 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727549178 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151081671 seconds)
  done (took 17.66848673 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078005912 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072147882 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112171406 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086734422 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101071964 seconds)
  done (took 1.551943505 seconds)
done (took 116.655256171 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083040767 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.352911274 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055618221 seconds)
  done (took 1.544179713 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086741432 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086936104 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113316408 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085932179 seconds)
  done (took 1.484546877 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07713111 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079749255 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113331719 seconds)
  done (took 1.378906013 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.284518592 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167151036 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091787782 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086068145 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081691634 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107272527 seconds)
  done (took 1.383103388 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075515228 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077999677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102150363 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07955415 seconds)
  done (took 1.437545356 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079136762 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054955766 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057421906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084263113 seconds)
  done (took 1.383184102 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092726665 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108774953 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084378752 seconds)
  done (took 1.394414929 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110104102 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116042656 seconds)
  done (took 1.337033782 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085683544 seconds)
  done (took 1.191972434 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094624112 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143814155 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.159680701 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140376167 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.169254515 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139405953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089059927 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117186752 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106903446 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092124798 seconds)
  done (took 2.364720587 seconds)
done (took 16.626601493 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080698401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396593114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363423001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12031931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671773645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358516378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045681669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121998696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123437265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097384856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086355517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678236352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971605629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352937998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959463953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327111638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679359785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070753481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06957134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09676452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00417467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096472197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070200989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071259347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678155453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374582437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096729337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32729958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070249562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098256468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357219235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096454909 seconds)
  done (took 16.11369558 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072497278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147029591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07656863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086723044 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099700788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071956761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10087053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071567652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155546398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070224157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114214048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071093645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100891606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071555976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090025587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097193691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071480925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071336035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096904998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070991332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115007585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070419823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071234606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096850318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07064502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109014424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071090324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070735011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096833028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073305869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099147488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071752041 seconds)
  done (took 3.935260589 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118611672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155383619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076675846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132266736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116418256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098859305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174456992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096429469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158724858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070655073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113781847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070981129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130120525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071349265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116566243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070706134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071979284 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097525994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070871805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097447176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089663148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070642668 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096334212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071338921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097007596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083847375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096932069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075213354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071336789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098864589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073945071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071717257 seconds)
  done (took 4.225468052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075226543 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078717074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112006705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08705446 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099283823 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075107711 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075626512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099874735 seconds)
  done (took 1.824041225 seconds)
done (took 27.210602297 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081034711 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072847919 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102257431 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084257674 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101954135 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081172821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0702861 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10438756 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079927911 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075998689 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105415098 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070405159 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100815305 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070668005 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077297253 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096805162 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082518285 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101000056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081829279 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08249215 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100470537 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080027552 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104299181 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082329031 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108515047 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082462435 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08609383 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10351153 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071542407 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099888837 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079623637 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087036015 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097913717 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081742961 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097927165 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071020283 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070884501 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097146431 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082433003 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103961258 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073391924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10419263 seconds)
  done (took 4.799859206 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090665492 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091749709 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115109583 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07309146 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100750483 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06554937 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119425118 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074014466 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.096445967 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091333749 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058461123 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.088915753 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07312275 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.064092307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.097695986 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05969571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061672203 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.086040143 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062402218 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061628446 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087910105 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056764736 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.063178115 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06618526 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08565124 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064285594 seconds)
  done (took 3.17593034 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077978895 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087130564 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117697512 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132578526 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136168827 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081526206 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107572065 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09120882 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117305754 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069808847 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074181595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.127905974 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090851314 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103878864 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07087037 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115066885 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085344923 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072018964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103696702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093982286 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113810311 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081939246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.124419718 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084393895 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06960098 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099925167 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074015464 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110683098 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075489843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080082366 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101670398 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073847815 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099846788 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081921218 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07471371 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09926345 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09290642 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106946509 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082108273 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070975193 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10101667 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071960416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118013918 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115038013 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097080091 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077849054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077907235 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107357336 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070411612 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116181401 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079746346 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069954388 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.10095726 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070187508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070086652 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111081838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072310774 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100337781 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079467073 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073882072 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.110872595 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074429194 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113773703 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07049822 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104786121 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069750498 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071358977 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.097336364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095941273 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071785026 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140586715 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071536573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099529717 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079320735 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105663916 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077257862 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070893932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113591039 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080770573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101383278 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078761931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074282445 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101570677 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092538767 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.100322078 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072969497 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071758948 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103798202 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073507837 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098474914 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083729509 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070803901 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.10077499 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087214688 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097763904 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072073448 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076392667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103271038 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070530974 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109597025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076685909 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071700472 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107376264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07066148 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101027324 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080810981 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074473712 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096557191 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074907315 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103716874 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071434905 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071965455 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101328192 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072567854 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080564663 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103361078 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07505117 seconds)
  done (took 11.663284262 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.196306229 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191172286 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073431155 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18303182 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078865296 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11043803 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185372059 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09909667 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099780623 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071310084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071057075 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.134426694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09883981 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.146501492 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107998973 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070843709 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11829258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.108057986 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187237853 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180967451 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119049411 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078924432 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072171082 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.100253364 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072771471 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108324843 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087808919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105343394 seconds)
  done (took 4.397708168 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084365478 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.141423567 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077267274 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09576866 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122745836 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071782465 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104220634 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072194752 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11199026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083200136 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099452921 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07659962 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077614357 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108069246 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071412871 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108646803 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080769309 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072677845 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10176928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076121733 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.111794716 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084239584 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103340784 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07038593 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077162186 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098407326 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067704832 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117194603 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070013569 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123581166 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069309653 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076803916 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.118038051 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071194527 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099318779 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073718936 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074495316 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102630263 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072521515 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070037632 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097084074 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060281941 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070114462 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.112282674 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077671968 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090493987 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076286713 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104595772 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076736432 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068717825 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101767592 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072909768 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07438276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1124546 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075414803 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105186571 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075245967 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069230329 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.107520205 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073828198 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066963305 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097978579 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076212021 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0979825 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079490833 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075495648 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097965353 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074350665 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076400899 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105204484 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074314823 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101935632 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069428158 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073184892 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.105188841 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075470897 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075454569 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097226016 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071081234 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071417838 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086216493 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070765716 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056666013 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102425999 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068821082 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.098551653 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073993066 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.079872557 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1130233 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072862176 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105648861 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072186297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06973585 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102118734 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066941911 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101735448 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089635427 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115623966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070605772 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069010132 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.116731846 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075924281 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098017205 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058939692 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077599319 seconds)
  done (took 10.208017196 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100046999 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095844013 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100500939 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087017264 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128627523 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096524369 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107402392 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076782594 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072888218 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115969349 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070701754 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107478465 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071980268 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080352933 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.128765344 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079060152 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101924815 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080156108 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074742267 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.140652325 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087064706 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113887271 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.085336445 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100433815 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075535305 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083412152 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128893371 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.083762755 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.11180438 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.089893139 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.085063812 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.127713296 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.090476311 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10401599 seconds)
  done (took 4.440091244 seconds)
done (took 39.800338697 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.236592959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.40901223 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193638657 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.06489914 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.223107243 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215209387 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222527122 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195220696 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.38391538 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195387595 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.471925667 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.856650558 seconds)
done (took 58.810948459 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.337533004 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336933922 seconds)
    (2/2) benchmarking "String"...
    done (took 1.467162265 seconds)
  done (took 3.952905449 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.559920321 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.196835416 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479271492 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195338704 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.208879484 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.622196021 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.779140951 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.009962164 seconds)
  done (took 27.630491418 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.197541347 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.558627239 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.653948564 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.648292021 seconds)
  done (took 18.19906852 seconds)
done (took 59.820894057 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.197449654 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279180133 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240130211 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180765112 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321153039 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228078395 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.348232982 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.293527486 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.206040911 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184596607 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.217934703 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207938492 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.221562124 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.359061616 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200540193 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198220287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.224903975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.78248003 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.579804707 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206624987 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.244298002 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.225446515 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.206577492 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197780308 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.208338154 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.197815927 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203805628 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219765438 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.425596783 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199149389 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.292061033 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.544546119 seconds)
  done (took 189.983861536 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196761202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.226046136 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.32440823 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23332843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.65985456 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.395789226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.329976328 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.724408506 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213970314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209814003 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.516648098 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198169479 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.581195868 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165272917 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206897441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.304982629 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.399322158 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.548064916 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210740398 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.461457363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218307113 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.416460261 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.327455713 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.449102875 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.212483409 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.236876812 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219184004 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.214295704 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.391979805 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.341186664 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.229579771 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244514211 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.78032445 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058968762 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.223888674 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.229425438 seconds)
  done (took 150.044618259 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.468903533 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199314108 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199641512 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1987117 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19951023 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228568808 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198587893 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.727755079 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720789042 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.740255719 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.530404779 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259985742 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447809542 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202122597 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290736324 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212439282 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200430636 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215238548 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224838035 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201929803 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201049611 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.719578712 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212351971 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.249351442 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206796703 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19988209 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229424721 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593725299 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199292612 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199876139 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229350032 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.51596971 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243873489 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200827078 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.512170123 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.583245083 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310268204 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201313324 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231151382 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200623512 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468295632 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20046513 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201232283 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204443152 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.787971058 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203326523 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.730959989 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20392704 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140882203 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203801307 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201747266 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.802476034 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.725867586 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203589319 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.201330119 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203305133 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200672106 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201666975 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231637389 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.829077283 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302090166 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202054242 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205489113 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231391487 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202146463 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.569801677 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204252914 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.297649207 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259962022 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419451858 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.725574131 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202305879 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294223108 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320927764 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203992719 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203125633 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203606634 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202997196 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201957555 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309049245 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202836267 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.607430115 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208548003 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.204893804 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261373108 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202980225 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295904895 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203583326 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508319434 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205821791 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202684368 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948171509 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297008083 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20328615 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203006837 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203278343 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.607049749 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730201995 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.386361883 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206111066 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.836978239 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207930178 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621114473 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.719134649 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.810864518 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206528211 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310875963 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208979631 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205667707 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.204883107 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233643809 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205641439 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262278027 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206798945 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600265994 seconds)
  done (took 346.228561951 seconds)
done (took 688.867478411 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.888893749 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.867648793 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.976654973 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866613704 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.846457346 seconds)
  done (took 10.595216671 seconds)
done (took 11.743347379 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384633109 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385738847 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263408752 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386771467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233704387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403031485 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364906283 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225156716 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303695918 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.279639446 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302989074 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252161145 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231154254 seconds)
  done (took 18.166049265 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518784878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510603818 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277121293 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515639001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246604445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515509805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401264605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407855095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396038694 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222038963 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222188313 seconds)
  done (took 16.383592155 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515849428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522562488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277368204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52611991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249235085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516941709 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404073121 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409650376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396269538 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222750679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220815073 seconds)
  done (took 16.411450702 seconds)
done (took 52.110555233 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.215430483 seconds)
  done (took 2.365298206 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24725611 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418412134 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229561519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219736595 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216227365 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217531987 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220230145 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214546618 seconds)
  done (took 11.135417793 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214218861 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213828614 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218004343 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214360762 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21773713 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214388088 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217892721 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218187007 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217416432 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215167012 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215900072 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215381012 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21790133 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215681169 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219187247 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216142702 seconds)
  done (took 20.612425738 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.217321268 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215412044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215901776 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216270922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21554495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215925047 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21665234 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215669906 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214585011 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215558511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21591608 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215966649 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216825457 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216546396 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216511241 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217028723 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215748284 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215670312 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221143661 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215383257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21733262 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.215943466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216878187 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21671295 seconds)
  done (took 30.347524684 seconds)
done (took 65.611108839 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.255428656 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.856989106 seconds)
  done (took 9.264902631 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218889706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219410534 seconds)
  done (took 3.593012242 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217984929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21908931 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219167163 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218988611 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219274555 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.218425174 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219236287 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218267697 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219565978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219567011 seconds)
  done (took 13.342805824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219943806 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.219690496 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216912205 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21949767 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219043774 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218159872 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220481238 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219997791 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220232082 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.217149403 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220855782 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217251472 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218945382 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217954496 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220087546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218545215 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218401675 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217411144 seconds)
  done (took 23.094284403 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22057495 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220439601 seconds)
  done (took 3.595335601 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218037283 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218145758 seconds)
    (3/7) benchmarking "month"...
    done (took 1.218158706 seconds)
    (4/7) benchmarking "year"...
    done (took 1.217744679 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.218411489 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.218802986 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218573458 seconds)
  done (took 9.682108795 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221923055 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388222343 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468445752 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800173165 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222398234 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.225153246 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105831774 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224889501 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227235943 seconds)
  done (took 14.038951524 seconds)
done (took 77.763752857 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.214702275 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.209412394 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.090836074 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22415274 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226286509 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553938089 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253617444 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.338571643 seconds)
done (took 37.266958141 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.227899951 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.913908978 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.952466968 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.227403596 seconds)
  done (took 11.248897305 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.197591246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.125546495 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203707384 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.202037608 seconds)
  done (took 17.884846266 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.822967001 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547800963 seconds)
  done (took 4.526400049 seconds)
done (took 41.043581056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222633808 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223023456 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222403997 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.220424989 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22295586 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.220088768 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220139076 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222929557 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222380953 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.223138406 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.223091319 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222658906 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219779783 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220137813 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222975959 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222742593 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220500683 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220921106 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220799674 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223502636 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220635735 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220984877 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221198393 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220731975 seconds)
  done (took 30.477975449 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224620189 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221701416 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223777649 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223814953 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222156338 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224213664 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223973604 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221043473 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223872557 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223668544 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221799045 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221907095 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224192826 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221241327 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223630382 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.222109768 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224676429 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221953742 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223625957 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221932757 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.22484163 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222150399 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221636002 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224244675 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221623708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221953761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224834407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223581406 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224995951 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221665489 seconds)
  done (took 37.849622249 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230258831 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232410686 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224975563 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225116942 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225670113 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225797006 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225037554 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224228633 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225188836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.225611266 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224724306 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225930531 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226653969 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225026063 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225526866 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225701904 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225865701 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226267352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225580734 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225772074 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225449484 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225487924 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226147453 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225858826 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225685074 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226039879 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226224112 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226329941 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226445955 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227031663 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226924329 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226115263 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226794274 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226979072 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226823865 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226892283 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.232100111 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234052944 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226682075 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226624633 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226899818 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227871664 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227676719 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227705449 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227027193 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226753787 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227494259 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22719043 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227654959 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228013318 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22728044 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227818456 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22729891 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227514311 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227712394 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227226842 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227730424 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.22734435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228162638 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227730993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227830561 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228463536 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228686046 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228417366 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228632016 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227528851 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227581496 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227954091 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227749932 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228208654 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228565349 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228126246 seconds)
  done (took 89.510545112 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227677982 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226728694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225560842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226010627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22588445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228381243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226282751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229608331 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225829824 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228587767 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228440559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225993631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22589696 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22945333 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229032969 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226699662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228468079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22826464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227872977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229152806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22864376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226510984 seconds)
  done (took 28.167545685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229622173 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229145925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226072478 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228195356 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226460255 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227737219 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229354895 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229028384 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228979501 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228250825 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226726731 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229238676 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226693633 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226095381 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22687966 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22688793 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230484672 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22664757 seconds)
  done (took 23.265805969 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227382942 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227168965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229329544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226736497 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227955751 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230811656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227997296 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229666169 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230037949 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227808042 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230419754 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230240398 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.2296368 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227740158 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231638103 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227541296 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.230415924 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227485435 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230254231 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227886747 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228144157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230883855 seconds)
  done (took 28.201580876 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231037577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231114625 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229010299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22935939 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229222274 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.230736718 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231106716 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228674717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229734755 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231026458 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228634496 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231164609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22829331 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230225805 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229736808 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228159707 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231240848 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229562957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231143942 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228487477 seconds)
  done (took 25.761746956 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230411486 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230076043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230842611 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231495507 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230558335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23027258 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231308146 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230620038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230959452 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232186002 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231258549 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230576591 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231405155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231717979 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231157097 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230794513 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231322693 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231493225 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231168512 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231770141 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232381786 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231247954 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231969999 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231616155 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231461181 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231517787 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231882178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231725567 seconds)
  done (took 35.641602998 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233646753 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233042267 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232060919 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.231556448 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231532381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230760059 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231700929 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230887343 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233482963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231865297 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.233790485 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234303175 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233702436 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234649204 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23369602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233437749 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23418565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231748965 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231201517 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232399861 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233611983 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23423285 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234880788 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231458243 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232818924 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234283703 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231969647 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23238712 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234825581 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232527887 seconds)
  done (took 38.155214726 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253445588 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252932371 seconds)
  done (took 3.67464527 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231636609 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235195478 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.234237032 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231985405 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231790597 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234633168 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23468556 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232134815 seconds)
  done (took 11.034981284 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.233131951 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235738575 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.235650343 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235803434 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233774032 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234340331 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242407205 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252460289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235264492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234553154 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239902921 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242502452 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238872249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233987148 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234458827 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237019718 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236514215 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234245982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235054503 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236712109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23464752 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237400578 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236933917 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23267948 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235133675 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248528674 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242116358 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236029815 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234905522 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241544984 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235031309 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235005322 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235828489 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23558138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237542912 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235729273 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24619403 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252587213 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244643882 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237308484 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238753145 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235982566 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237471546 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239210276 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238786196 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236918898 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238508304 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236320171 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236075561 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239495665 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243876507 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235976461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236460414 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243245094 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238810643 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245174501 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.253552997 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240303349 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245194785 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249673223 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252876664 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.245119166 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239153047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237389966 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246605594 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26187541 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24593047 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253039532 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236987291 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239366614 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247675616 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251542722 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248419052 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23746383 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23760302 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239622961 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237943692 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239474033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247263117 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.257415378 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238974157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238029669 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247622373 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261875702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237735249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238906754 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.238519538 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238781569 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239824177 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250541205 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25459746 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240615656 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238442757 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238448115 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241467191 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238820462 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237436092 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239784021 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238802191 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242057093 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239030869 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243227412 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247786037 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239192927 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23979794 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249293105 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.241254236 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239242159 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250225406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242033179 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239952072 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.239413499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248601175 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239802788 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244103705 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250025597 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241359591 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242066028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.240547934 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242378191 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250722397 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269128372 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242691794 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.24325912 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245985953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.251441937 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24094994 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245327976 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242505875 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239702515 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24010463 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244454718 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243851465 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242887349 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241869732 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243398884 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240890674 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243384955 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.241515539 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242997603 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.244181089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.24199148 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243575686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245512048 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241851237 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243723931 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250233718 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.243019751 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242834256 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24357772 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242318216 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243116237 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24487213 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243186032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242607448 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242196665 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241405299 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24373911 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24501695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245110651 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245291877 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243672358 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246792113 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242983305 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248590364 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241818583 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243218806 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245513798 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245093227 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243312325 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245314872 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241894915 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.246444276 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251420852 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244879574 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243271091 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248415506 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243086645 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244286896 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243358921 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246963041 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252364681 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24453508 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.2527109 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.244809406 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243627334 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245869979 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244294829 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243118204 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243454288 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.246718478 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253506079 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260074303 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254223726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246223708 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249542438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246281546 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247707512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250680699 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245137633 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247650794 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244824453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243518576 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245822469 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248597645 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245726901 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244672932 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247838143 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247068257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245986678 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247695667 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246536232 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247581818 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245333505 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247850302 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24561823 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244516972 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245348057 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244279072 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245430721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247370578 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246770271 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256174751 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246123613 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247229125 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247662011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245653014 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244289052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24851701 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24919841 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246903293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255126506 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264555138 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247383882 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254686554 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.262240169 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245792529 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250372493 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248919228 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2460171 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249754626 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255951339 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249135468 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.246901113 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246910393 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247124124 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249318567 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256127276 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.246360259 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.246550632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249532232 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250675015 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247481561 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24988035 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248471187 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249502064 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250841811 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249968921 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250149747 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24967493 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248040891 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.248278848 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24826766 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250235799 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256293309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25488879 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249374673 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251691248 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249479233 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254519956 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248628501 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248822254 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24788688 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263303847 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.257609442 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257970084 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251286356 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.251271193 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256198541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24990558 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254868365 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249392561 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250164787 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250027474 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.248852902 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250501027 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250966957 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251829856 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251545028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.250896012 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256084613 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251268767 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249107175 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.249339567 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249133238 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252336808 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250689468 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253063705 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253928547 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25280989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.250092501 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250120995 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258342926 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267075586 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25310278 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250367048 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250994219 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250025344 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.252859974 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250393958 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253563108 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258447248 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25385317 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261270243 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252120206 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262255209 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.251734887 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255088216 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.258929696 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250943249 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.249686619 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251324347 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250926422 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260415061 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268075058 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.252126649 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255766574 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251406218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.252735211 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253096544 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250910059 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25376825 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252068131 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262305709 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268523173 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255603602 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255315499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251655477 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251984958 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254459603 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250973447 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257435939 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251813432 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253583412 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252494212 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25275957 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253986375 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.252718259 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.254495807 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252193152 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254460323 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260391149 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269840084 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25716681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25458976 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264557272 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253515445 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261959277 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270364365 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253675039 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252416944 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.255705788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25671502 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253466006 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.254936535 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253863274 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254847299 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259158767 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.254021186 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257077609 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.255117307 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254913186 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253695952 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263623938 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279324903 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255174542 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260682679 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253269074 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255546792 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259408978 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25412109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254220645 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.256694282 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265534028 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265811433 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25413281 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.255482276 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255757558 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255516891 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256524051 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257041769 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.254873169 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257197884 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.2576065 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.255200773 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26114933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.256407532 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256408478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257488062 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.2566306 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267970037 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.256175257 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25603325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255453616 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.257395272 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257002315 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256873155 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255601794 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256825162 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258182735 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256857931 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263173366 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263196877 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259049216 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255267351 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256008091 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256430022 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257866562 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255580814 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256869352 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256557028 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257202365 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.255929498 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.257677522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255717516 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258930716 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257442317 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258117757 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259383306 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263444685 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257224092 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256789957 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259125152 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259297812 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255279578 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257984503 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269411312 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260432394 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26828059 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.266139276 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261593025 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258120706 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260288571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.266478654 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256978039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258479186 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257941046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260673432 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259306396 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.26221395 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258244604 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266361094 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259382112 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258540389 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267593388 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275637301 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25861627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259895016 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262958623 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259751699 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.25799113 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.25933565 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25739917 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26674094 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.278659818 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258742586 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26162662 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257489031 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260129673 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263085421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261537202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261460653 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258133237 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.259705093 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258521529 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261257734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.259153301 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.258945047 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258571074 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.262474691 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266058653 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259993156 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261972512 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260310405 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.260663847 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260136457 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26134893 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259733633 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.259488306 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260383395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260236524 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260530303 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26267702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260885689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.2617911 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.264216647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260127087 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262289714 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270685246 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269799475 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.259999205 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259749247 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261368793 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264309201 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261126092 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26134956 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261222567 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.264160961 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263911365 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261240391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263258517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264411913 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27958572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279576287 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262391824 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262549493 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269997205 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264394065 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260901345 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263557621 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266506048 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.265630959 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269688249 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.262344 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270369832 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279052354 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262895056 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269168585 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265350029 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270163623 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.265536163 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262521526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26207754 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268188178 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.280641501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265351413 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272781841 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295002199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280943384 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263349656 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263184765 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26134356 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262480875 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266240861 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.263541712 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264563727 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265440394 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262849838 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263923559 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269890472 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265242236 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26485677 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265587581 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262807039 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.266593933 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263267532 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263032399 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265452595 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264042211 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263309488 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.263854875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264578944 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279290485 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276244367 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266300845 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263920554 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.263747966 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26940615 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267117826 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275531668 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273784681 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264122441 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264558403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266533603 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264832171 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264110846 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265131164 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265443857 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263602853 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.264566018 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.279427229 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274054098 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271006752 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265530431 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264717631 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267197515 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267271226 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265247538 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265280816 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268172736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266686452 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269835242 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267786324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267503205 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267767078 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.276556039 seconds)
  done (took 748.020010247 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26512629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266000786 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26576035 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264828682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265685899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26554486 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265084499 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265901482 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264751117 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26540831 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266229702 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266066054 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266646317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265976004 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266015012 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265832538 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266162678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266583776 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266793801 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265871855 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266576666 seconds)
  done (took 27.783324784 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.268928817 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.265903915 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266433498 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268776631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26731147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268753612 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267272413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269545106 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269208511 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26638261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269226232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269271361 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266641126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26579249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267546049 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269154281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268912988 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267079637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269726389 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266394675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269647595 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267769632 seconds)
  done (took 29.097968179 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268288718 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26774282 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267202474 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26782825 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270331578 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.267743672 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267638332 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27005811 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270764195 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269371502 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267073632 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.27020829 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275904774 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.275807582 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272710112 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270644884 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.414920292 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.269416706 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26977231 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270246115 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.270062188 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275640419 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.26947099 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268382388 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.267446797 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268117093 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.27084807 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.272214401 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268891942 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.269433104 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273494076 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270985402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268716163 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271569123 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.269006065 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270958366 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277269702 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270935981 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.269182652 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.271822043 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280793891 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.294436318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269922826 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278358865 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.272824117 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.272668605 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274191522 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27775287 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.269991688 seconds)
  done (took 63.652880118 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272642166 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.272632047 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.269209545 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27297699 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273029906 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272629362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.272273311 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272586727 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271379892 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270542551 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.272868667 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271368172 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270298116 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.27279945 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27406673 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270068791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269730744 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270796984 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271115031 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270851725 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270813639 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273120519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.274255475 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.271335685 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27304143 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271384376 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271520982 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273298746 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271593143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271076352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274712491 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274195263 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274385385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271816025 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271761603 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.274730449 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274929376 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271179049 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274041474 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272166433 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273560179 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275321543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273551239 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274820079 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272713668 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.271736504 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272085755 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273127162 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272624187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.274433336 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275627255 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273690605 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275909071 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271607313 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274310932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276020068 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272624616 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273159375 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275336401 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273518223 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272417875 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275030501 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273275389 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276094126 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276374841 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27312876 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.273493194 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276497112 seconds)
  done (took 87.769550469 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27434514 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274613146 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274343646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273613385 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273575525 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274722843 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273713035 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274118483 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274416234 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274288821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275339359 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276923265 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274266764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276950699 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275221293 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274901964 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275911391 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274290501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275382072 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27519693 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.274833574 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274530736 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274040819 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275916706 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275837688 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275165213 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27493297 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275522163 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274589783 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276030574 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276876873 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.274911296 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275610206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274772985 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275736645 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275235128 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276050443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275925179 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.27598678 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.275603165 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275257681 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276047838 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276431688 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275231156 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276018914 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276346902 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275328665 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.276191276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278701071 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276828723 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276428381 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276026694 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27629827 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27677923 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276147823 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27903931 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276670693 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277282849 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276648754 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277379002 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276528989 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.279451418 seconds)
  done (took 80.30100233 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279718801 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279423069 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276695818 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276464479 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279209809 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276996423 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27943529 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27902826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279927963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279519483 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279327676 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276770015 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276994497 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278912565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277509516 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276930736 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277768786 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276826411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279845076 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276849226 seconds)
  done (took 26.776047792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277164942 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281032813 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277523762 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278172371 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28104186 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277746588 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280572081 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279700615 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277289721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280186328 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280371839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280713298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278551032 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279069643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281198022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279125898 seconds)
  done (took 21.682629179 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278161713 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281221892 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279265638 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280152266 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278098554 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278838908 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281209592 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279694719 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278359614 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282172239 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281930127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281875624 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281465937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279315082 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279335258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.2824983 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278896107 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279969882 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282130268 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.279920177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279806994 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.278522141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282175641 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281774831 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279598866 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.279736002 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279792468 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28029802 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279800892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283507423 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279786343 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280718508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280042896 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279603786 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281090988 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278807406 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283604561 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283230382 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28297566 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283274649 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281984311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281634975 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.284118698 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282939472 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280889616 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283154848 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280536093 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280946821 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280579699 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281798189 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284197194 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281593653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284087136 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.284083589 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283583303 seconds)
  done (took 71.673742549 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283380493 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284169501 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282311293 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283513454 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284450669 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282002969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283604723 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281615314 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282462284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285003124 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282249392 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28416633 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282204207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285208203 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282685683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284653633 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281548469 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282998705 seconds)
  done (took 24.314349435 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282523893 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28354765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285734634 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282089075 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283047298 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285458469 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283267532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285023811 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285339918 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281550884 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282677272 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285992128 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284767019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.286259389 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285103629 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282882339 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285820628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286478666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283575618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283959988 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285437795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285939396 seconds)
  done (took 29.473854491 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.28233321 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.282298215 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.301554078 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.327865688 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.315200392 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.282307169 seconds)
  done (took 9.009022116 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283794904 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285862407 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282412875 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287466156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286767629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283744889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283735716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284079618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286215227 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284010165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283745074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286011204 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286655934 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284172002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287242597 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286713104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285336046 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284386611 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285040387 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286584815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284356648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286913292 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284479795 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284553353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284748291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285196231 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287473377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285191563 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285843002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287720414 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288331012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286163709 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287503892 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285859162 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288959142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288544846 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285584586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288011973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287898235 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285645348 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288780313 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289327281 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28824811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286310738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288490357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286254774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286751766 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2858014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286616536 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290060862 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288948455 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286103664 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289330847 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288971393 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288813754 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289713019 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287295301 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286688698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289404654 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287569822 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28725826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28924347 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287524094 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287372823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288940884 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286948339 seconds)
  done (took 86.140042233 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286619631 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286906637 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287315335 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28748543 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287230916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286931964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286875181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287758199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287187434 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286971828 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290134077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287862395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287478339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288263228 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287912825 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287207276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286948751 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287639129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287867296 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290697017 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288108813 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288101917 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288594311 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288436063 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28861873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290717231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288086148 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288065229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289023241 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28793186 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287983297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288481833 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288591528 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288119613 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288053578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288200582 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28877337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288115771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289133194 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291369198 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28925334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292044785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289258699 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289443866 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290061301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289566712 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28941672 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289106665 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289272146 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290395272 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290399297 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290270941 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291021658 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290160711 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290475059 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289643481 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289113607 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290063105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290485627 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292821568 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290744437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290444264 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293360179 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290343747 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290029294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29164348 seconds)
  done (took 86.297823395 seconds)
done (took 1744.890013698 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.279269496 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.382758384 seconds)
  done (took 13.886252872 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45395079 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403513327 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288688166 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.317412233 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289176259 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.288492865 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289239639 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289326331 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289386786 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.288801832 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.28875103 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478085056 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.313671806 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.289631769 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289433732 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.381441202 seconds)
  done (took 42.470598826 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318230277 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296452296 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.407574523 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31141869 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.317842263 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.478825253 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.346452051 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294001985 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.465915933 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335044231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.856105736 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318004068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294682721 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.400360052 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.312858671 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.480474082 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540618031 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.861032777 seconds)
  done (took 29.861879681 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.746756913 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.327950729 seconds)
  done (took 9.299587173 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.294528275 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.334872796 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.314505832 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.31279279 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.316147762 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.335232497 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.32073185 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.339066949 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.330073416 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.338648854 seconds)
  done (took 64.469190842 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313907048 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.296051895 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295202055 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294559129 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.286918256 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.287362019 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.29385348 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289497983 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.983152108 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423937633 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.309670512 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300670607 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.296871934 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295822679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.295264231 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.331296827 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.432354496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295160802 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.294200659 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30122633 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295197371 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403922367 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33653662 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.296238698 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.421943587 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.998982677 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298129292 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302407878 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411443726 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.296072678 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295179605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295814397 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.296942403 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.859531209 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81077834 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304379557 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.320145386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305536387 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.295589343 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.433861296 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297875281 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303604653 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.289338827 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.77600789 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45021571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.408597221 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.575060639 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29713815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298059633 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.359353415 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297337691 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298027363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.3265393 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.056407908 seconds)
  done (took 109.458455511 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.325618195 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.779896292 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460166371 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306912776 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.07650749 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.987669449 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.292558998 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.584579972 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351035325 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290432204 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.569472312 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.801438006 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295559397 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.303829922 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.926576741 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341889486 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299298694 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.062336793 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.292996505 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.295870764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71412871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320938214 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.294660807 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.458758412 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330998414 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758011428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.768405079 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.731812916 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.295294973 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.290902423 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764397273 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300167346 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.296980053 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.291340074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.566215574 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650260637 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629679033 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.293055567 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308409172 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292406329 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321958854 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.753614666 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.63780319 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292801507 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292153838 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758969028 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.294332202 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.298380065 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.298727696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493921537 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.030670602 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293113389 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.770446158 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.292808619 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.585898371 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293934507 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37156421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786100741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292813949 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.363294364 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304035541 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294483101 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295572602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295671465 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296804788 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643811314 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.400615898 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300612926 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64564633 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.756655088 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.295513782 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821453265 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.162982293 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.294123268 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.366570767 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307587459 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.848899426 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787041111 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321594621 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293769851 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630819034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.297012684 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.575520922 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318455503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293769208 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726027487 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.317954326 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.358195659 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.294160303 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.307108065 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.929788897 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297432216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56327814 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.356835015 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295127665 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.295535395 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.320039863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294473644 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.295599727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.299791392 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8233456 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.301301766 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.427432019 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313411719 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302830153 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295309007 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299755081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297712551 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512824589 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.894890312 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.298658952 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297102918 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.294865572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.29852824 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.437524658 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.297229359 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.606005369 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.296922604 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296054867 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.30370673 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031450545 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346410148 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296189745 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.296087972 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.139847624 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.504501094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316563695 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.29630139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298143685 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312137871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.664533604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297166263 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.320208086 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296879484 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004558852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.341183362 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.30470453 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.694071213 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.296664088 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296213075 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318381312 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296244453 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603792469 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.573435259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369020566 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.300007478 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.313392933 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967932219 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306819327 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.431310043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315489731 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323936949 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496870069 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.634235925 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298767888 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.838555751 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299781136 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510021401 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298583582 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63381151 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794096005 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.30092983 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301511249 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004537112 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.955616732 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.93645144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303633324 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.577819325 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.301298181 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.755814579 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.298018884 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299607442 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.728194562 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.299673992 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302133197 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.298801886 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.29911163 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.448202592 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474838489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.428664875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302993946 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762659641 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312663956 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299842139 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306724657 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.304020005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.651460373 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389814784 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.301431838 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.303579128 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.300410917 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.305001885 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776539177 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.199499624 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.300598989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454230773 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937707711 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.301439003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300803605 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.064046294 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.531892613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812335828 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.335913665 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.614054238 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.304809242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340774016 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015735165 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323176699 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778228193 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303065497 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.30103715 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889532761 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.300469488 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.645858043 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.301737141 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301432164 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84594153 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301356133 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303262701 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.678724586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301348239 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547259506 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.302293834 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.318048721 seconds)
  done (took 1102.626718371 seconds)
done (took 1373.296606034 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.302161819 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30297427 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290705104 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303347709 seconds)
  done (took 26.440655875 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.311050294 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.307417229 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.309145946 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.306828804 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311195267 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309130549 seconds)
  done (took 9.097393488 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.858726748 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303880742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302452052 seconds)
  done (took 19.707606286 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.531253129 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.590389268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686139929 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.530874635 seconds)
  done (took 10.58289749 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.310310562 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.309817343 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.310122449 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311877673 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311604005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312710579 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310123819 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311173164 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312548238 seconds)
  done (took 13.042174992 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.313500159 seconds)
done (took 85.425398393 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.155701131 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.858977049 seconds)
    (3/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945489811 seconds)
    (4/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.407831323 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.229364056 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.067197704 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.329943583 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.982610939 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.304994572 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.423156954 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.719370487 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.320976973 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.55374911 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.439535542 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.304915229 seconds)
    (16/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.392657471 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.346717867 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.288230627 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.877713499 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.332820571 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.291002367 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.30453058 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.762647778 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946505029 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.69003835 seconds)
    (26/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.584699547 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.648565296 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.726872819 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.725884654 seconds)
    (30/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.766910837 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.327646524 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.411431591 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.843023942 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.693626626 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.408546 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.339099506 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.496662143 seconds)
    (38/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.505662904 seconds)
    (39/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.701454608 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.46744261 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427684947 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319766077 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.791890789 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.420097929 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.397749526 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.308839941 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.815755786 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.310575383 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.901965493 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.711333954 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.334652217 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.802824358 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.999113881 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.410062562 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.524673187 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.634896914 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 5.627919797 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.702420672 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4258991 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.329409856 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.580514487 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620192249 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.401953436 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.626747661 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.160940892 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.312198196 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.183287209 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.608932893 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.389932194 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395835637 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.310331309 seconds)
    (72/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.591618673 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.333312421 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.965434192 seconds)
    (75/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.864227515 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.31728315 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.363134196 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.433828589 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.333663518 seconds)
    (80/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.979353437 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.342533669 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.329626016 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.41255004 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.31203427 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.33288057 seconds)
    (86/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.147293644 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.153489991 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.177371685 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.210706992 seconds)
    (90/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.030822597 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.330294041 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.495221715 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340700805 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.339628895 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.314427356 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.600176211 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.475058013 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733477266 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.820399931 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.509435587 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101167043 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.138933783 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397576111 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.315801641 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380594943 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.320587894 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.315983644 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.963942493 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.401452681 seconds)
    (110/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324371806 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.453326518 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.17128799 seconds)
    (113/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.873206447 seconds)
    (114/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.398550797 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.654423573 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.624298184 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537844415 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.424390674 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.30187004 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.797342448 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.914122445 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.314912204 seconds)
    (123/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.314654888 seconds)
    (124/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.437568502 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.525167616 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.729343317 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.314024887 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.829947664 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.339815271 seconds)
    (130/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.08861685 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.586707455 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.367799485 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.361318841 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.726976171 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.104791589 seconds)
    (136/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.936886838 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.575974169 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.465773202 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.306159957 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.381971902 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.174792116 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.299644217 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.21239411 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.448180591 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.300368008 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.113446615 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.3457046 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.673873062 seconds)
    (149/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.657819871 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.341112671 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.345188207 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.368362683 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.072914896 seconds)
    (154/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.699308743 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.953551025 seconds)
    (156/309) benchmarking ("sort", Float32, false)...
    done (took 5.315293801 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335107716 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.262215515 seconds)
    (159/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.779089542 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104300753 seconds)
    (161/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.631400773 seconds)
    (162/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.343898977 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.437476793 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.033983172 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.389957881 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.631270653 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.33870482 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.721919759 seconds)
    (169/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.420350613 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.195638979 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.347923855 seconds)
    (172/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.193413542 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.642828568 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.36955715 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347998847 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40203046 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.44771555 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.426111589 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.772069747 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344187983 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.64971062 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.382575449 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.35911996 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.718687261 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.728825387 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.883538271 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.177660627 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.547578909 seconds)
    (189/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.530616811 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.936426801 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330176896 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.436205748 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.411650168 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.375177048 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.377612391 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.933420453 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.206367152 seconds)
    (198/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.946316861 seconds)
    (199/309) benchmarking ("sort", Int8, false)...
    done (took 4.335773957 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.330569625 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.254978332 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345661133 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.32509399 seconds)
    (204/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32985301 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.844676277 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.230399451 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.937151399 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.463792807 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.918572546 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.304063965 seconds)
    (211/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.563752319 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.837342265 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.530759276 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.864604034 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.562384955 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.007365725 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.313915512 seconds)
    (218/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.693134429 seconds)
    (219/309) benchmarking ("sort", BigInt, false)...
    done (took 6.321379541 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.948782059 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.934169664 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346272168 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.741742227 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.334794377 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.759194756 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.362602918 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.332887708 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.320298391 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.103234291 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.017940567 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.321967565 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.381540842 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.402957253 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.320044401 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.180718141 seconds)
    (236/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.510416379 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338696192 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.689046562 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351406139 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.742837887 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.28643291 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.920732758 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343386733 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.310202593 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.306990445 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323161532 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.520288073 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.11587092 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.837259067 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368661197 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.410349159 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.210622238 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.535849261 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.348925839 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.953755919 seconds)
    (256/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.647410326 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.219282956 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.105381469 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339988656 seconds)
    (260/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.511040469 seconds)
    (261/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.333160308 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.350140777 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331918258 seconds)
    (264/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.350794084 seconds)
    (265/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102774541 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.703316224 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.669213596 seconds)
    (268/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401643201 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.60507387 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323344005 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.707002817 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.709166402 seconds)
    (273/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.350771975 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.307476602 seconds)
    (275/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.354203604 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.403334835 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.680413907 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990513389 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.364600323 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.331197923 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.478392969 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.42500749 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.322700788 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.420569108 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.395749139 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.401289528 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.979828025 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.378839703 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.325048297 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.409141897 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.852488439 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.408231207 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.739367141 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45534736 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.852850267 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.337460746 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.1788213 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.503342606 seconds)
    (299/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.469621931 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.36798897 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.32521308 seconds)
    (302/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368128524 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.308653146 seconds)
    (304/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.72798548 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.347844999 seconds)
    (306/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428779078 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.327946839 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.738996301 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.694325912 seconds)
  done (took 923.977832208 seconds)
done (took 925.221808589 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.354092631 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348336164 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.331299525 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.353911337 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444700011 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.363891473 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34223621 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.334712661 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.380246403 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.381802465 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.332618892 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361604492 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333976167 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.333005627 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.331475939 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348317408 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.36052777 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.333407799 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.350721071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.341907789 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.349309148 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.332003061 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.383256541 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.36253107 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.336608373 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.335053227 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.33594443 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.353212702 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.444305071 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.337085164 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.33569035 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.344609633 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362021411 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.331035938 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.328146116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.352878745 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344972525 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.342253564 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.33659617 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.366599515 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.770933952 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.33397376 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.335143592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.333936907 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.335221224 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33850221 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336752942 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.340791002 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346903048 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348588175 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.766122743 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.350231297 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.338153652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.335037976 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.345207473 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.335596726 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338126794 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351806456 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.354470705 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351177076 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.353589382 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.338681671 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.337257571 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.352314946 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.342462919 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.893202877 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.334355539 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.338637084 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.841901989 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.342618096 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.897227527 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.346752015 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.337579561 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.351174607 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368083472 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.36841238 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.330746335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.335472803 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.343883178 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.334864767 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.346073402 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34944044 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.34030271 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.33689449 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352361679 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.367786197 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.3467127 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.337966738 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.345079048 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.357170006 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.345094283 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.347365203 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.340050506 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.332350548 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.346113802 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.340794933 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34016407 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.33978532 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.341865147 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.347624233 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.77552979 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354776518 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.334208206 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.334041529 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.336537978 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.351649408 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.782618337 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.339693343 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.359568741 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.385716536 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.339003109 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.361571563 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.342111915 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353701868 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.346291484 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.341487404 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.332842377 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.363521751 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.842134991 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.356041901 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340282183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.337319023 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355125947 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.340732433 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.335741045 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.373750714 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.340751175 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35208442 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.461271877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.349396902 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.370975639 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.33754624 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.342587391 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369769352 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355543454 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.371525372 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.341587866 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355020129 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.355169151 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.335952024 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.351514425 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.350659448 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.341071614 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3460097 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.333865663 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.370883485 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353395053 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353081608 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.360459425 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.462227202 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.337908507 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.364953969 seconds)
done (took 226.204432785 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400395921 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.331663083 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443235106 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341585383 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439735923 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440030227 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337529104 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339074426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338946363 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.731623667 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33891241 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.338961308 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.336357749 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33913624 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.422229296 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342209875 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339067717 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.680428919 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340129311 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41011768 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.337092737 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.339848382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.341654313 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721081406 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.339196525 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.33796002 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.410938115 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342899902 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.684589117 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.332690189 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336291379 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.685260554 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.429911671 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359989426 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352981128 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.348841249 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441685651 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360455254 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420626286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.422570955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445239071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378761226 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335515768 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333403 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343809186 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3431578 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340471186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3702903 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.33746138 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341325265 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.683040744 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352689161 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.350854231 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340786364 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.341263574 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36096959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.341058479 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342011226 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432415738 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.342140798 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.403744651 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.722217436 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.720945224 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.34475167 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.340723714 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.341985062 seconds)
  done (took 148.981355851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.408281116 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.415495111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.454842797 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342442493 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391835089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4608499 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.342742512 seconds)
  done (took 11.090166413 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.347461427 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.344549296 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392051678 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391659731 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342460086 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501687613 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344834707 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353570608 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.342445215 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394928329 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344049904 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34595888 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352258157 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.341895265 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390756015 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353044683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458210067 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342661486 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34424151 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.494168624 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34329197 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352905255 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.394773385 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354410308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345431573 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349469016 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907391002 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343160122 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344265809 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345887252 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344069021 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3823715 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347465937 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.342481484 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344366415 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459236441 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.343644333 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345014998 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346836509 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.33889318 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346073884 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.346756243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.34652929 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.34426382 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.347158578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366806668 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34686166 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347803276 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346509126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348066127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394392935 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347243144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.344454953 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345104668 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.399906777 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354797347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345567117 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.345460536 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.348313686 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344748568 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495291748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393380888 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.348584521 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393018994 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34840009 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347531559 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348022978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348229544 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399542858 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347873711 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394809013 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345809978 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.499619434 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368194993 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349912958 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348635232 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348078415 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346533829 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.344370718 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351153968 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.346138869 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.34788525 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.351531771 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345881297 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347284103 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44954146 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455064621 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345634883 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.358621907 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353662148 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.346097919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.399180107 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.348855986 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.347294397 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398996735 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.46125612 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.400044129 seconds)
  done (took 154.402859938 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353105203 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.354895757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348834646 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.363999238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.347897098 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347598577 seconds)
  done (took 9.395401247 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.349379754 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.351762922 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.349626709 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350491797 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.348255324 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.348469673 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.348699771 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3507223 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352291208 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.351956073 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349490606 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.350030708 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350072668 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348746285 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.34827676 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.350940333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.349491953 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348555583 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351337828 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34950542 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.443666445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348545399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348933867 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.349888151 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353641361 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.351754075 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356674264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.351674333 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.352291289 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357576306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.352233446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349588415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351229253 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.35631322 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.355679131 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350652054 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355869909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.351964629 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350438508 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.350185561 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.352015696 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350654036 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352177785 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.352227702 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.352250333 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35555633 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.35633063 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357396503 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.350794655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353043109 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353070803 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353851229 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.352261193 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.351992371 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35526929 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355385123 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.357669568 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352091652 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352141985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352966185 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35552416 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352611679 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353497892 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356079872 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360790172 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352712781 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353346618 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355760887 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351638545 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.354239445 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353295789 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.351711116 seconds)
  done (took 99.739831891 seconds)
done (took 424.880620735 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.783650442 seconds)
  done (took 8.067850929 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.462756448 seconds)
  done (took 7.747854299 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.638782494 seconds)
  done (took 21.927930884 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.430554904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.45001305 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.347956402 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.356528688 seconds)
  done (took 26.869325493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.873928179 seconds)
  done (took 8.158444159 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.347774798 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363355414 seconds)
  done (took 13.996693279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.430457267 seconds)
  done (took 7.714976075 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.858419837 seconds)
  done (took 8.148330052 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.346304047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.357879351 seconds)
  done (took 14.258440362 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.330929371 seconds)
  done (took 7.614560139 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.465153472 seconds)
  done (took 8.750267568 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.346847576 seconds)
  done (took 7.632845572 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.401838234 seconds)
  done (took 7.686239913 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.408223657 seconds)
  done (took 9.692955458 seconds)
done (took 159.550796605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.344910113 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.349971804 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.348696368 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.347963434 seconds)
  done (took 26.676230769 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.390750171 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.388721641 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390432974 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40058444 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391950047 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.388943017 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381936951 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381749809 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.40073175 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.392311041 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.392199979 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392043795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.388903188 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.38240255 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391962145 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.391901541 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40052469 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.391923816 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.382991038 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.3936893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.357502082 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401698767 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.393514368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3565126 seconds)
  done (took 34.613483009 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.553444069 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.424574013 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.507620629 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406404585 seconds)
  done (took 7.178608129 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.408287936 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.410195245 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427247266 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.46153788 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.48843777 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.420159444 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38427137 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.379718998 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.365112946 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.411497318 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486198579 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.425482893 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.498177133 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.358051206 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.54497472 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.357582629 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.357673028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.410639383 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.461653388 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.480148749 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358815956 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.410027308 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.416862432 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.428112154 seconds)
  done (took 35.438332125 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.357381524 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.364925454 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.363505942 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.35785277 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.35784655 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.358490512 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.363699254 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.358891484 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.379249951 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.3594535 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.356813606 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.35864992 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.35746566 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.357911124 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.357299375 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.370552334 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.372212448 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.358019609 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.361590568 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.364384453 seconds)
  done (took 28.525334112 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.350004115 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.204104646 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.700317277 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605246865 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.349474443 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.351976913 seconds)
  done (took 27.849786504 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.430215369 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.558002002 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.356207902 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.742247708 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.808524934 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.357375203 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357855869 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.599788448 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.936265397 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940542195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.41617649 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.426451917 seconds)
  done (took 20.220374762 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.350232549 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.350807182 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.357800874 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.365971688 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414083912 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.361763213 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.363591115 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.350571497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416995372 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.420534805 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362997967 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.416833362 seconds)
  done (took 37.823192388 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443516588 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404442216 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.382682964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193912557 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73729451 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567170202 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.249166727 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.801181062 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.361222907 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629059646 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3571454 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445046044 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609223161 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355143643 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35737526 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.395871918 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581534286 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868531138 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358576792 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.447266455 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381697672 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371191997 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.584274409 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.386674828 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57006334 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.490700409 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.617143801 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356853681 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651895049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367909492 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367484712 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357032378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631324375 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034795424 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477083957 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367621373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069978987 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07299717 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.347432931 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.532420359 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369518419 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358725031 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368273607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357274551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29187053 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365898386 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805383611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.364788353 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.06937499 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356879483 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368228205 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452726405 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.362275746 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.176678981 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481741574 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359940429 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.356561023 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360896561 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927539685 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.030266253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373473666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.294568491 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.746810896 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.488286225 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995911431 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.461537578 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.361400125 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361761062 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292861755 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.586217226 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376842736 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495888555 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.379328514 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989036094 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127297023 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372134368 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289655913 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928895517 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366187592 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.294618741 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587487063 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360696904 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299341024 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.306772295 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293995161 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097883929 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369058863 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.793598466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365196352 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801007207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.373476205 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378175464 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383274226 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584795925 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.242424719 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360228685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.361421603 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479319076 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382322081 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799967817 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298691875 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.363920212 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61717731 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.049290326 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373030519 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40012194 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573219382 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368961274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.379346218 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368881414 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.3729072 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.963712441 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37385819 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039463208 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379688423 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361360636 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156746944 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367316277 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.463366887 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365527999 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616072639 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.162148358 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364839083 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444266012 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361239072 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362074937 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592458917 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879818715 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361984325 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.361293025 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365485275 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.374833621 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.361156608 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317492806 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.360464343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376294789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.365084235 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587447336 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372412881 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639668263 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297290383 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499825552 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462492008 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.586784609 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.587574992 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.361897331 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620732906 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378318295 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366607127 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377043044 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382578635 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461209753 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38525279 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.366112838 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620977625 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.366586372 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367656459 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.597711079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368333237 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369740315 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368980815 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260573414 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97411236 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3385781 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370180745 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256951464 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.378633277 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427983281 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37038189 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.37521127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.292521516 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332202412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.371789237 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.373396475 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58945463 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376311675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.508515369 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447911001 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.575020834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980388095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379673971 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.299950336 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.077872597 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.059026591 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365684075 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300328328 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364190598 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373964971 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376869595 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.015781353 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98000039 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369590819 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.498742968 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.374947212 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376854318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.371511611 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365288713 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.264095216 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051574932 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370134406 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.394761884 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509816125 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.379304413 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300222651 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.370223209 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372709596 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365632053 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36586238 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399730172 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.519134969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85341478 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624665019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.060183308 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381238563 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.702171165 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.399433965 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.371548547 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37462142 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373440955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.369174062 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375365348 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377695002 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.602816048 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037847866 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933880222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150303021 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926764117 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344793933 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.37466687 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36900553 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8118173 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304028102 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935200761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566668916 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817244587 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320750348 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581492358 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.60024508 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169231264 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379496464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596583669 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344388259 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.380237895 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380308575 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580802489 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403533748 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380044748 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3002732 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.652364752 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609079948 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371280095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449179984 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818397087 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380696143 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370977416 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.365459315 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.76994898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553964296 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083031248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546171237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370443239 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379994272 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854857141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37744292 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595656975 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012117758 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372233925 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.58283778 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312670932 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381141941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381120465 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368300203 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.766126546 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.372193995 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.626567458 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381132436 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305351551 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382573883 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927723459 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.228154413 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376196262 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371343332 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169131734 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374688025 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672707373 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.381836612 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.252599496 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372879079 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305357375 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306230793 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.065103872 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379396578 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341793072 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884187749 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.799719101 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.446945798 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408141574 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222060689 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626682653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.385859599 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979242018 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598689063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.310026757 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396944524 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.472058768 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379698123 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.357789297 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371245222 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606774023 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263329493 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597886864 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.42622524 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.275024414 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368495976 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586474073 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372749529 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374114918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62492324 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.085056286 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.386567418 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106590029 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397419282 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373773036 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309981562 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.763317966 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381098559 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452399708 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384371937 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.384516638 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385376806 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557115535 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384636778 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375484111 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386976782 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4665066 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09296161 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.26260898 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.378248104 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988689728 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135412239 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987172456 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386299333 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373798692 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377676072 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308775962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522854092 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600205474 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647866177 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492364114 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.936433896 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399153195 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38141196 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377760802 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587988661 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649530589 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27100392 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375322808 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390503689 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.375176953 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386615086 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.586328739 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895503133 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955253489 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497338888 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375058644 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819036219 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652955717 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375457975 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374761914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97088169 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.399877824 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.787244871 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.381169792 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384650479 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5228852 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386105006 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06140371 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.386022512 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.536262176 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149278005 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521437633 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632916201 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.888004225 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388005295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990718711 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110359771 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639960089 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443752522 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387985891 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.487133451 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523433953 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.382813049 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376726653 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376236632 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226703339 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087669465 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.386822323 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990378182 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641153949 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.374247321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.386397208 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399794879 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.386515724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602277572 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146220364 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605814074 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387735316 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384063942 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19710131 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989719091 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391073755 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313068155 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381974779 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629899841 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615093098 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398852758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.83064236 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.090125806 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958364589 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.353483207 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400726666 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388700771 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113626918 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993794258 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.275929824 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900795254 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948235789 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378180611 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670539925 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.384309164 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392074638 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656181695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382451953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378086861 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393826992 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.990990351 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189974516 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.402893849 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.539729395 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.316520023 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725743819 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092285805 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317067539 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390534042 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.574279304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382708168 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497818126 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390876104 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.390726322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394203061 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.13405305 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663176221 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386475594 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.372719639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.364170862 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382335257 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402962145 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623280361 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381839012 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.045148369 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.732705389 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63518157 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389907666 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.364447834 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.384763779 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381647386 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373170608 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.584494005 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.03426914 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965102594 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.390001341 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.393121415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384996069 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598000408 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593498389 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386927262 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39389215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38225643 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39951715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.285126 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891167556 seconds)
  done (took 1618.68648152 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.407786423 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.418849463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.402321905 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.423293163 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436732974 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412875134 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.455421502 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423042709 seconds)
  done (took 52.69796148 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.387168061 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.634500221 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.410396344 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.382651349 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.388139531 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.394879362 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.839209788 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.390959969 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.388011515 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.389711546 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.380639491 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.391501455 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.027187907 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.3888341 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.39132659 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.370349421 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.387788245 seconds)
  done (took 66.266193346 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.391938925 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.687327414 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.496805013 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.385010652 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.683383409 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.382357088 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.5938216 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.395587791 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.388609843 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.602722316 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.053117186 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.380673747 seconds)
  done (took 80.760891642 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.388372982 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.38830424 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.389046363 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388465938 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.387824157 seconds)
  done (took 8.261307577 seconds)
done (took 2046.285244759 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.623548497 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.123158878 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072522392 seconds)
  done (took 5.515319967 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.526411509 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.577254649 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.73316214 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.723999491 seconds)
  done (took 7.879374874 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.663447778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.760098328 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.576869184 seconds)
  done (took 6.318025406 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.895539308 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.39684737 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.505946901 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.381337246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.385022266 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.382252829 seconds)
  done (took 20.467493725 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.386746091 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.390046378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387603193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390337954 seconds)
  done (took 6.874010388 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.365433331 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.116219562 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.369870047 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386589775 seconds)
  done (took 18.557500284 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.134637327 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.147650897 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132618779 seconds)
  done (took 7.734169186 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.384937677 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.225116582 seconds)
  done (took 9.929600845 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710454833 seconds)
  done (took 3.029655559 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.520351852 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.657283449 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.461959623 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.396843752 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.48660982 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.48592676 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.144843712 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.715167875 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.410998255 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.717741078 seconds)
  done (took 29.317812072 seconds)
done (took 129.364332082 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.400287529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407042314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.585126102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.371842414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.618498229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.585578105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896387015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.337790556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.880780606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.868875028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.374652037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.615894418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.616219706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409101568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.616630997 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409577917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.615835879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.437541805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.097082728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.263443127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899228743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.00491578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.202459795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.025938023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.617479867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.537022625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.587272806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408750423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.274012563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.60950847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.536706646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.383398057 seconds)
  done (took 194.816694002 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.387545005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383965832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.384068415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384120247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.407966795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.385294849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.385859518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402976206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.3853173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.393961706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.393587435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38525489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.400683505 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400016501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386224785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399799448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.384633574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.399548426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38474568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400219391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.386746515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400703048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.399759768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.389546924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398817433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405461842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.393685551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384220408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405369339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.385083096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402380116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418049039 seconds)
  done (took 205.928588185 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.387615703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386201738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401119439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.389453476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.385229112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.385797374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.388898308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.386142778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.386313586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.385746629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.401307056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38687246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.3881247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402455427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.400177202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.386709202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.385649782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401525515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.386535006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389651592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.388119492 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.401455656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386129178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.386734821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.387203763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.403774373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.38983815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.402202621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396450542 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.398304702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387313982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.387448971 seconds)
  done (took 205.850964422 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593080303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.398019789 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.398447395 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353785835 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.398053313 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.397699301 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394655809 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.596182181 seconds)
  done (took 14.855078438 seconds)
done (took 622.771826619 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.806986577 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.509718619 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.597050128 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.418712358 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.209041187 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.416083596 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.419853153 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.593728528 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.33763998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.599209972 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.704308981 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.412676725 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.853925462 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.416425396 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675954931 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.515053068 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.349612862 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.471148058 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.741404557 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.981685059 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.677282085 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935488766 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.593616742 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.32785275 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.853344705 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.932669251 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.163880618 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.349971506 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.419085944 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.746092869 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.16342139 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.427573512 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478041775 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.458691196 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.516610308 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.498259194 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.406474854 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.457494931 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.598149702 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.698324927 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.983789536 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.147489117 seconds)
  done (took 95.190102913 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.384620301 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.386468509 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.38412 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.386600353 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.385454218 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.386723098 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.383312384 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.385003401 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.384585281 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.384393347 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.384353157 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.385750218 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.386674367 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.385369108 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.386516207 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.383875458 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.388083524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.386922971 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.387185876 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.386352492 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.385577512 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.384990438 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.38650082 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.387513965 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.385603658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.386473961 seconds)
  done (took 37.358199002 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.401621038 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.646330615 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.823550089 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.405751075 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.39780508 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.403092999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.48079486 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.403076086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.401229983 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.40138738 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.558901948 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.40601425 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437586438 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.832671692 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402154275 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.402896282 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.40187802 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.40037282 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.653827237 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409763886 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.482904946 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.402982665 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.481945266 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.409552625 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.402683183 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400918372 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.404513648 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.902493793 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40200248 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.558023818 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.339420677 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.479070554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.851202188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.837847776 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.340386113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.405592077 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.403395835 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.562493383 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.402911167 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.401201961 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.481857155 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400962935 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.835098057 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.042326553 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.419978852 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404867715 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.927061666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.562921058 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66445204 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410517331 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862458598 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.40637349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.40742883 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.403723093 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.665260225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.409048382 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.402770765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.939208529 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.409682416 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.484980125 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.406716015 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40492664 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.66382273 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.40439613 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.652142059 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.405515211 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412072957 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404608666 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.837634489 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.407352963 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057456635 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.419354681 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.405967516 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.558667053 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.652965335 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958629053 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.406148439 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.666187863 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.865316034 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.482341211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407129724 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.8920473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.486050403 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.406753407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.409405796 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.410635502 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.406029107 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.450806153 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.483412708 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.989305292 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.05030137 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.957496273 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.488063815 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4162687 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40365075 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.940621937 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.408072135 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406615625 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.834687281 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.055587253 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.421592579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.41160117 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.046131461 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.42368097 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.487382118 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.410051672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.846756623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406743714 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.453031328 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.407817674 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.41204821 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.410691254 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.488636885 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410461469 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.408678147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.036306734 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.584472155 seconds)
  done (took 184.258976666 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.415696629 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.398900862 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.407843903 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.400260034 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.399893603 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405868997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.401316674 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.398886617 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.405968704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.400204462 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.399630347 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.4026607 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.401735494 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.4140629 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.410628296 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.407527833 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.013672602 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.400144671 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.399723806 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.399528471 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.222481652 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.401839852 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.402122134 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.400555408 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402306738 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.40135358 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.405071794 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.404312321 seconds)
  done (took 154.061355801 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.411902074 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.008509885 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.409862763 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.548046033 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.432065304 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.407624163 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.54464195 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.46729996 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.410331778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.408696701 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.409239902 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.728608519 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.412357511 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.954170486 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.611778739 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.550174411 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.951985841 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.41161216 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.40889268 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.409701937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.548705242 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.41790933 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.744501067 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.03928101 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.414814411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032260915 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399841411 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.411171005 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408203189 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039145307 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.412432659 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.736921229 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.490574781 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472319985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037993776 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.957159825 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.958428304 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.566969504 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.408965821 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.410235734 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.410420873 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.397672661 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.014773903 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414204783 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.410886389 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00564803 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.43093348 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.413118947 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428553458 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.410228941 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.473251353 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.473274407 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.737195799 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.018815469 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.494134108 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450541371 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.547678361 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.798872634 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.413019526 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.955642258 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.396817197 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018771612 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.415912528 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398573386 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.413221914 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.418610673 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.571253208 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.551861714 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.957222513 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.411952079 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.958125346 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.57198864 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.412372238 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.412287177 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.41447715 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.01849688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9591435 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.572987985 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.552755858 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.618002481 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.400043513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.410275705 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.399791563 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.492744449 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.413008769 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.019377205 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.960266417 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.414989169 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.415441654 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.416108711 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.416076053 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.600146004 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.020555232 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.493362799 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953883423 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.75199197 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.736919032 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.416363942 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.477370324 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.414670119 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.738906244 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.417368483 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.475587221 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.865338907 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.738698212 seconds)
  done (took 168.751437217 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.669016026 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.674290517 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.509890546 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.529819717 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.981974241 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.998741145 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.646035673 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.549690381 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.526564547 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663583098 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.616439477 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.507555492 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.60875606 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.490927175 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.14695271 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.483259276 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.511890709 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.542143914 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.528930145 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.5104806 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.047537899 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.699807238 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.590988157 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.621511296 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.509473552 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.229116064 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.969698131 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.934415739 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.588738827 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.755285807 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.964677614 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.585792204 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.388729366 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.093364607 seconds)
  done (took 68.020382965 seconds)
done (took 708.965410486 seconds)
SAVING RESULT...
DONE!
