cset: moving following pidspec: 4269
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.236224021 seconds)
loading group "string"... done (took 0.644213133 seconds)
loading group "linalg"... done (took 8.194799384 seconds)
loading group "parallel"... done (took 0.170160371 seconds)
loading group "find"... done (took 1.229612775 seconds)
loading group "tuple"... done (took 1.985297784 seconds)
loading group "dates"... done (took 1.327933438 seconds)
loading group "micro"... done (took 0.203167563 seconds)
loading group "io"... done (took 0.942920726 seconds)
loading group "scalar"... done (took 39.349925018 seconds)
loading group "sparse"... done (took 11.935039114 seconds)
loading group "broadcast"... done (took 0.972916831 seconds)
loading group "union"... done (took 13.919778068 seconds)
loading group "simd"... done (took 4.790743506 seconds)
loading group "random"... done (took 9.177211672 seconds)
loading group "problem"... done (took 1.498838817 seconds)
loading group "array"... done (took 21.402069325 seconds)
loading group "misc"... done (took 1.767526257 seconds)
loading group "sort"... done (took 3.359629341 seconds)
loading group "collection"... done (took 18.175912554 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539401509 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129361927 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14098819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123943127 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154343126 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120313219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125111594 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084619773 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.916294883 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150690868 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117473592 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43747491 seconds)
done (took 5.480218035 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172265986 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090259682 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079375268 seconds)
  done (took 1.278291809 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065898539 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128288384 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067744707 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069510453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06904397 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06861339 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068643458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068618024 seconds)
  done (took 1.644356777 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073336217 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06970123 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06782377 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069639089 seconds)
  done (took 1.387787773 seconds)
done (took 5.660866084 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799545943 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214418431 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190584617 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410377044 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139621026 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183392275 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656871794 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325821173 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203380046 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09812754 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116643078 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.36873383 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12766724 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649193919 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081391836 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099094287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139589855 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.463262528 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072102021 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088536467 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093180564 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132942517 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092645789 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079342381 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149856762 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070812724 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145206234 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086027681 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069238716 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226065825 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177454 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663910786 seconds)
  done (took 10.559499336 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1017053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099392346 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070764758 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128263294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102171107 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072952818 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078283115 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069655964 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092786788 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133773635 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094758757 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111729304 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068819488 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071879903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085665486 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201009798 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080424471 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081655765 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069490791 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081689392 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110975727 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08433069 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08296859 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082621431 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132339729 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.172573503 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096931908 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098552935 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06961398 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084805714 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117422529 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130867817 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069023116 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068920133 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128563413 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097455585 seconds)
  done (took 4.669857886 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.120527 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153627735 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09336259 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144733333 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067046024 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115539911 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067977855 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086312821 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241926534 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.378964289 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.633668889 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150823941 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119597141 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108495703 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073283347 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071652766 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070444692 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.258456697 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103838634 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11504875 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085714488 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072360432 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072039341 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071613761 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073520564 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065627857 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07075616 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091198577 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078256666 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095269697 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339522809 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129855352 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070527586 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.94333901 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073579013 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167355712 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069729277 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065626647 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108492359 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097494316 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146127936 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070160098 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065860027 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.299964085 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065213176 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073508579 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068768079 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087995334 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111606711 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123681251 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065871367 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066424734 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166692743 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068086006 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081772698 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.256680492 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153393315 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068726174 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297644238 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09723249 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074573085 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06779211 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067253659 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.224342205 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117502955 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069055629 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070453666 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071689351 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070944389 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371504065 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068786813 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.22668413 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069023592 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079683845 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073646136 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07438177 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082068061 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081037179 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095258798 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069699158 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076637824 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068939435 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06833263 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069136237 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096414281 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067332788 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.3948812 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069243708 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074368943 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066898617 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096273122 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101300777 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069694754 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068009366 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104664476 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072059686 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068500695 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070017544 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121991921 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073223209 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113871879 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070342133 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199222046 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098852198 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073377837 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104158901 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080773962 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073936358 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.470008819 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066542294 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075051184 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067931222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070697268 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069154255 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081018677 seconds)
  done (took 22.386635464 seconds)
done (took 39.840950047 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243835563 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083852581 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086098909 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086322211 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086820914 seconds)
  done (took 1.778250845 seconds)
done (took 2.951549641 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129645332 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105325071 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06685342 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100747201 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066586712 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10412521 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106393685 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086033051 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103006509 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066577226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100465683 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066475708 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066506695 seconds)
  done (took 2.359831784 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082701465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08341041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071092749 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084416292 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064158513 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083776859 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082668494 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090692756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082590732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074357989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065074691 seconds)
  done (took 2.033520265 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081863712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085412158 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071263586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083685943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064580511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083752957 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083266856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087489525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084293099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075974708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064978469 seconds)
  done (took 2.028471026 seconds)
done (took 7.584494637 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078730743 seconds)
  done (took 1.23181418 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.534693724 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.641151814 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078534629 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100476759 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195746229 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111857436 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238786663 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083596236 seconds)
  done (took 8.308699773 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096684418 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071206456 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071503133 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071349817 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071552865 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084044342 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072317203 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07218 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072367514 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071257589 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071979034 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071280757 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070411371 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072859572 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071798209 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071206683 seconds)
  done (took 2.41554347 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097651088 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096148679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073575898 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075120159 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073286918 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072568889 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075557897 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075271209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072827556 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074613165 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077658744 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076335979 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07524507 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066301058 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076440628 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078594105 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073577091 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076493951 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077291484 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077775924 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077871802 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067151051 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075482203 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07681858 seconds)
  done (took 3.10450669 seconds)
done (took 16.223684004 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116060482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080255634 seconds)
  done (took 1.355070707 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078908171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079710288 seconds)
  done (took 1.328384645 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07758428 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06290988 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083992913 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074716569 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065665994 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065079002 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085037159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065629407 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06564429 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065261563 seconds)
  done (took 1.877948825 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065303627 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072562015 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071119117 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.0810534 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072547457 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066463919 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071100855 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068294169 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07652442 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065516174 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070799791 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086256873 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070558272 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088202582 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071400904 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07065339 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072242522 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068835654 seconds)
  done (took 2.482941511 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06272617 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06387098 seconds)
  done (took 1.303890536 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06642889 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06370891 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066620298 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067971397 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065006718 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064883352 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065767365 seconds)
  done (took 1.631577385 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399039466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125066249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328873741 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072377599 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082556597 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25744497 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066366402 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071776701 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071484854 seconds)
  done (took 2.692015855 seconds)
done (took 13.846788643 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081424021 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086170225 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100983001 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419714623 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095860743 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070001876 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116393572 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184656315 seconds)
done (took 2.341060742 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210896468 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.864801198 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.482410396 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212857978 seconds)
  done (took 2.737356966 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346528896 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082390054 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078741099 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069654469 seconds)
  done (took 1.76495132 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067629897 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071785563 seconds)
  done (took 1.327462745 seconds)
done (took 7.227570413 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179161043 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0914422 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066859848 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066041038 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066278802 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066202224 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066696976 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066428718 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066572657 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066034115 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066217174 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066349 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066680357 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066307092 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066813983 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066571469 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066121019 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066357188 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06667008 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066435584 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066681575 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066471032 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066746767 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06618172 seconds)
  done (took 2.953797341 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082148611 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068239187 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070544924 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070183994 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071061349 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070618734 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071201724 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069109325 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070564994 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068226384 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071326052 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071510097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0685076 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071158246 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069012128 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071262094 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070357806 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068599148 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068851907 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070951015 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070146111 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069140911 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071217533 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070411374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071127469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070708557 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068655661 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069120035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071094258 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071376272 seconds)
  done (took 3.315415024 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065724948 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060867391 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062676074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071611193 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062502635 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063638071 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06222648 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062843204 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063863748 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062833321 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064211739 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062899294 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063269316 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063782882 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064198213 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067181342 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080637613 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062933573 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062521255 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06321154 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066973625 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062669132 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062898228 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062832477 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062919039 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062412109 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065751324 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062341468 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06347063 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062395846 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066464443 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067218776 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06257866 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067943532 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067113364 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062918438 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066156572 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062518018 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06375427 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062734807 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062559894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061845553 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062391263 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071920738 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062907345 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064060923 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063171096 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064263548 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06333133 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064748446 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062302704 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062492093 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064992789 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063916179 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068365522 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062751 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063335207 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06220813 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063507437 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062701257 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062718926 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062075075 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065894696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063504387 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080383726 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072150531 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062249444 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063861783 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063244664 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06583202 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064317229 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078571599 seconds)
  done (took 5.857331398 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085552754 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089796989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069147073 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068157957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063487497 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063884069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072207671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063532875 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06819328 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083072805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063570945 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068004258 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068270169 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068008483 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063893129 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068581161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072868355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06411397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063885664 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068010412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063821156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072490305 seconds)
  done (took 2.745649891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15064544 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069860179 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108464542 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074604606 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072722382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074655941 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069836865 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069923924 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070114249 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070550394 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07049244 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069581051 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072559217 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070368322 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070132342 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07004826 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070332105 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070238837 seconds)
  done (took 2.59325981 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079138343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068468041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088724819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068792493 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069586629 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068988029 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073453745 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074633922 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068774112 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069089005 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074141268 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069226057 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069069566 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069565961 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069017351 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069236137 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068908143 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069265654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073925338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073498571 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073539072 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07388025 seconds)
  done (took 2.77941322 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078600062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06729351 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083810821 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070403384 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064479217 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063495459 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.079286563 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068459063 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069966737 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067831936 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069940091 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063669881 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070484617 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068627495 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071124166 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068251602 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067812604 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068406782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06808431 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064014414 seconds)
  done (took 2.594667434 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083743118 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065278188 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06614829 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072485097 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066466794 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066781479 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073408913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066897465 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067056457 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087856474 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067245803 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067155762 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073466918 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071607085 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067439387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073089333 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073167951 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072827838 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069706238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066827697 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088056708 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06730686 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073666109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067425907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066769777 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066771287 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067011695 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070695662 seconds)
  done (took 3.18740756 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065855198 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065705049 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066852603 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066499402 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066497534 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066398195 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067242044 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066984574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066098736 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066827975 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066698961 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06645139 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066226056 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066327709 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06654949 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066913443 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066151741 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067190664 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06723385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066498188 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066181853 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06627487 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06663473 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066694674 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066757829 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066260075 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066770851 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066414133 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065876848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066806377 seconds)
  done (took 3.203796145 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076426128 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07440656 seconds)
  done (took 1.357573683 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063449308 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080148455 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062676955 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074497968 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072553408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066330247 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073234785 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072329065 seconds)
  done (took 1.766771479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087910693 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076979186 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066336212 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077889035 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07665289 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086643229 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128571227 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065900464 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076191497 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066257394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084781562 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067665515 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076658214 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070936065 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076204208 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079304187 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063408824 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070851818 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067020271 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064036905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066590466 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079793778 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075145239 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06344844 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071290272 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093555271 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082270373 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06530976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0729451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076699568 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07487513 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062394941 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065740491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065870433 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06330696 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076893482 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084786853 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072484963 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078568974 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064904956 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072584935 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063021539 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074079044 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076254516 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081314128 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066054409 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065268328 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063440955 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065973787 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071960581 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062721781 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070357184 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062723805 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077791737 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073123887 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080680997 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064261 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07176117 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0722043 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072601485 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076523977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071744685 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075051358 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064727688 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081510504 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075197885 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078275739 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06365988 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063436242 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06395306 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079029893 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092473604 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075251864 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06599418 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066137101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063215868 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073153365 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066223697 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074507956 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076799867 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064768812 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070404635 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078059922 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069694147 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072271875 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071505248 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063826415 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068703617 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066385007 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085470628 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064077059 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06344881 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066333606 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080576335 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071945922 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067355986 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06591597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076661157 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062299678 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065039265 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065965879 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071246501 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079347155 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069474388 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070242457 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079010755 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074586608 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070653542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072277188 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062944472 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066160139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067340947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077131696 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062243639 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072090383 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069199683 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065276297 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076912958 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063021032 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064319708 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077539006 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076509986 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063238118 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062378357 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072158648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064655386 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067396621 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078240929 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063136972 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062640676 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062530134 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072607634 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063853556 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071740244 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067896643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071139747 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.188705521 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064253595 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070692297 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078859573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06920968 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072159479 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076068595 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071626564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064420057 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078121376 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072431009 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068398834 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075141238 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070089331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063096176 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067417531 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072012035 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064759089 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072898508 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068213537 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072444351 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066093929 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063894007 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071105065 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065692697 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067656363 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070325404 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064011782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080588673 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071899084 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063052803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063150413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072893115 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066323453 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065195092 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068861961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071804172 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065710359 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063447425 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06532722 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071874486 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074677384 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068799444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066037388 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074291289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082573128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065079594 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072372008 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06515697 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067258348 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066387751 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080180502 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076048909 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070294742 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07191517 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061292105 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073097493 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076912099 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067987319 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063648506 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068445159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069323735 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077962663 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069534617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066321205 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064144391 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071138608 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068234865 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072317349 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065151712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067911561 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071223242 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063982909 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071413006 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06623818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080930042 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072665039 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06351568 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067615051 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063868888 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076349766 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063273304 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066677997 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068067523 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066146165 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064427333 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072141421 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062522178 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077899505 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078624364 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07045061 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067720676 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064894202 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077651473 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070410544 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073661374 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072272648 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075417307 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081209258 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067724428 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07290893 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080844534 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065172461 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062368924 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07742568 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063611748 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064249516 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064207389 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064370035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073139089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072518024 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076040468 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06321114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072071259 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064474036 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067697125 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063858749 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073547147 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072148424 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068920143 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077095646 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065532439 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065017097 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072396206 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064629058 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065085678 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065291236 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072004088 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065072135 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070917341 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066901436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070823278 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066790086 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062498553 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070864763 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064517656 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070323752 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073609613 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064250218 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070989965 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070704259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064566011 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07025483 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067848746 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066518138 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071104354 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070161769 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06919834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0713288 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062279327 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075496129 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063399481 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076993919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069451424 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061281964 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069106803 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070957851 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068831613 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064377317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065326404 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069889526 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063423123 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070954616 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076007383 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065669838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079432279 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075405682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069745323 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071408762 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069331116 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069457344 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066610296 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068344307 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064404677 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069527457 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064158727 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072703797 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071831698 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070240439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070610498 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065297806 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070519421 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065109221 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062249536 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066825 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067470719 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064118411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076603115 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064866244 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067284349 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063580852 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065429519 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063332616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061553847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070703453 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071125613 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064288599 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074258623 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066586807 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070149418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079355119 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061179658 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062555133 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062504476 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06569816 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076679894 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064615349 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077826003 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069079689 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066480193 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06166923 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064443872 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06298378 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062131327 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062080657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072735924 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066350708 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063726045 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064273895 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071432653 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06500821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076787532 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06370056 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068518292 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064735291 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061818215 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067581733 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066761708 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071184202 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064935243 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065961713 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062469653 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063902037 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068492228 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070623799 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06467334 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069884341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076962174 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06418337 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071670095 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066511202 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062550853 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071050103 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063990818 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064629888 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067413019 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072361954 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072253031 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06510868 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079275184 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067071008 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070380324 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064970998 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06257428 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06366797 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064132116 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063581354 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066981192 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064971992 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077146567 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062412374 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070305124 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069027149 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067832604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074326101 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06481128 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070392062 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069774614 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065850455 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070535823 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077823871 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067668968 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071397503 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064586766 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069909039 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074101678 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066623718 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076210129 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069884143 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065037456 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070134395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065582141 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063846296 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064294416 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063490435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074219584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064628039 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.307190207 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070145727 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065716416 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072303071 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070138662 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081592168 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074638292 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075389631 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06616075 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066784983 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069282885 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070607404 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074728507 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076076062 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079199693 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07590805 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072740408 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067201711 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083037907 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077930309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075615423 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068736402 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075578327 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067994223 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074773099 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072167048 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072473774 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068343185 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074967426 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072989911 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06984802 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077670858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074821607 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067935784 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073046953 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07330178 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071849896 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065292 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067585987 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073694826 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076054638 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073584846 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066623805 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082661823 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06751499 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071567132 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068831134 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06626393 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075080025 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064399738 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0723644 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067397717 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066817705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064202672 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068635857 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067159099 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073213136 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068950889 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064660546 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08230231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079630414 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072026283 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065750667 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06515022 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06461975 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064823777 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069255059 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067501326 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073300028 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08169272 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068764786 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068749557 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064764074 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066218962 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074439584 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074290855 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064164561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064891312 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068883589 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072790925 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078280415 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065275917 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06609012 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074414521 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072976037 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064119739 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069022014 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063788041 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074400263 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083527921 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066342743 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072113481 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076460666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079540954 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066532185 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064151007 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066168884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072463936 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072068165 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067589276 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067150552 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086279461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074123602 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068461691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065200694 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073321559 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068583755 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080670092 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067019095 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069199923 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075095959 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073376792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074004403 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076353845 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077359148 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072079431 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072414487 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065307103 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070759062 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064900376 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068429307 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066968577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066880107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070474267 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072791759 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068525162 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081634063 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081962896 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068793683 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063645528 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068526612 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068648378 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064921308 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066677147 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064655055 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064497957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064351225 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064908737 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071653912 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074932114 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069651637 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066468145 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065075976 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063074138 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.216829102 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072350658 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07175454 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062614001 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065657409 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066825751 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073755805 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068413228 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067349171 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072514879 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07153615 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071730203 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063797579 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094842888 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064963296 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071600756 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067927822 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066112807 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06615665 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07331787 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069885013 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067603593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072557586 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073058242 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067441936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063481874 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062964827 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075139598 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064140018 seconds)
  done (took 43.423187907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103488177 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065228789 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063876733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064519604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074265105 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065194874 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064198605 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065715329 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065414161 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067741177 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064464731 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064821625 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071974184 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079965773 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074940956 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068578458 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064154305 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065255556 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064224345 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065219705 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072481256 seconds)
  done (took 2.810301055 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071793362 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080057316 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076682255 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081986059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073575925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069523421 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077513907 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069713411 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077917767 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075360277 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078108684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069518058 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075255911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07519068 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075442512 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069738806 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078065435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074199175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069778636 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077770018 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070635136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078022894 seconds)
  done (took 2.977185142 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066827759 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065215947 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07275767 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063296769 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064768453 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063462583 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068365742 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063744828 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068070947 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068034639 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068066471 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068166985 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072596442 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063594871 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068856797 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063586883 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110550183 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068352941 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065561302 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066116309 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063986114 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07332548 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063883152 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064586321 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068314008 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068634699 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065625318 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063648555 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064901868 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067639004 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065000004 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063991366 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071637481 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071391724 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067964909 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067652265 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064743867 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065330992 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066770058 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063684263 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07146217 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064382643 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065317452 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072201791 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063833909 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064008683 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072525827 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065203991 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063863131 seconds)
  done (took 4.647145749 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07768189 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113505711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070751287 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094338368 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079378381 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071965869 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070891594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095578422 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065726729 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066829573 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080734635 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081056638 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068286789 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069583907 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070958139 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067904781 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068681384 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066988672 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071227085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067073598 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071034259 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07220634 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079435377 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080149532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068906197 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067173478 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067267053 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069234568 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078504632 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071486415 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069434516 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070429521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078406177 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069126326 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067228781 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067141058 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080838233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068316305 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067672902 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065930466 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067510219 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069377106 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072675399 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081080405 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068431491 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073137185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06818621 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065310663 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07879454 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065922437 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07182842 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081117139 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068993171 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068376599 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069575728 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07976521 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067715106 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066399289 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068199722 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079628996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065924976 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068593942 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080509132 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067584958 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071748646 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081115491 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073214406 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069152291 seconds)
  done (took 6.430107191 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07668585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097282164 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081987789 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082293294 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0768251 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076271202 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076243695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076690916 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076472953 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079958157 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076241913 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118658824 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07206677 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077818768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075877427 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075848786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075825674 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075831575 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075693731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07601176 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075876062 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082514591 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075802806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082495234 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079579881 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071264193 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075517066 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076124939 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082502064 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075465829 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078569436 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075798555 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076247803 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082494446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077949927 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075692724 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065354545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075685683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075944527 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076137227 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071481336 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082620375 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075854525 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071906205 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075440365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074157955 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080562899 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077047783 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076170146 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079972255 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076444395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082695943 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076001575 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076302716 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082495742 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085481074 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083134509 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083030408 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076262176 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082074475 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082403955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085403714 seconds)
  done (took 6.23291305 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08124829 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072518249 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085352309 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064619759 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066796997 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0750019 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064093714 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064485106 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073212866 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073584268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074986378 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074999065 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078359627 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074962981 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074967809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077461098 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075421447 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074964752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073167026 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07477601 seconds)
  done (took 2.833526499 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078961794 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084310951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069947594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074123444 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06988052 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07487433 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069178802 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071064305 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070748535 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070108566 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076195554 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076044275 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070319072 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074994391 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0758741 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074682991 seconds)
  done (took 2.524544631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086822538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07261766 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079596809 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065703903 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069812853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064462035 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065246966 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063571387 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064333441 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078847824 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065320866 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077256856 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065522946 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06463313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065025726 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071552881 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064920754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06579162 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065104803 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079261464 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073044649 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066661096 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069933607 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06525966 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070866926 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072838265 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066824984 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069081678 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065514897 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065700859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071463902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072408205 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065492717 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066439973 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06392364 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064970738 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065616925 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065587481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071466824 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064968409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063345586 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070880873 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065552865 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066655572 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064850074 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085589661 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064493722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071256258 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066175318 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071307448 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065485796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067787907 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065952082 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073433148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06848824 seconds)
  done (took 5.130076943 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081877488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069738072 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06399758 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063140808 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069062678 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070486864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069224367 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070076231 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070437791 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06411239 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070602504 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069622479 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070789533 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069657125 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07044362 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069758249 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063864586 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07013517 seconds)
  done (took 2.608223537 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075641301 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069553528 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0737297 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068858984 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068549455 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068996874 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064121556 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064533637 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064805829 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069785785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069001003 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068454938 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064094176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068260124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069184163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068558187 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068717853 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064012688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068982217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064152015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068518931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064294051 seconds)
  done (took 2.848336061 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098606387 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086309481 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144580128 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08190346 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089994381 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074555141 seconds)
  done (took 1.928929956 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093856631 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100456404 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069159182 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069290385 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075023765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072491071 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072568762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072879273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077271161 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078416798 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072819277 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080094597 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077760459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079377889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074821739 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075264805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073028599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072731924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069269205 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082341069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072902287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077505388 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072789455 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072857688 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073115842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079985892 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077646407 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077877859 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072659297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078016629 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075664434 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072954653 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076685087 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077336692 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069439457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077703527 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073090871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082594727 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075693317 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079593964 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069525379 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075193802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077402422 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07728458 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077725014 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073529642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075632121 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071300901 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073482588 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088257633 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07566754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079530091 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075659408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077930057 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077726119 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084790038 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078043701 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079303132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075436814 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078530577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079652907 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075599826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079499322 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078279925 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075264636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079465465 seconds)
  done (took 6.42639695 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108042352 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070223385 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072921252 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077841923 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079397166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073306447 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073100858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073375435 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073731403 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070336414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109540334 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073398164 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080169721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080075441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073268673 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073108966 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073048006 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07993496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070527727 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084025419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073236811 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079479124 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079384622 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079532634 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078008119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075514646 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072846354 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072837267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072772587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072895562 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076999115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072263266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078899496 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069981075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079201579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073043222 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073200975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076690071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072670073 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075551787 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079276037 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082611221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072635397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072844505 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077648735 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071848396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071138973 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068125764 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072760121 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06991254 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078214509 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078291482 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078305329 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079744277 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0733418 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073727896 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073364596 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073261253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073288749 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075445193 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079481372 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072759196 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08488018 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073120733 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072870312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079427867 seconds)
  done (took 6.41613262 seconds)
done (took 130.778747687 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211666978 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18526599 seconds)
  done (took 1.741787763 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076557019 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10556007 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085181781 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137109036 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071706949 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105695478 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104698959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084172345 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071754329 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072028421 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073542974 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075971774 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139241646 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071868312 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07172217 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074087821 seconds)
  done (took 2.787479736 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105698559 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.220897576 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111985301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071227653 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107464952 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079948616 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071635255 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087809251 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078681515 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073257154 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080000383 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077760817 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073108358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077828454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07841912 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079402245 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072934126 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079783109 seconds)
  done (took 2.990711638 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104144247 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09650741 seconds)
  done (took 1.579712635 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177922247 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13505079 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20562976 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34479284 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153087315 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.425836618 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142484053 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140145792 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1173826 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135234683 seconds)
  done (took 3.347383001 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104156749 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198388125 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298458734 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120860366 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076106404 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111426536 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122701853 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081968016 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081258348 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081225932 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081084206 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079986379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102211995 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079764801 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078361591 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080859116 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107116075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077363129 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078739166 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079094133 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107741447 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072387405 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079476949 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077303262 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080624838 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081532148 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073556404 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072481631 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078900162 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077821377 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081529381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111162494 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081249124 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109373202 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076693954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108704456 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07989415 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077612046 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078902629 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077385341 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080668479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080750142 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081352588 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081085236 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073424442 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081687882 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073485255 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071873362 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083055252 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073274667 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082821792 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081805664 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107340619 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073299593 seconds)
  done (took 6.325348324 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109384147 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107145178 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073261064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116113084 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107944676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073626523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109391637 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102732327 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111468026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073471443 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071587863 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073359314 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082115568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085977362 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116420414 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108217522 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073177699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071431607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111583524 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11122397 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072346806 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104989428 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101820843 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11114518 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06920164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072899226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071706679 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073254688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079252141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080192008 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072158282 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080643969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083662886 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077618999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068368169 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070273324 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070452338 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078741459 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078744267 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078540199 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076563772 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070705376 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071367861 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072420037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072055934 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070968852 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079291384 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07931451 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077251646 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071006223 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072732724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071047438 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071953321 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080382736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078887514 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081967269 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081101764 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071608668 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071352622 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07387667 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082649702 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081374152 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080841953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072529887 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081462097 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071874483 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085307414 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08502038 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072273475 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072908554 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071481501 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071674851 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072215701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078913447 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079104473 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073047459 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071906578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071667345 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081732051 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077993836 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06986776 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076488564 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068434357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06923947 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072816135 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072452954 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078575742 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080561321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073013429 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071300907 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071487926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070991193 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070323534 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078287694 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080462442 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080061679 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079853496 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071788163 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080355841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079484884 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073012382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080173892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071459305 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073310796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072646568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079968293 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078985928 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080750988 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072314254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071207876 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079668326 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07982955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069492937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.0768022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078304105 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076983377 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068511296 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079966793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069006119 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078279406 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069331892 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211515458 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070119999 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078472814 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069969329 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069251803 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070336482 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08084214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073150806 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07153811 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072786103 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07207054 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080209537 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084044523 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071281267 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078953309 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079657512 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073392501 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079780598 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072438136 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079617111 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070233374 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071067319 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070314586 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082746717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07173715 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071240759 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071686766 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081810763 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069862383 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079488667 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07790289 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071047948 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08137176 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078893688 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076943084 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078713624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071067651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069547169 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06917436 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069762931 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07670389 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07812724 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071158361 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069738743 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076634074 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079245008 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06887324 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079910096 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080014413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080677013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072494591 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072430812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08152924 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079602817 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077688774 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.0777162 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077775959 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070543195 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077910298 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077444468 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069751696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085502435 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070076096 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084313341 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080764709 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0784526 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08048779 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081844893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082059567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082274506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083578259 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070380966 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071577024 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080712136 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071918089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072499527 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07951407 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072741389 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072693838 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085851692 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070053759 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079187039 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068886647 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078100856 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068724632 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070959309 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084964555 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070427117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073368795 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080350025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074606546 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07917569 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083317344 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080089292 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071817019 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073216848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081927022 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081203568 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071710182 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071704331 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073516284 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079746364 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078908573 seconds)
  done (took 18.948603091 seconds)
done (took 39.10845541 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210079721 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157788834 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189615329 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115887605 seconds)
  done (took 2.138380037 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107112765 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099062424 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087555036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065783555 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094539313 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065917993 seconds)
  done (took 1.91883287 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.295880323 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202876496 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182324642 seconds)
  done (took 2.079416697 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211056649 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200860162 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475165624 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291702799 seconds)
  done (took 2.674107168 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14218327 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08362386 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066297317 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085193541 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127403165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152727323 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095120709 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120898376 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078607705 seconds)
  done (took 2.407726851 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153100784 seconds)
done (took 12.792011618 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.209921218 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136020219 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.18015165 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103961947 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.099078493 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.210364442 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075505386 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071440482 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181262155 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.156560438 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.200651049 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.207762099 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069746971 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.23138875 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131833936 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080125951 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088299629 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.315763009 seconds)
    (19/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076327635 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102593851 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076988486 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.173366373 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068662344 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077500542 seconds)
    (25/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121714903 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.176952489 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095589731 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092112057 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077983128 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.24624649 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068419245 seconds)
    (32/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081550301 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.168808718 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117940195 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069014487 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075472119 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.212928042 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123934279 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155699464 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077650987 seconds)
    (41/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.093063436 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083280787 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07698581 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07664246 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066678292 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071669137 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068192751 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074326271 seconds)
    (49/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.168490663 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.229547886 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204768193 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121383359 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207891779 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078859808 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103117934 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.152467919 seconds)
    (57/309) benchmarking ("sort", Float32, false)...
    done (took 0.135538439 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071630047 seconds)
    (59/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081667285 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.215896083 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086783626 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.068781845 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073700239 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086828754 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067675886 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077406672 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182128643 seconds)
    (68/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.141300466 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095937899 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067279551 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204870738 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077454466 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075479292 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068541301 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11757464 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076143895 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.174757408 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07900666 seconds)
    (79/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183440736 seconds)
    (80/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.164802391 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068046146 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071140381 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.130522642 seconds)
    (84/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076313782 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080419685 seconds)
    (86/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092821101 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068023955 seconds)
    (88/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077562922 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.199091132 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125114523 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068565976 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.234007288 seconds)
    (93/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.281585917 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105661715 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077594417 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068606105 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079139535 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145898587 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07818439 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067584424 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070129905 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176573906 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075110265 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071619818 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071794017 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068566389 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.219394043 seconds)
    (108/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069948589 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067654648 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143000104 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07705504 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17918695 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081342374 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147657488 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075564501 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076222411 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069130593 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075626081 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184426996 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077229926 seconds)
    (121/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079688903 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07709642 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175078385 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.176408843 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175358521 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092954881 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069317174 seconds)
    (128/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.130834277 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077485219 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105824827 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076791941 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091680428 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094983601 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197261431 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078463466 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.068858441 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068236852 seconds)
    (138/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095551766 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080360283 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076925073 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075330095 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133482871 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076852461 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06877314 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076768633 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067551557 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.198582462 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079379492 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068141844 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176340011 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068349386 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069050323 seconds)
    (153/309) benchmarking ("sort", Float64, false)...
    done (took 0.134140265 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073309418 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075137497 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171616533 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067236734 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124093101 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1435102 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071115154 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094821945 seconds)
    (162/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.130684955 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067893167 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081953911 seconds)
    (165/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246342089 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.222451243 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144227068 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094889262 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068157795 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075778854 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068195011 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068897792 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17236916 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091186858 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223402203 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139818999 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06840876 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145795728 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132616097 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068055229 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070343203 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077628593 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072935747 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089857355 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068584431 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174021451 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.129816034 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068352325 seconds)
    (189/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0771053 seconds)
    (190/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077370487 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068728759 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140350665 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068063681 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076123751 seconds)
    (195/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078569952 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074613636 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06831141 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080313937 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068918248 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075650761 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067400216 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18372172 seconds)
    (203/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068393826 seconds)
    (204/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.081033267 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08998703 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068356365 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068207704 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080195568 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07591837 seconds)
    (210/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068805378 seconds)
    (211/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068789467 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067899933 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074387671 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.348583959 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186897678 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097559702 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181772165 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079731264 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077882874 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138406787 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071022708 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.129768391 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112800504 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081720454 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141023278 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12388301 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128294025 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069536157 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067855597 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07655813 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070212315 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.081008602 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075623459 seconds)
    (234/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079224042 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076197616 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081347977 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069113826 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078265138 seconds)
    (239/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069108308 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071965256 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068532698 seconds)
    (242/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068632464 seconds)
    (243/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070710582 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088088573 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081774486 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068850724 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069237228 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122757761 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092642866 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091095207 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067884872 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067158489 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095181027 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182242744 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0671664 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127377633 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.22426478 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138632046 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091609139 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134448784 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092127422 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069728405 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08093894 seconds)
    (264/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069849402 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068234193 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069716892 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081927471 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0785643 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0697161 seconds)
    (270/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069584004 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074887276 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 0.174288411 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068147785 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089288909 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068617075 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096739662 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067903296 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069364479 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090309459 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068258596 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075559013 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096912596 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080410803 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072740387 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069020482 seconds)
    (286/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070592247 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06856281 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147303287 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068835321 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069479394 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081313084 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068784785 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077081295 seconds)
    (294/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069835646 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082635546 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069097618 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069223049 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070926178 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092063121 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074734196 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069157035 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067928927 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070058643 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071180945 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069026066 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069366401 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07443787 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067426691 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068777943 seconds)
  done (took 33.970149331 seconds)
done (took 35.386842355 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089511946 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100856059 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076038624 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097025301 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085051164 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100141327 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077829766 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082543693 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084991751 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083329286 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08260313 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075641926 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077791486 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0777664 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076048364 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100632692 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083362196 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076406977 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07659311 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06781988 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076991647 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068766546 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067895776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074944121 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080428139 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076615261 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078850893 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078338504 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068563732 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068484981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073359677 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07735849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068313254 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081667445 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077829921 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07727745 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0790869 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08173808 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068522095 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068125426 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079179832 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068335375 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076344235 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075068972 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073593327 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075147711 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077245492 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081290513 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10070616 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073412512 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07873374 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079865241 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080100449 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073909019 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073258754 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0761512 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074359995 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099425594 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07490885 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072423281 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076559261 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077999245 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074808061 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076781539 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076948161 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079135286 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081307513 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074853225 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078178712 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075292397 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067837587 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076443173 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073181833 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068024848 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08279395 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081418965 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067917532 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072964642 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076636677 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077487202 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068553353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073384807 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067726836 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073138147 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073535141 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074477407 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073211726 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075288885 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067915554 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077085287 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076023901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076134265 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067984308 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081169696 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068265589 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074603574 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068671545 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068282265 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067944919 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073269944 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068043731 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073716945 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077610263 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067512917 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073360589 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082650252 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068737083 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075326058 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067463124 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067757879 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079787342 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078329723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067984119 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073336825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067268094 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072977453 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067562168 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067303085 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067548825 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067716204 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07212818 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067522894 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07240951 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073111582 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080016941 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067264266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072558955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073093609 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067433798 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074745814 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068425908 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067549208 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067429519 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081434746 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072785144 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068347151 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073752178 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073469648 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075824459 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067139806 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077317409 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073836914 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072269981 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074011251 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067207834 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078885738 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072783688 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072599844 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06716408 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068566687 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06694574 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06737233 seconds)
done (took 12.950662754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071580372 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.120419723 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096124814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095982717 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084643544 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069304553 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077205311 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095066429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070583139 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09989086 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091754231 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091863091 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113051982 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068198955 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068881135 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070030406 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07095985 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081091188 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097459723 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09198983 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109852384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068807389 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08923347 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090437181 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086565039 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09396028 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070358443 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070282689 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071957615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090550908 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095113752 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071685939 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069524543 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093947455 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087816392 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083255607 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069903016 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07743932 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069665033 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068991415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070752008 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090909304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077922319 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080888357 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070377353 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077076908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07025163 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085870847 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086791982 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076913275 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085078697 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093944276 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073668935 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086327675 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06869326 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085385214 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079131928 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069435052 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069560837 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073792702 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069152139 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071731286 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081507344 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07890068 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074160179 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084729603 seconds)
  done (took 6.83505258 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085573615 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099942381 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085645136 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086036133 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068640536 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069324846 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069082672 seconds)
  done (took 2.061409773 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067635864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087360587 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091021943 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090575199 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083119873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092547109 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077272936 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069451054 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099508664 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068417563 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09029913 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101086571 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073425657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081770498 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095217518 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069260643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094461703 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069510799 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07014289 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094472929 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074366025 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096728599 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080850666 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069501051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08262505 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069540901 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102429827 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077593738 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070800455 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07060343 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070336491 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096819331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081300801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081563878 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070669516 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084671154 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083433148 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072745201 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080869343 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079606002 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082878574 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070479639 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068285281 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070603547 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072569127 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081108095 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068002908 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07070708 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070440516 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089013455 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06820748 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081765997 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073914943 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075653883 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075056075 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073548496 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076408112 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071202656 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089092496 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070908056 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086633467 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086502023 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082794944 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086950947 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069488639 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082214276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082809982 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070445656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071261627 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070704949 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086334399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0726653 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071665767 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081022774 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069167224 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094169337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094109142 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069450229 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083371711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070161111 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0703022 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081157398 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094184119 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075420963 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070909988 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073914415 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071339184 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072382445 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068013407 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073276586 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070719701 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075099624 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070554893 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073628572 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072232179 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086486491 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068476773 seconds)
  done (took 9.095241535 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070580964 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069572157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07138806 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069224047 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068205044 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068677718 seconds)
  done (took 1.945454405 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091544412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068239024 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081037506 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068549813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103937181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083476805 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084315699 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077889272 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083273361 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080461053 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083961894 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086403477 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087709626 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070526818 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083089426 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070289177 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08470376 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073047087 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079684005 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071098141 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081320929 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072189179 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073101829 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091015443 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074117135 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071752124 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07988591 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082203912 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081772347 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080558131 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073164998 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074543738 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077500454 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078151742 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086041627 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07792352 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071893936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074475526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071037981 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07167658 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087022886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070867815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070684233 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074246277 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079087707 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077876533 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077274268 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079751776 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085610989 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076965356 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076898245 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07100532 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074110323 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075400502 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075944441 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076976786 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074402566 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08346916 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070040256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075890613 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067876958 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071436523 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07717374 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071607123 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075349409 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074184589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075801243 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070144984 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070683405 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068598148 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074438983 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069064665 seconds)
  done (took 7.050904451 seconds)
done (took 28.496253354 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.511501075 seconds)
  done (took 1.983937918 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623102081 seconds)
  done (took 2.127477707 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.553409594 seconds)
  done (took 8.055534646 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403358143 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472905268 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747703794 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133951943 seconds)
  done (took 3.296519885 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704754079 seconds)
  done (took 2.220510763 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237607157 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226257559 seconds)
  done (took 1.987523268 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350067801 seconds)
  done (took 1.857676922 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.062547906 seconds)
  done (took 2.569061426 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240440134 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161397815 seconds)
  done (took 1.920778818 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446730262 seconds)
  done (took 1.957162552 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.240135149 seconds)
  done (took 5.752322283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220074317 seconds)
  done (took 1.76171471 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23709569 seconds)
  done (took 1.750647316 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744443178 seconds)
  done (took 3.267423607 seconds)
done (took 42.024970375 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084879865 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084889643 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084692129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080894452 seconds)
  done (took 1.832490334 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075876528 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071518497 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075908021 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071617353 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075421148 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072846727 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074649967 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075720304 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072952579 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073430756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073083996 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072944653 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075848658 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074931159 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071448482 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075928572 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077044949 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072888773 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076100871 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072974367 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071171905 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07576924 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076008109 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072017505 seconds)
  done (took 3.302901621 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081206298 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075599101 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077701583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074310084 seconds)
  done (took 1.828291842 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079308669 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090865308 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087989585 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078863381 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091897564 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085728229 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06850504 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069339646 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070834236 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079343002 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068612349 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096501398 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089027235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079213464 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081763214 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065776173 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067754803 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088191351 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08025661 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079853548 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070730816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079335858 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068629914 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08974306 seconds)
  done (took 3.427218264 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087363263 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068312907 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085524332 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09467603 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09607916 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06843524 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085129137 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09730577 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141070192 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068590736 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074064048 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0684365 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108868546 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068586794 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085463285 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112533981 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115420528 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072183718 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102534864 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068338761 seconds)
  done (took 3.293887451 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086358786 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071695119 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072793134 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067756927 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078503542 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075423311 seconds)
  done (took 1.977740205 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070438066 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069930561 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069818307 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069503493 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074345907 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069557604 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07138072 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070309272 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070660949 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069878319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069722949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068876973 seconds)
  done (took 2.366511028 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.212066518 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069785201 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071005862 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06631727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07265787 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067192521 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083737164 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072297386 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089284774 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069012907 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069648839 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071654606 seconds)
  done (took 2.538921276 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191969386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075969031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223606282 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147242885 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105176257 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112449677 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109966733 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106971617 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133880238 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098288553 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152043652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160310319 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103459723 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125448586 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087516125 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119029306 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143696779 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154829003 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102888655 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154431876 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133883296 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118622263 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139208653 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097388014 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102382859 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118750242 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072915709 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078981098 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161308063 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125869347 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138263817 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108305222 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092594913 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171072005 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155576905 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130846693 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138478718 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081742394 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.120468286 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127953087 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192575559 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086689271 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150176151 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103438439 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077453255 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121923832 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111641538 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114313641 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099089449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085363827 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274009337 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171951525 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126654461 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083229819 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114551941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105091195 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108422459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110427734 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166910795 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146737237 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120017179 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070858464 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104146789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143378094 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124787455 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103909316 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117106825 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088854811 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123004017 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146810799 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127556076 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134045505 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111722335 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085261738 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114991832 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13185351 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121041276 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158236351 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1146576 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071337922 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115536627 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097758392 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080188581 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145486012 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075837434 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165456507 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096886269 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.122196829 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123659674 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106017329 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10516582 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152415154 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137073616 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103801232 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086633076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102356291 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11758097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139814465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087156415 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105666649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112879545 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080467163 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130975872 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07518427 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115036208 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096108767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117051022 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119555868 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079435156 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262285113 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098704932 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098730601 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122259529 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149386368 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087779144 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081459114 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158290055 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116001037 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102639908 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136453311 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151002841 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120572767 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096821751 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142112218 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164262428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08930322 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152901337 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102336757 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083880691 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105869874 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117794732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109517202 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119644543 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078441135 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111654955 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152749788 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072412076 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092764185 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123211241 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079360065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078544961 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100815194 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099329984 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093327243 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101217165 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104056132 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132989417 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117701503 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103091966 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12108269 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09675416 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157789247 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087585031 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100668048 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103480785 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073047441 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129071182 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14861968 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079187321 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154234533 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119504742 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112759538 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113500715 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081167504 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129504554 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077264436 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071804237 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134594576 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107135187 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104132281 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14068656 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255677875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11801479 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111753024 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124930994 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121595895 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121164144 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102936781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087365276 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109980177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122485759 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071200738 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088015564 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079293144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098658123 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090590309 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08097359 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133655183 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116341539 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103866717 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108371613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093833121 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138474511 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076280779 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120912632 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119521194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093685973 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143808503 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142657386 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122944627 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098308992 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128802254 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072225963 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074952937 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089233555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12045165 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084494696 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084407743 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111413691 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143684172 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12119887 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129358943 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115594308 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111301719 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146433516 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070493707 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115457855 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138590674 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116005026 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104504256 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091082497 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099165743 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136851631 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102010752 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171843709 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107219954 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116008396 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147055963 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096761978 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076315024 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098855247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121743085 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243591773 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135550665 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09554637 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08384518 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102859772 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076141118 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094160442 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118679744 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111510127 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127733305 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106843265 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121413559 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075589897 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107781924 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114274846 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115101478 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081230952 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111233628 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155958618 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09332877 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109972093 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14146592 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07923265 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13604233 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163425155 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134522032 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081867493 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100500914 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113132206 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11967514 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112490701 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130300809 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09988585 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127881683 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104704857 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.081732322 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085732885 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092063878 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099294906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108413005 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1007765 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106504025 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092147319 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122157349 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098595502 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104426361 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110933363 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096731056 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093956723 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093705561 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162550107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109764744 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157220914 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094786495 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134653964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150027557 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072838255 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078212663 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079335923 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128538442 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08089586 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266178884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105590651 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108954756 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113618774 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130527426 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092562605 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069302322 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104105034 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126100431 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115052034 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092516325 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099571461 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148545821 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113929737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077131699 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110143965 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11240243 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103029089 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163655209 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081967443 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104608728 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075066846 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076806714 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119009421 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142037561 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085981883 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104008508 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115532871 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106185315 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119851062 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095023198 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103786726 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122621629 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140533428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123362446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090175702 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109397018 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125105353 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148018898 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102868225 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100564317 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165436451 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144127816 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150917179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088107783 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111106802 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111206405 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106955204 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130661103 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084226987 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154197905 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081266424 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127691118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096568687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086410673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12120569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.105626564 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084890322 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136030349 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108652708 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079266212 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225032022 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106717528 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109895366 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09793188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07296675 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131051886 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071920999 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126320562 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158574383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080780459 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102372848 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09514964 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081967489 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101646262 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100880474 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086024505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100534208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160520068 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084850242 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137120728 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125196362 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105052431 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13020519 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101739315 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642524377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079556773 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143500516 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112913501 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167672374 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095445029 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111782286 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1060961 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114572184 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134686126 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099736724 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177342068 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126599202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112716634 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079438215 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100330139 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09922864 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085682013 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102503923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107559384 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107802911 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091360462 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109633789 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116779686 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082089148 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095356777 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145902322 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112795649 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133744212 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130254106 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081554123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1109081 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127118097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077542286 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111123665 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2919737 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101645766 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096527377 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080283353 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097074248 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159441645 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072479302 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152411885 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115087587 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108001232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109747948 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108661698 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123353806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102206377 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115610344 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093305131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105435898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109121986 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082137656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076226408 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099712048 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105468229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129351931 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094693929 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0996715 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145549996 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072653285 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096316572 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108350962 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135332677 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159907846 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101902876 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081633691 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112828869 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113138879 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106613404 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112779508 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07916203 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078731619 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078882879 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098031575 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119213718 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106486487 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111197542 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104394747 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150662734 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081304318 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221078999 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093876987 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099953606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086669822 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07789546 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092767875 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092553839 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099024858 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104429858 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160253052 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090377163 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086628565 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089548313 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074548223 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082839799 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120417463 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105065914 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108727295 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099309448 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.228295013 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099619989 seconds)
  done (took 56.836925591 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105957283 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080175416 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101030573 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143485587 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120971328 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199011443 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149310683 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188451174 seconds)
  done (took 2.697074525 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071158193 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097330982 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10270149 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08336234 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067648444 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069361771 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229963085 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08187287 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066767201 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092657542 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079769236 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071445285 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.457015823 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067890928 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069466782 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079653893 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070219352 seconds)
  done (took 3.456258493 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378231819 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.59300227 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352715678 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075203284 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.868749886 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088290132 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.169363061 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136425692 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081130035 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518574448 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365089582 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129885676 seconds)
  done (took 18.373896032 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084717323 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07779017 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092698693 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091615186 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080117221 seconds)
  done (took 2.039448247 seconds)
done (took 105.505264149 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083583134 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.543320532 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068544816 seconds)
  done (took 2.255080098 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094043938 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091215906 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089835527 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0859104 seconds)
  done (took 1.988569278 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077339726 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079461789 seconds)
  done (took 1.773118191 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234216723 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173415117 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093853972 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085316055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081431453 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080137803 seconds)
  done (took 1.861545782 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075564299 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073899439 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073665813 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076391572 seconds)
  done (took 1.910262992 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073128333 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06833428 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070061645 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071318146 seconds)
  done (took 1.892256152 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087425633 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087081209 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080396755 seconds)
  done (took 1.863277746 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103592312 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093729658 seconds)
  done (took 1.806563062 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083378521 seconds)
  done (took 1.692178715 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093791714 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101283789 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129950964 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113304151 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140900105 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117066509 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084055269 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08836344 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07790539 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085977468 seconds)
  done (took 2.642316666 seconds)
done (took 21.883521445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082431229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376263493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360292041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091141383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671081064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357364539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004910805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092357719 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107718468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069628157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087580272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651222751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.997321997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330511707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986945559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33184195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654955263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072180929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071353471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072211133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993107603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071467723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071844692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071641534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654287484 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376887933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073037348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332584412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070493958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075030348 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360433223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0724177 seconds)
  done (took 16.283343161 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074136188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125133673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073693776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084895545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070874736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070484852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073318316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069757524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117547623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069522763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088403777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071495055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076107193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073523916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093913844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072512458 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075857117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072413433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070521072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07201475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090412363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069964454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070380405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069880237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069960765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082491547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071390388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06925055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069856579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07366925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075112486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071260369 seconds)
  done (took 4.102265692 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12114519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128606106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073740011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106676959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117328558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070968593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146063603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09346784 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120372313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069660587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087160702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069393857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103403446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071424856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091419843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070190585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075124985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073212699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071929882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072925379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089118802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069325121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070852083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070701724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070550264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084727252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071175345 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069971281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069960806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073771651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075490239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071248171 seconds)
  done (took 4.347317223 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073609612 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074805072 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081152423 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08137046 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067593749 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070543211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071378601 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068517305 seconds)
  done (took 2.217988416 seconds)
done (took 28.570310105 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08096054 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070195312 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072857357 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087648985 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074262014 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078919093 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06588905 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074996325 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072006997 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072882357 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073697417 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070282895 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070526885 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065236701 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072706999 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069269123 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084140291 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073291002 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083533882 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08378294 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072183123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075081537 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078150173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083720119 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083868454 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084016895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078974474 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075659087 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070763567 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073806577 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073795905 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082486404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083677032 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083810709 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069583602 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069887454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074702805 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071126972 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085336169 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078127626 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071380579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078969021 seconds)
  done (took 4.791188725 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087532392 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090471977 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082011203 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079268656 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089827992 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082605657 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086296731 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078182212 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077883094 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085765869 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073725445 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080993144 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079603808 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075210399 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078532242 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076684116 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081102119 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073851525 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077922574 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077678364 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08663654 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072723885 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087325974 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079130377 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074745694 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080872947 seconds)
  done (took 3.73612831 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076219385 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087581247 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094922433 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147044598 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114179883 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082794211 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084020237 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095428664 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099537798 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070921709 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075557695 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094997022 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094923732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076342595 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.114454942 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087093508 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087161016 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07236447 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077516984 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099961398 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091956471 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088272388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096505245 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08659029 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070320087 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073417434 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075399119 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0874318 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071462756 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079903117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071058521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072498007 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069687301 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079434446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073208324 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070612217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094209955 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079614475 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083193451 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0710375 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080218407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070444276 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092963725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127453306 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067358733 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072115798 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071484046 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079264246 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067558462 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094694508 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079994523 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068748795 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070746174 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069749895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069368511 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072953543 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072278694 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072849911 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080333011 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07730345 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090870793 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076162811 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086567998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06867897 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080379911 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069312996 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071507895 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069260457 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099153997 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072104127 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115352949 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071182045 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068871801 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081778326 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080588971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076936768 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069962176 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088394344 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082121553 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074276705 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079259613 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073599432 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074023489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100471586 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070669411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069901129 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068591754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074130465 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075763496 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070196362 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082723528 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069474326 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074272275 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088600939 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068112523 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068848895 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071689896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070374645 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067711466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078464758 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071838416 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069193522 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080003951 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070583725 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072313096 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081714786 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076969616 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069007017 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072885416 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074021498 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07107803 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070673311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07294281 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069958071 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074660987 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074689189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073369019 seconds)
  done (took 10.95209728 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168204275 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157064313 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073075177 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149932849 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079736527 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082803862 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155716157 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098923755 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071196198 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072720409 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071225009 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113349539 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108653128 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121321867 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082773766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071852883 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096631322 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117874469 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1570641 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151168404 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093757673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079423893 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073896155 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072400232 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072717495 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080891945 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086371628 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07702994 seconds)
  done (took 4.503047479 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080204593 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104800407 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073248327 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090502893 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087755009 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069435821 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070770824 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070429831 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085435896 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077882314 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069461659 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074034813 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07315288 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072283461 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069526281 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076836961 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07695255 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068385077 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07504137 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077009147 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081292803 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096213975 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07518087 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07132937 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073515045 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070923013 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079036069 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08123227 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068703367 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103967634 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066308262 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07379111 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082750789 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069248065 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0681259 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069001778 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070040393 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070025185 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07059537 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068699156 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06987485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07520683 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069943359 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078006321 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081549628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072339357 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071495233 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071584384 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071694287 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066407956 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071586644 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071162522 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07207586 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078246843 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075113628 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073809034 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07219816 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099045398 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076787065 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07106718 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070637642 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069717104 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071726291 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078833441 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083874386 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070785785 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067129861 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068747452 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081497328 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08163861 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068401411 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073294492 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066589478 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070500305 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071764611 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071523959 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069829808 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068801305 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070629714 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07100027 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071637319 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071085173 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070491821 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073921159 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069313416 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070005526 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071006335 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072737478 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082208359 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070203429 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074638187 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075476993 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06991855 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073493693 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076448441 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074203871 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08218739 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082303634 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071375397 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069406045 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084841108 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07368186 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070755352 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077531435 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075762931 seconds)
  done (took 9.500497122 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094158662 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070883848 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087061752 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094454884 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080503668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076729457 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081131818 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070563202 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087128962 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075429508 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078793707 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069779165 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082023837 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080780095 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07112547 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081857114 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074619618 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088662027 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085482369 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069544203 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079735054 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083916419 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082607822 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084981013 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084576196 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08604151 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083260235 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080795055 seconds)
  done (took 3.955009262 seconds)
done (took 39.06062628 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.728181004 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.956625828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.702412152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.934116561 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.756175874 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.930265606 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.792185958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.697510943 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.863502049 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.736404761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.044959685 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.180434877 seconds)
done (took 65.099036628 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.745813046 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852589805 seconds)
    (2/2) benchmarking "String"...
    done (took 1.956162082 seconds)
  done (took 5.448494773 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.904076145 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.369987561 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.930881774 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.705711919 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.706574816 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.969022674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.489801077 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.170399505 seconds)
  done (took 29.979541674 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.868766239 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.920781503 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.390424123 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.428861514 seconds)
  done (took 15.287760827 seconds)
done (took 62.086279936 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.719733303 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.74790582 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.746905713 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.697433008 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.789557039 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.713384829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.820720702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.705395795 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.697728394 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.702208266 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.705436683 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.12661218 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707169941 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.84619403 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.717507963 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.700162467 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.721860518 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.245483087 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.852102139 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.716514537 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.710754498 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.747195827 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.705010931 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.703314864 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.711413941 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.698632601 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.094405384 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.709262817 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.527248831 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.699332336 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.743232891 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.0823063 seconds)
  done (took 201.44659113 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.704215442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.704868363 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.771514688 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.732805292 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.151176839 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.895082346 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.807997729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.202788637 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.708950786 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.715106328 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.949713318 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.705379545 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.973721803 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.737712042 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.73756924 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.704316755 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.937644329 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.998821581 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.743644674 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.867083699 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.707859309 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.799086602 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.758171412 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.946312886 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.718874294 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.795380449 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.714051812 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.717302831 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.892838755 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.915549463 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.707894955 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.741929369 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.903672656 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.572075051 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.70836922 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.714073585 seconds)
  done (took 167.701666902 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.887981408 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.706666995 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.706348686 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.70531873 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.709935299 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.701882624 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826558226 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82554911 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.377274605 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.245979601 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757419942 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.708046109 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476884119 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.704281297 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771584034 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.713793842 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.704905517 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720511048 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.730827367 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705622281 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703168359 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833955787 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.715203696 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.702691671 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712543113 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.705213221 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711780429 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.087450976 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.702333947 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.705979032 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.7536991 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707905346 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711362102 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.506146891 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.948372326 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.700888428 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704945302 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.705510432 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523272656 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786332419 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.703275748 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711805284 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.702302695 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.921655188 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.702616269 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.701418772 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.704829899 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.705398294 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.813860227 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.703598396 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.826339421 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.705086547 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.185230868 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.706172144 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70380353 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.321468879 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.293949558 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.706827857 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.708988473 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.707659494 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.70471135 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.706467004 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.712434591 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.125627986 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.776832538 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.708930286 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.709181009 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.712885863 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.703185975 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.798070762 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705205258 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.914738494 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.721308759 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.835415151 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.82720786 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.707025019 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771723295 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795140018 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.705293401 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.708096487 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707994837 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.707177009 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.788847062 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.703111211 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.784158579 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.706390938 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716113632 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.710056006 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760461003 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.779643025 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.704367922 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537433791 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.708775121 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.707433097 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941422536 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771940291 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.705454959 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709041589 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.78704477 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826716179 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.421486461 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.708970819 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.031077927 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.785348897 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70749984 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.842677295 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.711026265 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79134535 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711304174 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.713100974 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743842836 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.710815232 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.722982488 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.707475885 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.081356845 seconds)
  done (took 392.827607208 seconds)
done (took 765.558404423 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.315076322 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.269707506 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.363662552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.289651064 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.260864831 seconds)
  done (took 13.142197596 seconds)
done (took 14.786601767 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.785756261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.792828441 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.730749563 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.792945261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.728021927 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.791067734 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.776218577 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.733264062 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.761280944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.733613063 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.760363844 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.731479528 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.718618253 seconds)
  done (took 24.477997853 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.940071005 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.940013442 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772924112 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95983955 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748264476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.93647354 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.862150049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.852620936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848504057 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718135123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.718430947 seconds)
  done (took 21.942060034 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.935605242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.938289272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.779823589 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.938860198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.749575884 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.943549484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860163413 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.852383442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.862858043 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.719088432 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.717704996 seconds)
  done (took 21.941918567 seconds)
done (took 70.007650003 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.712189285 seconds)
  done (took 3.355936652 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.729558107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.888591194 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.713542472 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.715984712 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.713283897 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.713563089 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.715147365 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.715263447 seconds)
  done (took 15.550569133 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.711933279 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.713835214 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.713827497 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.713179672 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.712611722 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.714389453 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.714294537 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.717196799 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.71574545 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.71339073 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.715586508 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.714557559 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.713960844 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.712736663 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.713471212 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.713567631 seconds)
  done (took 29.070830363 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.716295527 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.714510992 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.712276249 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.713634631 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.712946702 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.714234855 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.713810981 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.712580718 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.714773556 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.713287623 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.715944695 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.712889434 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.713449576 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.715550119 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.713693597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.713324642 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.715120443 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.714265674 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.716975687 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.713938987 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.713746217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.714768556 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.71419053 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.71363356 seconds)
  done (took 42.788183052 seconds)
done (took 92.408936657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.410048098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.548649041 seconds)
  done (took 9.60416996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.718088638 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.715389431 seconds)
  done (took 5.157608625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.716708484 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.716209604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.717348617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.716541517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.716799945 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.714487504 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.714377111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.715900798 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.714175808 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.715845503 seconds)
  done (took 18.806443956 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.714850923 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.715543569 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.715613248 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.715764791 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.715148683 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.716271383 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.716837811 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.71699385 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.714971664 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.71554356 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.715404798 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.715670864 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.715854508 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.715866857 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.71661867 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.716750209 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.716098319 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.715697637 seconds)
  done (took 32.533115514 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.715230638 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.716485346 seconds)
  done (took 5.078705559 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.717450855 seconds)
    (2/7) benchmarking "second"...
    done (took 1.717080402 seconds)
    (3/7) benchmarking "month"...
    done (took 1.717164627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.71593903 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.716611924 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.715339826 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.7164415 seconds)
  done (took 13.663516976 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.717959032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.865716769 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.929425296 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.35338262 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.718579979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.719404467 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.631341864 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.718842948 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.720851969 seconds)
  done (took 19.024359577 seconds)
done (took 105.513932948 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.576587461 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.711950336 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.975702553 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.778691374 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.78186671 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.054179852 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.75255568 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.98831333 seconds)
done (took 42.267654104 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.75420414 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.459516457 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.496487279 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.745967659 seconds)
  done (took 15.350631424 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.715109448 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.030210418 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.737883467 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.586485192 seconds)
  done (took 21.723643907 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.082955087 seconds)
    (2/2) benchmarking "read"...
    done (took 2.062352082 seconds)
  done (took 5.800808893 seconds)
done (took 51.281072463 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717511623 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.717589576 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.716682339 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.718559168 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.717003559 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.716950966 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.719791907 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.717857606 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.718747484 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.716174534 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.718200667 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.716751087 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.718488006 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717123369 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71900273 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721235561 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718893147 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.72024273 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720589531 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721577132 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.720162559 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.719914862 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.720137341 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.718502089 seconds)
  done (took 42.898401532 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.718187892 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.722512388 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.717044588 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.718400255 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.720885654 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.718437021 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.717922213 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.718624853 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.718732206 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.718511162 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723852205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.72020919 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.72108466 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.72001175 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718499609 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.718877334 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.719418514 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719646221 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721108395 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.718478975 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.72025686 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72168186 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.722102927 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719646204 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.720726882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.721802257 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.720642599 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.720282431 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721264103 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.721442659 seconds)
  done (took 53.253024259 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.720363023 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.721660763 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.720677481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.721743144 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.721107567 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.720462527 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.720880139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.721459313 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.723205939 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.723162624 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.71864589 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.721906805 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.720813281 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.722741491 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.724193849 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.721930881 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.722627161 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.72182315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.72152588 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.720221019 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.723748178 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.721839321 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.721298735 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.722028904 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.721398543 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.721761777 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.723448747 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.721695358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.722878346 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.723117599 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.722800539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.720064767 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.722942243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.723476048 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.722937925 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.722416493 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.722031046 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.722907495 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.720659003 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.72501156 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.720900693 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.721660387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.722929906 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.723484165 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.721706906 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.722804777 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.723793797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.724189334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.722403466 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.728864788 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.723263989 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.72423961 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.723669933 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.72247759 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.722372332 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.723904801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.72321403 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.723146829 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.723875746 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.722720846 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.723270275 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.729021692 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.723324657 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.722798925 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.723412996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.7222224 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.726134785 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.722080735 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.727583853 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.726533756 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.726171488 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.726599258 seconds)
  done (took 125.69810217 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.724956894 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.724356007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.722270659 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.722555749 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.722770458 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.724343281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.726235894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724157334 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725022733 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.724946552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724158366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.728319322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725172856 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.723953513 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725496877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.72533476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.725788614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.724590941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.724436135 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.723922342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.724744599 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.725117381 seconds)
  done (took 39.606099851 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72374087 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724733909 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.724168709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725371973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.725411628 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.725137553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72544297 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.724332783 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725248799 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726460552 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724522683 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726532852 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723716785 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725721092 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725776825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724927804 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725314714 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726101232 seconds)
  done (took 32.710425532 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.724737907 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.726590349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.725482598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.726278673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.727514036 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.725569601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72710865 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.727694319 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.72509088 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.729777107 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.724410393 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725974186 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.726925389 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728346421 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725945086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728237554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.727949967 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726414665 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727115791 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726422939 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.728628498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730026293 seconds)
  done (took 39.650490216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728084073 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.729520426 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.729770884 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.72759131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.729691029 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.727457705 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.72654922 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.727290401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.727068109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.726845518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729845588 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.729092396 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.728368847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727520039 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.727702444 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729694477 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724933537 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.728002131 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725804999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.729027239 seconds)
  done (took 36.218959721 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.730281825 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729174262 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730979946 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729759614 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731934884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.730368697 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734094263 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.731294902 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730540364 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730780368 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.728647208 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730194699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731910208 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.730089763 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730040761 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731741596 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730318895 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729772484 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.73304831 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727032279 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731409525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729410419 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.729565839 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733829417 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.727234171 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731790336 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731553427 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732054404 seconds)
  done (took 50.116341371 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732083855 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729238634 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.730530767 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.733568828 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.731529268 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.731380763 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.736754938 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.731148609 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.730550814 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.731152099 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.729935917 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.729967917 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.731225923 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.730887171 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730391863 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.731560815 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730128747 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.729674926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.735125059 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732174873 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.7311712 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732532176 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.730420957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.731283143 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730315589 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.730466399 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730616007 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729073051 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729042978 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.733585024 seconds)
  done (took 53.598181718 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.752753541 seconds)
    (2/2) benchmarking "in"...
    done (took 1.752594137 seconds)
  done (took 5.166708749 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.729803848 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734305042 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.730691155 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.731754938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.733252658 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.729747939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.731792874 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735181521 seconds)
  done (took 15.517437269 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.732911411 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.733759707 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.731978035 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.732160233 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.732367376 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.735054856 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738560678 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.732525186 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.734689097 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.735329631 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.741729132 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.743922428 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.735649204 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.733031706 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.732966985 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736263227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.731333575 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.731431496 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.731788807 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.733660669 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73238003 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737680422 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735363097 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.732302232 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.734325118 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.745458334 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.737457274 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.735592584 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.733988574 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.738422018 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.736422781 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.734419696 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.73637052 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.734371922 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.733479694 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.732871753 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.742831328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73610004 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.745114206 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.734437506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732713859 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.736523801 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.735546415 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.735776743 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.738706857 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.734547952 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.734287502 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.734531245 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.73506121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.73776663 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.745414914 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736069412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.732665524 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73877349 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.736781399 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745664153 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.733169013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.739886251 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.744614952 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.745803923 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.746749339 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.748791085 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739512219 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.737148907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744241405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.761357553 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743544468 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.738215763 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.735452099 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.734783743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.74577633 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749091906 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.746524296 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.738626459 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735469917 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.736503333 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73625284 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.737218675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746513831 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.741433391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.736144503 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736185076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74549551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762414482 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.736560502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.733958179 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.736699026 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.73591562 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.738849153 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749583916 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.738212391 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.736779868 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.736158966 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.737945013 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.739416315 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.735991458 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.739414488 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.736408133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.73515816 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.735333377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736549283 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741300253 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.747066206 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739365506 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737267612 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.743559414 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.738972926 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740608193 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.745799347 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.737218353 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737776816 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.741533847 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.743096153 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.739616398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737857315 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.750921328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.739293124 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.741113023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.738529463 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.738383742 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748330942 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.769116757 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.738281922 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.735854429 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.746393498 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.750767534 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737934766 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.743951691 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.740363103 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.736801032 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742952421 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.740614846 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.739634005 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.741109718 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74043873 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741364203 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.738453159 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.739070529 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.738261516 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.741962898 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.744292952 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.739926303 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.743618883 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.744455809 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.739857114 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.742725027 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.746459624 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.742192877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.742918107 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.745170414 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.742007133 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739521113 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.742044312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.740601497 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.741602523 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740026851 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.741228615 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.737520198 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742407936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.74113826 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741339667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.74273603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746146234 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.742890604 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.743254581 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74156521 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.738907032 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.741146378 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.740073106 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.744577695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.744429851 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.742304727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.744046293 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.751122255 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.742032204 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.740611918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.749742319 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741803187 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742360995 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742292588 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.746019173 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.752197127 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.747115435 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.747279867 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.743219186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.744375298 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.741413198 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.747044584 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.741195655 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741586311 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.744325379 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.751745954 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754764479 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754867202 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.744716553 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.750062681 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.74461076 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.745986614 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.747457622 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.748838789 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.741944298 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746095223 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.741052465 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743384067 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.743769007 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.746836208 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.747976844 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.743046533 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.742251676 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.74134636 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744238418 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.744101932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744433359 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.741584448 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741559167 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741952762 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.743828854 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.74338186 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.744250828 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.746490519 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.742597256 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.743840071 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.751407991 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.741591983 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747301632 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748920195 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.745354955 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.745365642 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.743459326 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745393702 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.744460484 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.750758731 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.749763248 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.743866232 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751827978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.749180998 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.748325714 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.74661757 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.745271924 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.744426638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.747379058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.753533197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.743594811 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.743412463 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.743669172 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743423116 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743667164 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.751524945 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.745280554 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.746890793 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.749399715 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.744514665 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.744801503 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.745809778 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.74785844 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.747304787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751403773 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746581664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.746626029 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745848495 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.745676023 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.744534979 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.747736505 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748830946 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.756063987 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.751084367 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.749282488 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.751166649 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.749325756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.751403434 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.748862828 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.747863405 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.748085411 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.758662435 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.75610985 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750379378 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.748231453 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.745734586 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75286528 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.748423035 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.751598481 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.750151652 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747819546 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.748170066 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.748287864 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.749328732 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.744615547 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.748467861 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.748173945 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.747887125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.756733154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.744165173 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.747665291 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.748080998 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.747585868 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.745979448 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.757198624 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.747370368 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.748182177 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75101362 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75041501 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.751474355 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.758769899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746885511 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.750614395 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.749997685 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.747170924 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.75096313 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.752301931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.748251185 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.752026324 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.757105668 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.749259396 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.761316383 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.752410821 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760830494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.750728626 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.750604917 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.758360141 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.750660852 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.750285838 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.750490721 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.752458941 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756539625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.749155239 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.753790257 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.753605159 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749563852 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.751640224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.746978698 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.750871883 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745173409 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.748535747 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758218222 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.753642239 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.753803944 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755503583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.74893861 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.748891467 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.749758767 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.751371055 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753939146 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.751266083 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.749978374 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.751813183 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.753962122 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.748421379 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.749450099 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.750496053 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.74779516 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.750286425 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757750038 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.752948301 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755797062 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.751691591 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.758938808 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752058357 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.757357083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.752017375 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.753898128 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.751467633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.750038406 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.75507714 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.753827813 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.752136051 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.753302331 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.754557182 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.754464476 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.752786257 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.756178836 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.752763801 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.753376575 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.751029325 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762310617 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779569636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.751418478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757201464 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.753074717 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.753182107 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.755963018 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.749751097 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.750963858 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.752431472 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764810901 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762944159 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.751981964 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.750656503 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753147567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751801581 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.751905378 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.751256128 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.752991576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.751504254 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.754017268 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.750409608 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756287911 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.75084168 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.752776994 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751457471 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.752568293 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.762650931 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.751555501 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.75459361 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.752602737 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.751403817 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.753265913 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.751566034 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.751954944 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754245836 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752171815 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.75433116 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760390621 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.763055191 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.755176405 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.753687254 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.752173054 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.750985764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.752747949 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753163316 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.752567126 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.753628647 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.751711734 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.754797728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.754817507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.754338681 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.753088682 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.753819693 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753739382 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758566849 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.763137796 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752958166 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.750437937 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.754726235 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751726271 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.754076804 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.753675286 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.763043487 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758038242 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.76457497 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.766769969 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.759310674 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.75478982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.757857325 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.765057225 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.75809365 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.753457936 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.753306764 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.754144342 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.758077598 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.759267225 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.758842553 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.761666315 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.754148002 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.756984881 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762956903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.756806783 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759522834 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.75886966 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.759791073 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.756044679 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.753685377 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.755242015 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.755744809 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762374789 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.756294761 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752848737 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.757304676 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.760444626 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.754499363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757126834 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.754162646 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.756183909 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.754103139 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.758345489 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755583527 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755234542 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.758831982 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.757976376 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.757569891 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.760411242 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.764765553 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.75542583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758519437 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.759217448 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.760500092 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75781752 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756622629 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.755779045 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.756304349 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.758614411 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757965858 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.758780467 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.759380448 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.75834157 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.762271183 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.761034086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762281576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759287041 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.767337504 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.76640552 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.755198433 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.759521065 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.759172116 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.759456936 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757997265 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.757059077 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758521825 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.761864324 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.757775531 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757976786 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.757475662 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.758981359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77388139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.759117253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.7586519 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.757236644 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760176572 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.759524042 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.758602809 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.754428663 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.759855442 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.763355936 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.766539258 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.758044586 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771145001 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759201481 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.760318126 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.762388487 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.761067792 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.76850185 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.760626153 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758081142 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.762259755 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.761337588 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.777413334 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758152253 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768453782 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791031479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.761692537 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.764384856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.759246203 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75906831 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.758933844 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.765596857 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.760867137 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.759905482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.758202189 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.756209003 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.76199206 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764218121 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.761987562 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.760775508 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.75762347 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.760332054 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.760650407 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.758197968 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.757039415 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.757244674 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.759204089 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.758229537 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.761132232 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.761634626 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768787678 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.774918413 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.759787809 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.760031616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.757963398 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761266662 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.763504736 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772617451 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.767057963 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.759573669 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.757888642 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.762006601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.76075478 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.758777471 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.760418979 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.7596551 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761622237 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.759678571 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.770379638 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768553832 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.764698198 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.761639354 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76090733 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.761406428 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762402717 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758300501 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759447379 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.762424571 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.763655893 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767319319 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.759777046 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.759010729 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.763918925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.769041132 seconds)
  done (took 1044.635076161 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761019057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7618804 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759766705 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758972454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75960799 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762231268 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761234625 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761077789 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.761688307 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760887023 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759995065 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762293633 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.760909466 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761786943 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761545429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.761692665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762420864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760653409 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759159913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760629832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.762670486 seconds)
  done (took 38.674550233 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.759477964 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.761295903 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760698072 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.760946815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75965898 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.760094792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760569509 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761126737 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.76106632 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758856874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.761852844 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761541812 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.76174736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.761542893 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759901995 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760317879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.761705713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761451335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.761242006 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765664926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760806339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.762026996 seconds)
  done (took 40.43510091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.761449531 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.762886922 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.76290916 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.762145786 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.764937795 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.7625193 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.76236639 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.761214517 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.763022061 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.765330112 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.766966664 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.768998842 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.771924765 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.776127754 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.766022391 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.76389787 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.909710342 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.765378929 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.763665281 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.764666645 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.762600878 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.769441963 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.76229543 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.762345634 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.764813916 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.765029212 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.763275245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.763164917 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.761723774 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.76831444 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.767721807 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.763415687 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.763941787 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.767178872 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.766642678 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.768060685 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.769972137 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.764521709 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.766282863 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.76435562 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.77576772 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.792031638 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.764492909 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.770901177 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.765056257 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.763772768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.770079037 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.775372365 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.765224883 seconds)
  done (took 88.389871 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.766310737 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.764657139 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.76543427 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.764640758 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.765491086 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.764699599 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.766629812 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.763852176 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.763593969 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.766138249 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.765563035 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.764523641 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.763494465 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.765526263 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.76678501 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.763694788 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.76636142 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.765274467 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.768164208 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.767216418 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.76453225 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.763734321 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.76899543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.766423446 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.76602935 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.767797596 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768724239 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.765230976 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.76589825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.766793042 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.763820727 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.765600655 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.764361824 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.766775198 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.764420807 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.764727163 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.767097798 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.762201983 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.763640877 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.763040024 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.76340929 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762305229 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.765758277 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.763839796 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.76425543 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.763574362 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.764035073 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.764694409 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.762962343 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.761529791 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.762802086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.762399467 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.762858449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.763190494 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.761958303 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.76260289 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.764605798 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.762551595 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.762189945 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.765743898 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.763277583 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.762566053 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.763749826 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.762966151 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.763906985 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.763844387 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.763389263 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.764978639 seconds)
  done (took 121.689331217 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765129752 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.769183247 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759604669 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760508171 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759511234 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.758797292 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758067435 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.75992453 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757347852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.756316119 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757576607 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.758533884 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.758657311 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75906138 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.756121107 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756622221 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.757166195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756663489 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.757688999 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756268688 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.756551192 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.755893572 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.758013174 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755980729 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758009064 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755133605 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.755463236 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755655774 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757214747 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.754741549 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757099767 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.757034458 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755469851 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.757240217 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.756420636 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.759339403 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755548485 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754555579 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.755077931 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75641212 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.755809913 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756921121 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756056436 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757126015 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756720751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756016491 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.75507094 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.755698302 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.754656495 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756606007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756644558 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755596099 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755916811 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757177366 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756291283 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.756328927 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756176042 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756263278 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758126469 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.756733143 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755974772 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.757205579 seconds)
  done (took 110.641210425 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755054942 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759852794 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758046517 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755973966 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757485354 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755856949 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756844906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.75908648 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757373368 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.75739672 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756627443 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756489212 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759865367 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755095186 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757275643 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757577747 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757583162 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757059698 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759079859 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754957643 seconds)
  done (took 36.83239003 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.755178683 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.755627064 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.75575963 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.758881316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.756808003 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755507512 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.756261181 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756183942 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75744497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756670983 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.757576835 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.756057426 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756376772 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.756030216 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.757934826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.755570875 seconds)
  done (took 29.790376934 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.757072553 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.757087425 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.757840042 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.759754706 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.757121056 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.756210414 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.755480929 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.756245389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.756665351 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.754411304 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.750748898 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.751524778 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.753132105 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.751357284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.753447842 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.752060395 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.750642658 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.752051327 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.749741454 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.750409677 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.751653203 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.750804011 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.752042294 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.751413241 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.75097404 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.753209676 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.75061261 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.749205375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.749725031 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.749295775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.747539786 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.74956031 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.745955654 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.74711419 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.748209927 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.74793537 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.747056017 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.748384872 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.743763832 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.74436241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.744790082 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.746641762 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.74529177 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.747316752 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.746426992 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.745540963 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.745754703 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.746397256 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.745209088 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.747302822 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.744928614 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.744949132 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.744674908 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.745342809 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.745621015 seconds)
  done (took 97.936036381 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746095566 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.746703698 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.746708086 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.746030199 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.744822395 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.747013414 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.745289369 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.7439726 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746355095 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.746573907 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.746370744 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.746563261 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74593574 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.745332455 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74652244 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746038659 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745143023 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.745151471 seconds)
  done (took 33.102100692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746810111 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744722291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.747147603 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747245289 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.745243574 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746876769 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746338292 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.74934524 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746931769 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.745828811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745391016 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.745184424 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745273272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.746442968 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747484552 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74405197 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.744544617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744198567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.744550639 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744758455 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745839686 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743931383 seconds)
  done (took 40.085701947 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.745815305 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.745564808 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.763975099 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.767018071 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.766922796 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.783476254 seconds)
  done (took 12.24654504 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741786037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743067348 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741267106 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74171896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741432151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742473273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742260251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743082427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741019321 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740325292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741087989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742227193 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741388217 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738865344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739785567 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74099031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739548498 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740681858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743355272 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739611722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73964142 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739811252 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737661299 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741846102 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741104043 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73881358 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739376769 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741346723 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739400623 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742594257 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739489369 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739556562 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741681737 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738668522 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741285344 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740440776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738309487 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742107804 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738183821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741677259 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.738635853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74261513 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74120825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740245002 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737605739 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742350674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74371572 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742587783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737870693 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737560111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737240238 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738719277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739352523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738020474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73959262 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741257455 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740105501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73699523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73848029 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737612381 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741866207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738180567 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737189152 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73830035 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740513869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736778334 seconds)
  done (took 116.528188488 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738844229 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.735699909 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737708315 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739275005 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735994852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737266952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73694928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736708027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737364133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742979415 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737609891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739034136 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738324755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736872577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737625033 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739336404 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736581149 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735918063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738639837 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737842517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73600462 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735677387 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735984611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736752062 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736577693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737784914 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741065911 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736552838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737488362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736267907 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736324371 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736181701 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738511824 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.735160878 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738826086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736708512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734821958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735578871 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737150218 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734151774 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734927755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737600796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737134864 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736993993 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737179993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736219837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734854107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735125146 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735192944 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736969988 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732679491 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733808979 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732952716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734467663 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733260802 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738053394 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735310959 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731543729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730939666 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732555002 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73094633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734765867 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734260785 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731461199 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732956743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730871206 seconds)
  done (took 116.253956546 seconds)
done (took 2423.328943275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.792658643 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.79780604 seconds)
  done (took 15.254782723 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.89464135 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.850864371 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.734882638 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.766393098 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.734468463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.758970518 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.753254795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.734383223 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.731437864 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.732630261 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.734333154 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.92132991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.732708963 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.73586798 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.734425576 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.824302159 seconds)
  done (took 50.044426301 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.735902867 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.739230876 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.748316089 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.740346869 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.736849676 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.747728752 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.765517624 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.742918577 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.767054612 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.75008142 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.802325854 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.744861306 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.737327809 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.784579303 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.751761126 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.756537045 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.827882671 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.811312641 seconds)
  done (took 33.353866281 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808048285 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.749460943 seconds)
  done (took 10.231054806 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.756533397 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.752585489 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.824127092 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.747937524 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.73745163 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.773238956 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.792777169 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.789467465 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.772497773 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.753248467 seconds)
  done (took 69.371570927 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.742875276 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.73634995 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.737627535 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.735443083 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.730999373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.740457788 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.735370719 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.738042853 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.395518942 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.770143046 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.743589736 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.743192121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.735749199 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.738350085 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.736549216 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.758762333 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.844711233 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.735501816 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.734951999 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.742430347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.735504412 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.793930552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.752215173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.73903474 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.765294381 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.396909645 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.742128079 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.741245105 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.855196468 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.735944599 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.739466677 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.923199826 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.740129379 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.204501436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.999704585 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.74142024 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.747965659 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.745849681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.737315815 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.845053878 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.739043958 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.741888652 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.720651699 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.984437502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.829358934 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.778397487 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.04623767 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.758971735 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.740911979 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.768793269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.742948322 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.739169154 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.753832428 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.252908565 seconds)
  done (took 125.52454712 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.741763574 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.085018448 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.904655598 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.74025879 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021981245 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944323354 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.740095583 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785361708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.744796791 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967505396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99686596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843097657 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.744842744 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.739223073 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.739036875 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.741004148 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.890585943 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.811267689 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.742803739 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.73825998 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765464423 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981447494 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.859327423 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.742933988 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.766692959 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.949541083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.86022401 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.841174186 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.529750586 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.737789577 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801763179 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.740668665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.740683326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.740339856 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.896348368 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83370392 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82281701 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.743598284 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.739431813 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.741848109 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.395991553 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938374862 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.833987001 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.872511031 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993265566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943665075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517786572 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.739443373 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.476290717 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.903607119 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.966870574 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.97017628 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.864299054 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.743608165 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.075638714 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.739433896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.739725949 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990914842 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961428139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.837779509 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.743964204 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.74142928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.742268698 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.977121346 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.745985778 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83661463 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74733869 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.73943733 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.837787582 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841278238 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973838032 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953569987 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.772118848 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.085653591 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.238166703 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988001214 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.808497337 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993724938 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.747602257 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.741498964 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.821169169 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.582983593 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994105094 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987668955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988603408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777901778 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461717775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.740638354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96929595 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.966396555 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.999845037 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991912806 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.975673982 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.062068613 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.740589428 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.741320309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.993725956 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.865663411 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.745231824 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.082180012 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973156274 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.27466699 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.767500254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04333553 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.874235794 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.745935425 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.367705992 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.739594742 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969992846 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.779533662 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.744073407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.743723708 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.963080223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.733241223 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744030275 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.391017808 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.80466762 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.747290962 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976240779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.743778559 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011828044 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744758226 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975647349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.822992271 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.773038307 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.916845363 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.990681328 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.748200809 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.979142696 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987188788 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.858448345 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.962871493 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.439770324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.746815504 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037346174 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.745362512 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.743173472 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.911370585 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.745631278 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.885550008 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.746751575 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.034630034 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.76611249 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975675469 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751593525 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999409095 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.778302649 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793740383 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.747172848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.866397639 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749878056 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.584904373 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.901282974 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748551983 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.74610973 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.716758547 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.746385702 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.890955647 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973322004 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766061892 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81294515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403213434 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.743346778 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.824961284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.766524676 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.126936735 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.746424762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.994937085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.748943543 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.746661237 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.745367062 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.98176482 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.929577536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.746477938 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.744188467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.650372049 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.744164628 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.746695633 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.92628329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.104259315 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.744350599 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947043849 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.746589128 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.874476175 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.751457872 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.817090821 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.077945932 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.741339117 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.746929629 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.74620097 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.747420768 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.748535703 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954251304 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.768799648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.245908708 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.882152803 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02083678 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.057000758 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989769833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.788600391 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.748845647 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.999720258 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.751004771 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.808628701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.74876951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.765194952 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974197482 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752706749 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.012271643 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02120335 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.597918309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.792325089 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.747975663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.745669633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.747321172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.894299993 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835993618 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.751199427 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.748448959 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.861410255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.874257424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956818888 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.746179194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.787722122 seconds)
  done (took 875.169448854 seconds)
done (took 1180.617485404 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.748036071 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.749641497 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.747559927 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.750545907 seconds)
  done (took 28.677810272 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.747522277 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.749778143 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.749793307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.751361391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.745986871 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.74655183 seconds)
  done (took 12.1721655 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.761263273 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.750343485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.751619843 seconds)
  done (took 20.948065372 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.819146053 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.127596486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.878823653 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.181459729 seconds)
  done (took 9.688039015 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.749120906 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.748776585 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.748551898 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.748433597 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.749097304 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.746590456 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.746837445 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.750204225 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.752137011 seconds)
  done (took 17.421820175 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.78300012 seconds)
done (took 94.373520265 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.941066735 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.425163337 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.860513378 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.080097249 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.80830502 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.099083011 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.812876561 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.848978444 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.927530091 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.876813666 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.061487938 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.747939651 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.234427986 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.961719589 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.04369439 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.765638085 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.886166458 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.750850189 seconds)
    (19/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.849013139 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.655355406 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.916109455 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.821943075 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.422602106 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.773644781 seconds)
    (25/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.770512604 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.753885403 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.751029858 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.806490575 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.834915471 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.75329885 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.481764645 seconds)
    (32/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.954825196 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.833032793 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.856645081 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.205771413 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.840662172 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.967944616 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.575143309 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.640816053 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.756843608 seconds)
    (41/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.836526476 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.920056227 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.928058813 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.750969699 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.388428704 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.828739156 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.753920259 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.741611852 seconds)
    (49/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.852605978 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.756842843 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.77921722 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.882774867 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.11094288 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.774596187 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.148268776 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.973191124 seconds)
    (57/309) benchmarking ("sort", Float32, false)...
    done (took 5.465258135 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.817706391 seconds)
    (59/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.403943866 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.014677315 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.911117176 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.445121035 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.834449069 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.989718796 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.906601481 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.771430274 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.964335483 seconds)
    (68/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.891792797 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.629010494 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.846649604 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.124838209 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.781067109 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.762836666 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.92794049 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.889209509 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.830127283 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.640256645 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.771966152 seconds)
    (79/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.94304461 seconds)
    (80/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.041237381 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.106749173 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.818181451 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.756430043 seconds)
    (84/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.866725786 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.880986064 seconds)
    (86/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.756500274 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.489340741 seconds)
    (88/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.834326984 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.924135941 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.757297785 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.936758877 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.82976657 seconds)
    (93/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.520681519 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.755841593 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.931070026 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.753631923 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.599096623 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.776088504 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.058179516 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.773912268 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.754526838 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.516789564 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.775176712 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.06926455 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.067978688 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.128945416 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.145490352 seconds)
    (108/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.838296149 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.133670156 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.923344654 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.912261882 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.865664153 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.997526129 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.758348424 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.044598305 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.780729811 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.773370545 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.837299649 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.755918392 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.965954779 seconds)
    (121/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.755478675 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.107885411 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.886458334 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.979191059 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.001767822 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.76999825 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.119673713 seconds)
    (128/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.867308736 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.228668967 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.375539489 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.914765313 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.677570722 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.541425173 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.082886102 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.795306007 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.626315034 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.077628565 seconds)
    (138/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.794142468 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.014666307 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.010065627 seconds)
    (141/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.769577014 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.855184276 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.004677222 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.14972327 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.780525663 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.843737961 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.049544528 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.765222731 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.52058843 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.771399468 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.179542667 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.799444385 seconds)
    (153/309) benchmarking ("sort", Float64, false)...
    done (took 5.61543671 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.850406064 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.785514282 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.034315086 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.792102337 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.767319989 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902739532 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.922164098 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.393661915 seconds)
    (162/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.881501787 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.06820674 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.264507507 seconds)
    (165/309) benchmarking ("sort", BigInt, false)...
    done (took 6.776513234 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.108770147 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.770069282 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.588847661 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.0855658 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.797447933 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.952438609 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.986174113 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.885858599 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.812815496 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.24492527 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.797542968 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.770251273 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86496575 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.874694897 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.874798902 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.771847858 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.934110133 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.852971453 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.174266167 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.220679713 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.963542665 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.886958779 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.901739408 seconds)
    (189/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.790517856 seconds)
    (190/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.768299552 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.766275959 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.211166238 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.108422351 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.85103102 seconds)
    (195/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.220340938 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778949261 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.937305193 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.770523296 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.065547566 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.836534959 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.089102847 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.773745771 seconds)
    (203/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.928731846 seconds)
    (204/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.955935701 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.686204226 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.923514255 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.882790007 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.774044087 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.860208415 seconds)
    (210/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.986719724 seconds)
    (211/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.160451988 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.020317428 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.009236045 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.770908743 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.432958167 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.773670098 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.866484972 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.410392286 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.972779305 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.896127789 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.768676942 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952956578 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.895609632 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.460756974 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.77777969 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.781229315 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.942104236 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091370852 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.928699566 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.791227365 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.55909097 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.925918636 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.786954539 seconds)
    (234/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.772377238 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.872562195 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.276466138 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.773098248 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152913529 seconds)
    (239/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.878038228 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.769808874 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.612350413 seconds)
    (242/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.877259913 seconds)
    (243/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.876688405 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.680424524 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.035903297 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.022728204 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.780501744 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.85766961 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.251166136 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.119360144 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.041004367 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.876372143 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.445042348 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.783064735 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.909827152 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.895672743 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.771219574 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.783307467 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.748773063 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.818843569 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.678208877 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.775130192 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.170379239 seconds)
    (264/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.167991035 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.866283569 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.703093252 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.025363759 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.107899723 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.064282339 seconds)
    (270/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.114493232 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.796635983 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 4.656347481 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.026451607 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.749939336 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.783778222 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.860460131 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.000303778 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.772254974 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.079345008 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.879886542 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.984388806 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.754481581 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.917658745 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.908622176 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.084230491 seconds)
    (286/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.779701035 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.981222776 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.781112534 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.127409996 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.777625497 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448662549 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.106339896 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.529593155 seconds)
    (294/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.773825318 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.992796501 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.779299127 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.062249118 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.814548948 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.370367558 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.812358011 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.085365967 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.014845563 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.778404244 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.981931185 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.771980894 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.225732877 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.781329824 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987142738 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.52594132 seconds)
  done (took 974.398449583 seconds)
done (took 976.135806019 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.79796215 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794829129 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.775240058 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.79815964 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.891929697 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.824246292 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.793473595 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.781846364 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.8274376 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.825168381 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.77799923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.821802031 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.777986622 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.77561088 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.777323469 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79364877 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.089553252 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.807535541 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.796976217 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.788571252 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.796566286 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.779122177 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.826603272 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.820567824 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.78186362 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.782590767 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.782427971 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.796290961 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.893070326 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.781629003 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.785167151 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.791702894 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.092472086 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.804715309 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.77586292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.798367198 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.789912433 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.790361634 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.783142884 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.813563491 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.174361765 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.815859527 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.780086835 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.779726184 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.778044437 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.784769434 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.778759291 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.788074974 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79711137 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79338663 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.1680276 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.834256719 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.783909633 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.781938175 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.790959725 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.779604909 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.783841932 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.796401296 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.798503945 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.797736766 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.074023622 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.814722029 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.782933267 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.798193076 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.791904597 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.205706727 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.816346569 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.78569447 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.177277001 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.825610943 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.205390341 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828053826 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.782763178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.796360254 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.812194989 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.09158661 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.806289144 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.777261067 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.790955204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.780882431 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.791186125 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.796953916 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.785204974 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.782139002 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.793095236 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.827136161 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.796891214 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.783636171 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.793993539 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.800811009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.79019961 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.791237082 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.785312137 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.778870617 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.79150604 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.785400151 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.785202984 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.78445411 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.786109616 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.793592403 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.17457504 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835452231 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.780089518 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.781053856 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.781277552 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.797428103 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.17533495 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.819211615 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.80817288 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.832584222 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.783395619 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.075081854 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.815668869 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79985104 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.792865505 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.785286395 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.780567451 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.075257284 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.201681977 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.839033764 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.78403282 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.779000939 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.799437161 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.785208024 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.782257775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.092787698 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.810516203 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797832957 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.906798345 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.791551747 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.817525433 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.783453799 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.786928459 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.833378994 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.799911142 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.816886174 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.784410155 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.801515356 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.803628857 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.780507778 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.798140514 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.795283038 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.783872279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.792810585 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.78275449 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.832667559 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799656488 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.799853453 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.80490554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.908921257 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.782382803 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.076970472 seconds)
done (took 280.484732736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.862251135 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.782998228 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.881804983 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.782772521 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.876984492 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.858648114 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.783296966 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.781612977 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.781140824 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.285957994 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.782439509 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.789860846 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.782385741 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.779750458 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.867309054 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.782674733 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.779552766 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232090978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.78243936 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.869527239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.782998563 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.781551649 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.787748125 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.272835577 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.783827303 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.794768239 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.865229814 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.784170954 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.233927419 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.787903267 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.789537823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.237053424 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.866408449 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.814100098 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.79287384 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.790184529 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.877290197 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.793653792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.857465952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.856012013 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.886992499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.816785486 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.787296516 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.786015043 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.788386537 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.786979724 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.785824405 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.816272616 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.784401306 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.794585208 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.230938151 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.787555417 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.795618095 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.786112105 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.783496865 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.813891009 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.786175627 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.790908263 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.86593421 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.784900656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856885987 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.274042965 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.288189405 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.783440304 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.783689199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.788309773 seconds)
  done (took 179.624266071 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.852787605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.866103028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.851053592 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.792433583 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837413249 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.855177352 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.793963014 seconds)
  done (took 14.567408959 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.794979101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.783088316 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.837670206 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.842979638 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.786643307 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.943200028 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.790344006 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.79961844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.790445652 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.817235175 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.786592859 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.78801095 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.79116513 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.787090601 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.836694549 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.799452562 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.903687348 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.790196717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.787840812 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.935401963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.792573016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.793740278 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.812542171 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.798909199 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.787901567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.795287836 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.355497891 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.787683084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.789658874 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.78636693 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.78494958 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.829632322 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.787400842 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.78967545 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.791808585 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902721029 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.78880349 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.787250357 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.788366805 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.79451595 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.788456355 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.788874317 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.791126229 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.789868743 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.789067522 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.812179411 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.785565624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.78705311 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.787949641 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.786986487 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.814420928 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.788814213 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.786371487 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.794469813 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.83180976 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794671819 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.78938241 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.786136641 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.787565101 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.787909111 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.93809331 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.838368367 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.78798746 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.840993432 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793551571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.788590714 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.787553236 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.790295557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.877529913 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.789129885 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840117208 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.788740185 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.949634986 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.813009065 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.784972604 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.795209035 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.793625073 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.789091091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.789349896 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.798488509 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.788052769 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.792754775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.796996482 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.79372682 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.789796231 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.9030291 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.930622715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.788437016 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.792062394 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.796251908 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.788769851 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.834664899 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.787429646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.791106462 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847107513 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.906502595 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.818688458 seconds)
  done (took 197.850701125 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.799822117 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.797601952 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.792487496 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.807544359 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.791828813 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.790586384 seconds)
  done (took 12.50134534 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.792337972 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.794381656 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.79033441 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.789559793 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.79114692 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.792539828 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.789973603 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794362534 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.794214392 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.791430213 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.791674935 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.793393156 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.793524697 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.792613908 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.79097444 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.790761364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.79217734 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.78917881 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.790427355 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79204097 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.045546146 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.789486899 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.789499708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.81082585 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.79388878 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.791953209 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806038639 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.79002914 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.793738047 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.799340336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.795914683 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.792255083 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.794396376 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.799221648 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.799644801 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.796691768 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.795450633 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.794053718 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.791828771 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.796679345 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.793004487 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.791869142 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.79005031 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.79325526 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.797077566 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.802294756 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.797163287 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.808183691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.791463444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.793643321 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.796623341 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.79333883 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.792742249 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.79333935 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.797843815 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.800009182 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.8003175 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.794652859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.794954758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.79598579 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.79863899 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.792759422 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.801702632 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.796730669 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.801109467 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.794665411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.798401974 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.799127322 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.793421717 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.794093207 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.795533796 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.793640179 seconds)
  done (took 132.206779721 seconds)
done (took 538.482041959 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.064470685 seconds)
  done (took 8.795755803 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.918550075 seconds)
  done (took 8.71049701 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.228790305 seconds)
  done (took 9.9549191 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.858840669 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.802565131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.808324423 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.808314388 seconds)
  done (took 29.027944557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.095496888 seconds)
  done (took 8.820757939 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.817771371 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.794768753 seconds)
  done (took 15.41551581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.901134172 seconds)
  done (took 8.628179522 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.106982494 seconds)
  done (took 8.86881364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.803956251 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.813790868 seconds)
  done (took 15.367831909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.797806109 seconds)
  done (took 8.527872605 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.035981435 seconds)
  done (took 9.872480027 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.814000335 seconds)
  done (took 8.609217276 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.821777976 seconds)
  done (took 8.545752839 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.840784574 seconds)
  done (took 8.566112844 seconds)
done (took 159.438748444 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.795752308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.798451343 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.795133944 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.795177097 seconds)
  done (took 28.911830174 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.831586622 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.827054025 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.828834298 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.838404572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.8318431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.829862341 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.821946909 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.820783687 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.835862372 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.82828671 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.831559492 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.832300173 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.829453048 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.818827483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.831983652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.828260147 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.838380395 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.829103613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.819845839 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.830769341 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.795754602 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.839746237 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.83492605 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.792908645 seconds)
  done (took 45.574573213 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.986413356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.867461567 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.953964732 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.850924802 seconds)
  done (took 9.38446221 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.845883892 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.850710355 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.860227508 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.897043183 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.92595896 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.856968526 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.819957222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.817998878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.802658545 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.849032446 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.923839026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.845461282 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.932348486 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.798777467 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.982787978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.798594372 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.794033236 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.851056121 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.900355821 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.915028928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.799179183 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.846778173 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.851882638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.844131621 seconds)
  done (took 46.337651651 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.798091213 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.808594111 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.806045936 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.797460958 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.800276356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.798326791 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.804309029 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.800466227 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.821161966 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.799042047 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.798126739 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.795682426 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.802562403 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.800266449 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.798130915 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.810636011 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.810478719 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.797486374 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.799426384 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.804037936 seconds)
  done (took 37.778971718 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.800483604 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.645758907 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.145120134 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.047893721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.798951922 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.797770351 seconds)
  done (took 30.966299897 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.813035123 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.810579729 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.796649238 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.856880597 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.939212728 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.80631218 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.801834229 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.809107844 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.845281511 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.861529722 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.820126676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.832540483 seconds)
  done (took 23.723365075 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.801272579 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.80237107 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.800952301 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.811865019 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.811768745 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.811009203 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.809684331 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.799311401 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.814756777 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.821334898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.80998671 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.813904823 seconds)
  done (took 43.442180684 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874820251 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.673574433 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242636507 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264384896 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.322329778 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997523993 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.798811459 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.883752014 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.799936482 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067836134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.212748141 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00956096 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042290151 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.512894626 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.802931977 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.284254336 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089287831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023265346 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827929447 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519203357 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909286752 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281877453 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.476727524 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911836669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003311495 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.921017512 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.057478901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.748709726 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845321397 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802527145 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804554649 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802761859 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070213828 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917675482 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869783098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805856114 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216032531 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.503672847 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.828380988 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.521004119 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.41680547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92593355 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799691024 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801937935 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.726821804 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287993296 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894237646 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.804510977 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.498269794 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.797600349 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805918251 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877142157 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.803027948 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.607742434 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484340855 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.066358569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.800374938 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807022343 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351793024 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870058863 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388431937 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.732898104 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.887061281 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469263922 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267966432 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.956998823 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.799966273 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805511337 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727885884 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.478474145 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918774657 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938525879 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.819474395 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442105929 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093350249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.308054913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863451316 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083683323 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.562287104 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.73304351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017677243 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.746939373 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729261312 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.635444208 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.727409309 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021857205 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834766098 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.40433654 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837852 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882305104 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805943706 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815523628 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807311369 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018950689 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.697326427 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801912819 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.174828349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064391011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819982638 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888743441 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730624016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.806462531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047962478 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.003769609 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.013709105 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.293072578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888518408 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.723209386 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.820554431 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.689796751 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813855359 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.085709573 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867084515 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864477688 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925380061 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.748719099 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05213209 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749535424 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.904705503 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.244478618 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04729189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.139948658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048721797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862729297 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.806797975 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.805147849 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543841947 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418162751 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.018159606 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.815269666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279452274 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809441702 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.80457123 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736935305 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.424065985 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.253741214 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.891911339 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018982967 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.737406097 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081000345 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72979418 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941474862 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.803009754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.019094537 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46305947 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.895194327 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051477071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022156934 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.010645524 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813771401 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818145049 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89769059 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821532754 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.200548536 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.051962805 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.807467676 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.80610797 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.547863158 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868386538 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808012038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.808860897 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336422761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085290169 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.830082443 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.806263907 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.681824318 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.816726542 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867826855 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808408553 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.807386668 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.323523561 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30487719 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.811238313 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.461941719 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025168337 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811566023 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.536881341 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996733804 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.819199068 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085888765 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87508035 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.733523213 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.509335942 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.507127371 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806674483 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.734855438 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.806284351 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807976385 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812410986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.996080498 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094873492 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860017307 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.493090408 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.917155174 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812237724 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.810686864 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810153475 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.329657229 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876063038 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399719206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.813343208 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937945744 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.821027668 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.736370127 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8056622 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81090923 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.808855904 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.757608772 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854090918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.493765906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019976412 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056028096 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.213462246 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818124902 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.544337494 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.928667491 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.821900423 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.194431046 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434784636 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.821353716 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865389238 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.816979337 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.550936886 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547327218 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362226533 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114619564 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134827454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167706164 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.287978062 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.023860057 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929145032 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035909737 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.332943323 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866750092 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899797292 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74573085 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822590372 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.470346591 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171470704 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821083288 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029341136 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10580779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.26058915 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950919675 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01419802 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840753552 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.5900838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853843167 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.344904313 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832115035 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.33231932 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021775078 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894182789 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.196233626 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.894904967 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.813411384 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156058037 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852165786 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.515092163 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16527587 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.187958774 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.363425793 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044757971 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.809120741 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248610314 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175653807 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.973904686 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.926344004 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742545839 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815637788 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820345628 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.826127743 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.784133958 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.65505497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.053233037 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818494142 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040566175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.902576453 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182879064 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.71839463 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.81364137 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813691044 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076824505 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458971336 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962119881 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.091701451 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383538349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818655527 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743589382 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739875987 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.513993867 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.815935275 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774718005 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020391251 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.915110002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493432274 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.168105806 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113681007 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054375144 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.823123684 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090002183 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088712866 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.301263434 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832507165 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.909294808 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.209188718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.529609255 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029844022 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040707325 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348249877 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029644436 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259113274 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.783648784 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.816103328 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02064742 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.030148967 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.279631841 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994935401 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.525267605 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.819672926 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17360525 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876443113 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.263602185 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003762807 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.9112867 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819151186 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890729489 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820786056 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.82062872 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820829629 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825763617 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285979982 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935122664 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.830694288 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890748303 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883914451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391400459 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.824479107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089181385 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185977546 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158201991 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878203403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816301408 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8245807 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745733442 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9442625 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25869731 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093090595 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.936114185 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.955685012 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837377824 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.218843895 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.040042426 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121699926 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093655136 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.708859368 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47967189 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933972297 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.036797728 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822979165 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.022209113 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032651827 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119313129 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37881355 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.910517568 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997492708 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091489424 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17814911 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818551783 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401439529 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.827403217 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198764977 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.847099935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.28516963 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078574904 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821593577 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939065506 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.821700155 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.023880221 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.269086752 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561668244 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1651937 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.673941089 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822331473 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100175149 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151311358 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125147477 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890961324 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823619351 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.506416348 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950210334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.660700757 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.030214483 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818242328 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021424733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.529338479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821137797 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101871931 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122974335 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.818137825 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.689362003 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836817869 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.8223819 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034806712 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035608201 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06689626 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822524359 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.825283337 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.627113802 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103630451 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881876753 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743973159 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.817669327 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865144575 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047191153 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839545664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.333123477 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.520021682 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103531537 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.723655706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836806163 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.187698875 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197948717 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162007587 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347449981 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041992961 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370848731 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.635384047 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185867557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.822480857 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.190516882 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191379529 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.822479323 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.281757238 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921377772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.097885041 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150312963 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.835057454 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610638726 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.857505032 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034596185 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178902711 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748767776 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82342145 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.874236188 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.820939561 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.807017834 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829921828 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.737237143 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.206377483 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.655347234 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382321874 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.826256934 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.968007344 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.271073358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311263881 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918148131 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84260897 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819087956 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.536356572 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.109671103 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06639672 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287807419 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.908955468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.823713939 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825804978 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.743678193 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003689291 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.009424712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102577385 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.124251487 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.920698014 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827755086 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.030236125 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025715332 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.290371873 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963788738 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.897873017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927060201 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.770228627 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529147883 seconds)
  done (took 1634.372809313 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.828699852 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.860733894 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.841379958 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.859770373 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.848975524 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.85517899 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.8830789 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.857555707 seconds)
  done (took 56.594768151 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.819773699 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.988073259 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.826851968 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.824529057 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.826256405 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.820640666 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.007800978 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.829867084 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.823769332 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.825136911 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.821007827 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.820756753 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.094484686 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.838996694 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.821563628 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.817324347 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.82598445 seconds)
  done (took 73.403138547 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.821043917 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.975364519 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.848675525 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.820309014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.514671824 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.83580418 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.730809051 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.861645144 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.824307504 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.290626182 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.115682454 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.844993352 seconds)
  done (took 89.235116756 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.834403697 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.825295014 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.825274805 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.822281194 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.82721842 seconds)
  done (took 10.892749032 seconds)
done (took 2132.363025378 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.05129122 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.03022178 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.068224043 seconds)
  done (took 5.849066261 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.964184456 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.014935136 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.12629357 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.133621642 seconds)
  done (took 9.993154751 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.138728093 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.202793175 seconds)
  done (took 6.091143985 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.134758294 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.84655089 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.19584037 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.823892729 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.826526222 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.822611674 seconds)
  done (took 22.22949335 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.8226125 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.821690575 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.823815012 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.822441834 seconds)
  done (took 9.040150459 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.822685963 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.530803743 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.8215183 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.832786527 seconds)
  done (took 20.757252386 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.969638589 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.937725267 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.966074368 seconds)
  done (took 7.62683624 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.963614185 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.672588417 seconds)
  done (took 6.384957959 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.958333725 seconds)
  done (took 3.710686848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.851839573 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.092325442 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.328980453 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.371412311 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.432611173 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.638599322 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.103115629 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.036629697 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270190371 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.26882599 seconds)
  done (took 24.146681403 seconds)
done (took 130.809508133 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.150947222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8509575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.025512489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.161325219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.100291615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.026968696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.0449164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.154263086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.843905697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.830834661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.168078293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.055759513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.999440337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840860326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.00165301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.841076691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.049900821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.168025633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.854644992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.091830232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.055963889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.819528379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.008329288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.83032339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.053368639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.979310593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.360985368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.842371401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.994526189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.3719193 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.025537236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.234243441 seconds)
  done (took 166.590547016 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827486696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82490776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.829295438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.826293544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.26974744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.826015279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.826760864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.82448631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.262660988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.244636738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.825094006 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.263249647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.826780385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.824671286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.825859763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826722664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.433235993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.827195699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.827263216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.823965728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824788672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.097557812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.826925848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.113236872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.422902684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.82831127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.826416132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.830856286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.824918436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.826078291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.826829035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.827415783 seconds)
  done (took 207.698439124 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.755855039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.828757982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.830242078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.840349611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.825789107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.831506253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.82701441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.836562164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.568833376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.566319392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.827602932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.827959072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832925292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.828556287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.82779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.828164135 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.82847546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792675888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.829467887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827177221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.83047134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395741351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.828268111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400786996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.829098323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.82960114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.82778583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828853816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.828981478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.829162912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.830534879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.831295556 seconds)
  done (took 218.810988617 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.069116072 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.82830322 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.830597894 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.818337848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.828453601 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.829567849 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.803966438 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080989854 seconds)
  done (took 18.847365837 seconds)
done (took 613.705226848 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.209367634 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.037438457 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.003564175 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.852297126 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.097469346 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.89470985 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.848439525 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.915045837 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67036819 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.919997529 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.500983202 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.868097479 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.600444844 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.872379647 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.973429933 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.906903763 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.395371124 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.490517078 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.020247529 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.94451703 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.026881194 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.739273018 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.929968371 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.680901448 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.622353655 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.78587348 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.842355974 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.393853967 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.859675092 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.007117796 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.49618875 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.09112109 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.860465364 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.848641737 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.904668786 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.885565447 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.029162508 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.855217099 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.976658108 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.543025524 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.911732412 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.573738948 seconds)
  done (took 100.643629618 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.839123141 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.837091164 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.834477751 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.83742824 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.844395432 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.835894307 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.836765165 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.834856581 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.834555551 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.83545179 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.83716635 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.843573995 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.834344674 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.842590395 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.837393676 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.836838296 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.836671436 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.845259478 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.83680127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.837614016 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.835643258 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.837828519 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.832153472 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.836627777 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.837323466 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.836005739 seconds)
  done (took 49.546772303 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.833858162 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.001527017 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.073919519 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.850939422 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.834697327 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.838885058 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.851279712 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.836924 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.834970586 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.836826058 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.933778484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.838738345 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853860839 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.076261034 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.847169805 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.830966178 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.832588158 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.836450834 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.008029396 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849074848 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.852666657 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.83703774 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.854397265 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.847068335 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.837459226 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836686755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.839680067 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.278454887 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.842531733 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.936381983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.878695792 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.85478262 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.211468265 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.08240148 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.885521866 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.839659261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.831588922 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940807529 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.84120781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.840936736 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.855447151 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.8400565 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.075301132 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.359494521 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.847487557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.835707818 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.290042167 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.951692926 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.874176821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.844044753 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.082381254 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.84966168 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.837253705 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.838178714 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.873000101 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.841236727 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.837547277 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.147954744 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.846801679 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.853792835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.838126512 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.838284207 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.011702248 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.843685201 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.005107325 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.846365948 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.84257024 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.839418704 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.078485938 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.852151671 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.375264645 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.848028331 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.831236579 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.936268067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.002591234 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.310442602 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.849504045 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.013450594 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.227606026 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.858210438 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.841823796 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.266150425 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.864313886 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.847374338 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.835663636 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.839922997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.837973206 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.880923328 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.852540745 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.281520534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.372451711 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.163523435 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.862535567 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.852391452 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.838737844 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.148695403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.84296694 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.836711049 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.07122285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.37723821 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.848917654 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.845904627 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.357672056 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.851925731 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.858796918 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.848327695 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.087256766 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.853460159 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.881320977 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.836605873 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.845608472 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.840254198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.855950453 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.845258988 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.836662512 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.348227102 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.959032538 seconds)
  done (took 228.178461053 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.839266721 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.838408238 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.838270651 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.838615616 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.836089579 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.838565209 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.836268597 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.836499622 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.838701585 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.835614237 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.835923292 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.839597922 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.8395554 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.846569294 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.463162423 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.841988674 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.442422159 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.843341555 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.841546087 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.845724598 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.523038467 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.847211451 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.844001088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.840598491 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.841849853 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.840095375 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.846758464 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.845653118 seconds)
  done (took 167.214598532 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.842277693 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.028714366 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.86081024 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.873957868 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.84896396 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.843428815 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.980143325 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.865774738 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.850733084 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.841920729 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.842533214 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.903727284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.852871066 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.940476056 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.874426127 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.950532187 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94937066 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.847839826 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.8429494 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.842698518 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.873733879 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.850687206 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.904790658 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.970321117 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.859148557 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.956203268 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.862284534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.843956712 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.847621896 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.955722808 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.859350028 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.904454742 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.873717813 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.86297693 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.96433532 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959780157 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.948562113 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947223141 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.848329523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.843299157 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.842168475 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.843514945 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.95700402 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.862515944 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.845903439 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.958468444 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.859624295 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.842825135 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.844555069 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.843116746 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.857544415 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.862470599 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.909430683 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.974521217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.879832013 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.868656058 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942641936 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.967402542 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.845567683 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.943423775 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.850639918 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.957443325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.864674061 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.846815542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.8473909 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.847096059 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.87670846 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.953017522 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.949550579 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.852850655 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.945471737 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.87796776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.856169451 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.84322623 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.844251838 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.961004176 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.962877052 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.879054587 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.881641279 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.879391626 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.855022404 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.84772995 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.848520396 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.861106823 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.854839669 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.959563368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.96360225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.849464258 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.845985246 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.843517851 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.844985054 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.872740876 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.967791656 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.880604399 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.954249593 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.911842381 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.920688638 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.857424507 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.86156972 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.849242669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.909028361 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.859284733 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.856458194 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.140679461 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.909955167 seconds)
  done (took 200.247420384 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.250127551 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.891131329 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.905600379 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.172634591 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.187907962 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.769038254 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.894908023 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.893322661 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.920806054 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.076971794 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.966259296 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.91521424 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.887320791 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.870824084 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.893936623 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.919634244 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.901990145 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.237969268 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106429745 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.032783434 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.882639199 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.169831111 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.216524342 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473138069 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.943525396 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.306450272 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.454374117 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.024640516 seconds)
  done (took 60.947113036 seconds)
done (took 808.537743717 seconds)
SAVING RESULT...
DONE!
