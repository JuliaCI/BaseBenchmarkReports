cset: moving following pidspec: 11886
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.237886012 seconds)
loading group "string"... done (took 0.63238534 seconds)
loading group "linalg"... done (took 8.06598089 seconds)
loading group "parallel"... done (took 0.177990724 seconds)
loading group "find"... done (took 1.232741637 seconds)
loading group "tuple"... done (took 1.908111818 seconds)
loading group "dates"... done (took 1.33672607 seconds)
loading group "micro"... done (took 0.200872724 seconds)
loading group "io"... done (took 1.041178549 seconds)
loading group "scalar"... done (took 39.437474164 seconds)
loading group "sparse"... done (took 11.863314153 seconds)
loading group "broadcast"... done (took 0.989093858 seconds)
loading group "union"... done (took 13.518184816 seconds)
loading group "simd"... done (took 4.676088489 seconds)
loading group "random"... done (took 9.415998451 seconds)
loading group "problem"... done (took 1.585985227 seconds)
loading group "array"... done (took 21.30466173 seconds)
loading group "misc"... done (took 1.618057663 seconds)
loading group "sort"... done (took 3.34485691 seconds)
loading group "collection"... done (took 17.743343014 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549320227 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130757817 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141283201 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122611258 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153717403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120160692 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12776441 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086728799 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.933491546 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153634539 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116136319 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419416196 seconds)
done (took 5.55769777 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174308086 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091474423 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080112802 seconds)
  done (took 1.323736241 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066832314 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129065744 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067481487 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06819459 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068617816 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067589853 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067326386 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067303601 seconds)
  done (took 1.687589199 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073370503 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069323578 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066809047 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068381324 seconds)
  done (took 1.429312443 seconds)
done (took 5.844740574 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.762319213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209873272 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188976247 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389294843 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133320002 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178215117 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648141322 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318405548 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191115498 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097050567 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112112522 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.361825118 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124411102 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646572387 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080108764 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097295996 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139245084 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446846725 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071486971 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088389097 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093414006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131486349 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09174 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077894104 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150326707 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070822214 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133340871 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083776835 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069027421 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208592736 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176144849 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668783333 seconds)
  done (took 10.431610645 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101406165 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100471643 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069341988 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125918345 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095374262 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070523025 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075985767 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068282433 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089799275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126303437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091198177 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108873011 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066797876 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070302838 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083815935 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198686551 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081196464 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081714855 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073555953 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081143924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107885902 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082388763 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08065727 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080329082 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129485166 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171143683 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09749981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098783097 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067643404 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082173907 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115681478 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127551625 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067138712 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067216069 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121662847 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095789563 seconds)
  done (took 4.641807897 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.906689449 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149536708 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090005447 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132109519 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065488906 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109049461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066355431 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082922819 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239200564 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.364792086 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.617612302 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.145714155 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11658172 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06594948 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103912704 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071258558 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069789836 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068425777 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.19388071 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098325348 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108974747 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08138723 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070487918 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069704083 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065624655 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073042069 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065139283 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068922919 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088703559 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077003363 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332932078 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119724636 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069020923 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.792890745 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168110606 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068608061 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106179941 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163313203 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064366594 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092516952 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138496497 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068603224 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064924742 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163172457 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064407896 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069292085 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.241354078 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067304935 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083758433 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109759073 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120240465 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066011428 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067977297 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16516364 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065205544 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078670754 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.209721405 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154111215 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068987981 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246879927 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09504108 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070555418 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065487714 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.215444121 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115209857 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069440645 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068569189 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069221076 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069618355 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365999143 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067788101 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.217926065 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068862652 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077211535 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070614065 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069692608 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078916814 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079158309 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09466003 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067779603 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074768714 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067672957 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066959192 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067612616 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094458728 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.389346826 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06797439 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075992019 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066324991 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095496288 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09969547 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070017796 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066665116 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103484699 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071006799 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067372935 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068976985 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118591094 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069970218 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112914086 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067567872 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188431863 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09829101 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070985831 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101527446 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076755475 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07142245 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.462912128 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066546293 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073204179 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066661208 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068184823 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067322592 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065543117 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078473404 seconds)
  done (took 21.914783114 seconds)
done (took 39.048033819 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.251349173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083584946 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083620572 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084324579 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084043174 seconds)
  done (took 1.825941265 seconds)
done (took 3.045550954 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125892205 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102611648 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064876193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097948028 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064843642 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101272703 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100884109 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084220225 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100557223 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065151667 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097815428 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065146264 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065305151 seconds)
  done (took 2.376220042 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082936618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083137235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069612768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082087851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063016988 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081853984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080705512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088003399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081123718 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075050677 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06326036 seconds)
  done (took 2.065874451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082442418 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083605936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069276417 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081592518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063093571 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082055081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081685128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085136764 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081951559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073867603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063228637 seconds)
  done (took 2.06022116 seconds)
done (took 7.71284335 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07899692 seconds)
  done (took 1.281670656 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.537538972 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.669919991 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078720545 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101124591 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195216592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110028855 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239097907 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083403279 seconds)
  done (took 8.392679046 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10643235 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071507276 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070442034 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070312154 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070994594 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069856485 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069896244 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070760527 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069611554 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069271776 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06963728 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070197274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069892931 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069176139 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070937568 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070585041 seconds)
  done (took 2.441901128 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097474134 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095815208 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074452739 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075710996 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072924828 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072267996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07477388 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0744464 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071706716 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073330712 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076171385 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07380412 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073825464 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064852067 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074962967 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077058666 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071893968 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07466174 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075281256 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076202463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075966448 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064959925 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073807823 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074921068 seconds)
  done (took 3.123071808 seconds)
done (took 16.450624876 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11730249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078126132 seconds)
  done (took 1.404975694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079327251 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079640055 seconds)
  done (took 1.377413289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077982983 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06302952 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084565787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073904946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063783175 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063278174 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082465688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064429578 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064100853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064047903 seconds)
  done (took 1.920725617 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06502542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072946869 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06941146 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078914092 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071054355 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064890446 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06935195 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065902226 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07428061 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063931914 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068914191 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083855459 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06897768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085027065 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068657407 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068310163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070376884 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06743993 seconds)
  done (took 2.497430827 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063397959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063869019 seconds)
  done (took 1.351430459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066715544 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0636554 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066270996 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066389925 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063707814 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063090474 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064068107 seconds)
  done (took 1.675250412 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390949157 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123300159 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321588592 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070735613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080357945 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243048993 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065010176 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070424019 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070079935 seconds)
  done (took 2.69892013 seconds)
done (took 14.153194101 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081055957 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08460758 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097703473 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394545896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093040209 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068423297 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114192604 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181718458 seconds)
done (took 2.347952598 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213172272 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.862949814 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.488276589 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207169157 seconds)
  done (took 2.787155694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335977611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07865964 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077063854 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067204967 seconds)
  done (took 1.792890071 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065754617 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072464225 seconds)
  done (took 1.36818546 seconds)
done (took 7.393328443 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065268414 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064898912 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065316752 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064727757 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06555489 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065152377 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090625022 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065018771 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065116429 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065091763 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065307646 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065123335 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06556776 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065648236 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065367754 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065490101 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064815373 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065473624 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179712344 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065009163 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065496583 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065078707 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065470497 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065232975 seconds)
  done (took 2.971970753 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081909364 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067119757 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068812715 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069024322 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069442802 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069166035 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069367465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067434892 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069189942 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06695056 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069387147 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069630756 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067101715 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070078727 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067446445 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069869418 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069240748 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067751691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067134431 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069762107 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069100624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067538921 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069481494 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069436077 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069660986 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069750536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066889101 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067741765 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069182001 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069432174 seconds)
  done (took 3.314407261 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065965862 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061249938 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062358993 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070857861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06203091 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062118666 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06128961 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061931297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062200699 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061845144 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062672627 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061684694 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061789464 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062340536 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06263978 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06613712 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079204473 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061610882 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061613092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062054608 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065733807 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061528841 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062022542 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061392806 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061622131 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061503805 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064751648 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061553446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06294845 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061551445 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065972595 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066042276 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061403176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066784324 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065704562 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061578835 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065442061 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061553728 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062574871 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061153185 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061614874 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061912177 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061578636 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070936451 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061792079 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063005654 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061866189 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063291125 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062293439 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063698975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061632724 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061737281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064342192 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062776654 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066814594 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061314123 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062567045 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061533577 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06263993 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061469864 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061452017 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061655998 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065311142 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06214524 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079348329 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071235215 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061296442 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063203178 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061964966 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064924588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063044326 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076770688 seconds)
  done (took 5.830566969 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085670235 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088222163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066882183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066436808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062824513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062091772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070514505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062821272 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067022506 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082079266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062948292 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067201029 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067225184 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06646596 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062696062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06736295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071443216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06274571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06221633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066285961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062334516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070094096 seconds)
  done (took 2.760557798 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148638918 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068352184 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10425256 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073017306 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070685727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073267072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068394464 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068065122 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06836844 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068682201 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068438263 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068037984 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07099681 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068754043 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068783629 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068677036 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068259967 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068517098 seconds)
  done (took 2.611453574 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07854849 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06755162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088533323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068135839 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067799954 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067338151 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071685802 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072798163 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067106937 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068286789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072257704 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067411965 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067718893 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06764089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067266552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067977629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067375021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067709209 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07259216 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071645283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071675956 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072533171 seconds)
  done (took 2.802807139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077109436 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06653047 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089703758 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068553585 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062096683 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062626133 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06836446 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067076328 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06827309 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067173799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067021259 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062296667 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069644081 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067027655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069679193 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067458085 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066879918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067172359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066696681 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062902882 seconds)
  done (took 2.613593921 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083964853 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064813846 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064833439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071888386 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065439098 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06516337 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071828443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065540079 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065272914 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085913403 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065257526 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066004082 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071672354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069403469 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065435174 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071932235 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071523409 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071472745 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067992119 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065511096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086125632 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065359881 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071670072 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065195777 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065557591 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065386691 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065416198 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069167665 seconds)
  done (took 3.196808769 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065353573 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06553794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065115505 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065420781 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065182743 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065344199 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065707074 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06544433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065153629 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065149138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064571988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064555962 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064514883 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064549111 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06477938 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064542862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064961413 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065151359 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06531837 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065164929 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065033656 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0648539 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064885595 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064911235 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065147633 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064469714 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06498628 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065366123 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064607179 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064846346 seconds)
  done (took 3.206327015 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075574015 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073370407 seconds)
  done (took 1.404736658 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063749405 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077466443 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061271668 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071745546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070939944 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065517322 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071643869 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071108425 seconds)
  done (took 1.805482809 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08558303 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075427387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064156038 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075653816 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075214867 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085318546 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126362292 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064229501 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074195149 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065259683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082592411 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066283558 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074592016 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069095567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074887124 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077774557 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06266403 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.06909686 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065342573 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062354491 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064445806 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077544717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07423965 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062566353 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069351607 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091969868 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080179912 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063801285 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070907568 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07638349 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074099757 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06104936 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064041386 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063968784 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061947952 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074986604 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082461745 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070669818 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076623317 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064711021 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072303725 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061743587 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072718807 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074481 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079778812 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063702059 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064224979 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061723263 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065128619 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069785276 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061951299 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068441094 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061317202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075829635 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071652823 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079193302 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062458382 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069474001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070568326 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07095426 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075458242 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070249029 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073661636 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063530977 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079473799 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073310301 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075834722 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061970963 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060964158 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062207706 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077618512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091948077 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072999989 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063866001 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06407697 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061776175 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070839719 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064216504 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072497639 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07512835 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063834669 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067956221 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07597149 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06834569 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069910352 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069947333 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062788092 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066733668 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064599763 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08324253 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062691748 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061493098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065013589 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078345405 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070480454 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065856931 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064746706 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075663032 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061340361 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064082572 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064394909 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069648753 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077253087 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067801358 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068061036 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07675002 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073368708 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068868126 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070059775 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060824098 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064384301 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066002918 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075564969 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060890495 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070392502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067566265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064162012 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075135667 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062392221 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063432018 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076287122 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074983621 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062106887 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060972812 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070635348 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0635363 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065764666 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077016676 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062215295 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061604431 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061608554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071132849 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063184956 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071031718 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.191517403 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071529427 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061857232 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062120421 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068180356 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076202522 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067455033 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070275897 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073877762 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07000425 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062688412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075822312 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070754646 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066289666 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073758884 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068203518 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061986848 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066228805 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0704535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062752171 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071200936 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066159649 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070567186 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063815144 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0630746 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069703369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064618499 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066195592 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06918623 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062687903 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078400425 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070019817 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061455711 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061217357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070644394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065411159 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063674317 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065788955 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070065089 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064085083 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061688614 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062802211 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069846641 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071244798 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066512112 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064072855 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073246945 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081147837 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063214245 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070565821 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06348271 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065033767 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064257459 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078415376 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074231997 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068264347 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070364045 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061367403 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073026373 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075689435 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066415047 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062122509 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065896454 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067176225 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07523237 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067390747 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064118759 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062507485 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06997382 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066299649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070423836 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06348456 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066543155 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068835939 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062569914 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069864161 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064289241 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078372773 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071133423 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062379658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066342663 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062533018 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074943563 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062226681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065193685 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066459854 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064603854 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062715033 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070605436 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06108847 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076190172 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076424667 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069089572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066047516 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063300317 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075709277 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069582688 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071791959 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070958197 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073261989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078704052 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066387822 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070832797 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078589906 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063583477 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060891809 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075019125 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062439541 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062470718 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063077727 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062631287 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070617608 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070349353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07360927 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060781845 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069933922 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061933933 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065965549 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061603393 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072098735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07066066 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067468882 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075991278 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064136811 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063571004 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071087781 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062980271 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064269359 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0644391 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070512465 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06414012 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069369073 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06582625 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069435162 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065674055 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061727825 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06954369 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063822974 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068972548 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072415986 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.190172789 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070371855 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071045417 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064289759 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070612591 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067322715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066285258 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070743362 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069603391 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068776115 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070346043 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061901717 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07501778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063953704 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076367315 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068820423 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061333074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069724498 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070252361 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068078083 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064278638 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064464462 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069500378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064002753 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070693454 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075943922 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065235657 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079311975 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074556616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069960596 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070583161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068883721 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069498012 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066375635 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067944322 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064546603 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06947579 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063388637 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071983586 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07052496 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069165685 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069959078 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064012514 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068947823 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065114028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061861393 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066377994 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06672789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063393524 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076331527 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06405369 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067245744 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062984351 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064809038 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062754273 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061190511 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070568703 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071238663 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06446782 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074283239 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0668139 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069954098 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079018934 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061525219 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06243251 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06178743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065151264 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076143577 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064597537 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077487929 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069092582 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066992362 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061935147 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064506731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06259222 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061761122 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061942937 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072115056 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065709083 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062955512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064356435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070708882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064659953 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076251092 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063411257 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068433423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063960972 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061491183 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066404854 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066064802 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070678393 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064654549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065379554 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06188574 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063714817 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067799387 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069582631 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063284268 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069272746 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076210292 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063783818 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070546237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066483789 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061946678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070515728 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063170473 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063368432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066398034 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071278117 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070894958 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064849861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077953467 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066101316 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069664001 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064176151 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061991989 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064029121 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063711065 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063534683 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066131242 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064745149 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077554111 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062102782 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069519815 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068426531 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067071922 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073771071 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064075505 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069648524 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069103798 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064916432 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07007411 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076975122 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067201964 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070691981 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064456302 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069011701 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073019031 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065879535 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075172005 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069027362 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064379646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069405486 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.195681411 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064155332 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064220317 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063300473 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07410418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064180128 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066402175 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066186811 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062400492 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068490152 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066341963 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076901109 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070139323 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087100728 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061870031 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061635855 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064287512 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065068236 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069730218 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070616071 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073617735 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070377221 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067404002 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062814326 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077894035 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073745852 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072046211 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065715833 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071609054 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064509636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070510073 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068149757 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068427683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064591485 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071373485 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069489194 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066382845 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073690597 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071357221 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064625868 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069087441 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070065156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069614016 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062198771 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063587804 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069950315 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072220036 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069947137 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063672455 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078635604 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065720541 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069076809 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066865442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063131448 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073006071 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061996371 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069781982 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064677204 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06435785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061810771 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066317874 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065624908 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070965657 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066961748 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062287857 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079340806 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078190609 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069738362 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063762613 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062676229 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062113617 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062053615 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066669316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06459221 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069533913 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078446933 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066253708 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065639231 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061921995 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063866185 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07154325 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071515808 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061467476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061837218 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066249495 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070116629 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075412788 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062988435 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063801449 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071013973 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070428602 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061720145 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066473008 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061455079 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071951646 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08070414 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064111309 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069609125 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074070143 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076848493 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064683102 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061997118 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064124667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069717128 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069070679 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064876048 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064627714 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082479135 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070672981 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065777289 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06282814 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070448279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065994895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077226668 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064895968 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066810364 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072053863 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069809637 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070245466 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073347282 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074161929 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069252472 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069322566 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062762687 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068422454 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062614967 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066025419 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063943871 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063838282 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068025712 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069750562 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066063914 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078418051 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077539632 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065717557 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060926104 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065965858 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065915783 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061601059 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064440675 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062301518 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062082246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.196114092 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063162375 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069839367 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072420823 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068104064 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064086673 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063421727 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061233414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073051723 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070016854 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069791627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061134476 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06341645 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063992771 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072043621 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066363558 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065281219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070098724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069582328 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069902156 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062327553 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075595663 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064470434 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06970562 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066384642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063340278 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063879115 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071128444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067826682 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065138123 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070279341 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07069952 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064869064 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061437002 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061290503 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073343587 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062049739 seconds)
  done (took 42.470321297 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099186707 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063194286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061797243 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061804888 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071720175 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06308331 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062459986 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063538108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063593892 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065249521 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06239251 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062454 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069812667 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076681177 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072427729 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066226563 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062154104 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063181006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061868316 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06314318 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069401938 seconds)
  done (took 2.748698127 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069756719 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076874743 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074229497 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079611078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070831966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067085715 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074604494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06683584 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075251902 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072539345 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075075303 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067003752 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072439678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072740588 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072630276 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067199129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075212365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070901182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067111116 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074746345 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0671862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075133008 seconds)
  done (took 2.913405409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064198503 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062969562 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069383442 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061725397 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062276006 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06127191 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066044771 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061760047 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065328252 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06556318 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06541824 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065346718 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069455106 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061423478 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066661754 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061092622 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105079036 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06504981 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063199434 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063533595 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061561406 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069883252 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061318996 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062364013 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065215466 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065708541 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063360515 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061676927 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062840619 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06585638 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062797608 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061402326 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069803465 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068903686 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065267979 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065097304 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062588486 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063472859 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063929254 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061370986 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068888104 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062328424 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063628557 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070051532 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061830476 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06175201 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070252106 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063070166 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061895144 seconds)
  done (took 4.525450183 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074372838 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109228428 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067561548 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090522441 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076198778 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069033895 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067960476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09208402 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06335789 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064396397 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077762284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078381497 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06563334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067104226 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069733882 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065521312 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066239069 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064659483 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068277488 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064922498 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069312777 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069649659 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07615946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076968078 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066533252 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064325017 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064770846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066543653 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076632014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069338536 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067176874 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067474801 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076756049 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070217475 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064606098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065007607 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077149255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065658148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065172304 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0631984 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065345249 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066610336 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06956907 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077622004 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065194603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069978964 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065357171 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063008725 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076649419 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06496006 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069657808 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077856699 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066678758 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065490425 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067173601 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076405179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065256439 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064318698 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065513075 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0760009 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063742827 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065941727 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077465262 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064372859 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069161511 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077560948 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070271158 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066281235 seconds)
  done (took 6.246375339 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072633923 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092132638 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079197165 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079233533 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073130184 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073363266 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073135448 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073602286 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073206667 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07756277 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073266594 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11265201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068789965 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075470246 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073187635 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073394153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073728698 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073999135 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073506388 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072899552 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073413285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079171343 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073039334 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079243016 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076222777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069249214 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073058656 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072781729 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079912141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072937393 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076508247 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072999098 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072799384 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07980304 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076361656 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073118784 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063202035 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072836941 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073172411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073126001 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069026686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07933758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073115421 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069074515 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07304144 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073052797 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079149609 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076826576 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075016961 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07684326 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073181152 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079624514 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072790604 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073589676 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079361585 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081834525 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078985855 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07932863 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073154237 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079278595 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079074668 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08211759 seconds)
  done (took 6.055377473 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077359476 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07044825 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081096912 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062320124 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064517314 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071913527 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062089154 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062718551 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070199215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069917628 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072456098 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072473955 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074779475 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072083035 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071982833 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074384314 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071967748 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071885719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070066704 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072125305 seconds)
  done (took 2.7757375 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074923883 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079916079 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067569528 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072513144 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067483908 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071819216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067049073 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067447283 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068455651 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06760077 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073254567 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073243685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068047803 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072376243 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073105766 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071811558 seconds)
  done (took 2.48250215 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08316367 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070687246 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077282754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063364657 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067058574 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062471504 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063374855 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061516745 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062466353 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076228276 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063774985 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074581686 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06337032 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062207765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062675877 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069034374 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062928142 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063628109 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063120934 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076284957 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070068172 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064856238 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067233743 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063269727 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068452482 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070630392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065190826 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067090557 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063494953 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06381245 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069162208 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070422449 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063246757 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064262653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062378221 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063553065 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063112401 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063612679 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069137576 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063130824 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061854696 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085537067 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063227077 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064216062 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062422464 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063959649 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062387263 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068956979 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063986961 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06843271 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063197967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065553116 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064061459 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070655442 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06571604 seconds)
  done (took 5.005923313 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076648384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067701209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061718124 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061399807 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066887431 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067831717 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067213511 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067407703 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068374929 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061726179 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068180676 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067136006 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068048124 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067487059 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068056649 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067619516 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062149891 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067625427 seconds)
  done (took 2.563249525 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072407444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066793687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071691657 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066826392 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066137468 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066679595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062378515 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062171332 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062045176 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066827823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066680241 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066403808 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062257653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066712163 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066683585 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066827826 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066612992 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062394313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066543855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062157823 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066156296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06208057 seconds)
  done (took 2.795692789 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096080395 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083768713 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.129299764 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079921512 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086608825 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072661101 seconds)
  done (took 1.900756523 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091246335 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096388824 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066968125 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067867654 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072736353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070133777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070520848 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070784566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07499192 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075350708 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070633081 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078203907 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075214134 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077066592 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072800224 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073215269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070439648 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070544043 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067035356 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079885211 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070820059 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075234614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070623546 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070179069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071112304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077052697 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075089068 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07522542 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070474155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075326091 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072718153 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070515454 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075099885 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075656333 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067281823 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075188393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070940596 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079791579 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072991043 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077000252 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067000837 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072857725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075189885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074492438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075136377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070928128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074247361 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071418636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071032828 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085191669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073145436 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076875675 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072869946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075165976 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074615406 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081491438 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075522928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077636897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072619598 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075590559 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076822637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073178618 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076730467 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07555552 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07257945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076742397 seconds)
  done (took 6.260934957 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102812847 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067640521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071479059 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076209137 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076692718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070853833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071055955 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0708633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070830442 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068314978 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104496685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07141247 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077413478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077215397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070857479 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070673936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07096711 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077197095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068289045 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082369772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070555305 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076748139 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077295535 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077285311 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07539592 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07313877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070736282 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070372365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070476189 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070654364 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074237693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070894003 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07692999 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068041047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076717996 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070596913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07066155 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074622058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070430917 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072979773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07726044 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080182143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070668679 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070789732 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075492654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070640763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070879174 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067569865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070593537 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067514951 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075138758 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074987888 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075199123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076571482 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070291234 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070229986 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070686826 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070280961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070360527 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072448831 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076418414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070776037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081717083 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070163257 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07055413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076630911 seconds)
  done (took 6.246809606 seconds)
done (took 128.744270932 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209078835 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186176147 seconds)
  done (took 1.738575036 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073484813 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103342342 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082310809 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133215074 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071248137 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104843329 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103738376 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083617381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071029406 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071124469 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071271652 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073339496 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136147588 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07175013 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071115474 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073451434 seconds)
  done (took 2.757532105 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104355121 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214921119 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107932258 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069261816 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104352656 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077454393 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069168368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084609762 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076309549 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07253421 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077148425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075430962 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072244538 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075258652 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07565527 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077225679 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072057073 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076972133 seconds)
  done (took 2.948624789 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103179843 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094721156 seconds)
  done (took 1.563144348 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172462647 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132964645 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.195117433 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342018628 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.14855291 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.42708425 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138351832 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138185931 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114798804 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134856818 seconds)
  done (took 3.30654026 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100782688 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196083275 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302242953 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119468187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075594657 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111141936 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121062288 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081685841 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081042447 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080645834 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080955471 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078319344 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097483795 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076484032 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076725549 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07834003 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100774908 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075765022 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076055777 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076273288 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100562435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070342892 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076438609 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075829317 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078808111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07830893 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07119894 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070356234 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076395201 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075277304 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079305928 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107920518 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078600335 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105145198 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074190365 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105953224 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076558687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07420255 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075658609 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074560377 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077664358 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077655978 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077983903 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077737548 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07109939 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075994609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070788577 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069770354 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079929895 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070546432 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080070569 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078927556 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104624293 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070792935 seconds)
  done (took 6.185043349 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107564124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1062111 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071497082 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11265733 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103909106 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071420864 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105282922 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098839051 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107403578 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070892162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069618982 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07101119 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079620193 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081033265 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114627619 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107613669 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072821259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07090306 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10759472 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107060007 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069553058 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101500061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097480606 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107086986 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069310736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070992321 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069547232 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071333518 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076422526 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07735093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070808433 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078702517 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083406773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077179322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068715793 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069186387 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069845927 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078740204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078737162 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0784838 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076681138 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068813934 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069138035 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070264005 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069906377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068413761 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077690038 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07869246 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076986816 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069048758 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070899967 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069021464 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070068138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077939502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075882573 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078761675 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078434 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069228034 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069270442 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072166942 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079187406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078840433 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078774827 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070019301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078369903 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069613185 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081956361 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082831384 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069682578 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070400342 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069039129 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069595938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070056453 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076370559 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076259084 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07041967 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069901337 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069485953 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078779749 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077060029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069177476 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075979395 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068370586 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069473437 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070276149 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070494743 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07602465 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078414546 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070459639 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069295294 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069343637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068764059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068227901 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075557118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078048533 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078250335 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076932274 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06991057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077449496 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076246344 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070505914 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077400956 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068638643 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07037668 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070014399 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077075174 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076168561 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078745655 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06948084 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069364977 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076720599 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079557827 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069360803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076316076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078841929 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076946283 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068446675 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079700613 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069426478 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210432522 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070625804 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079810002 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069733411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077480917 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069301449 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069139493 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069557694 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077341899 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070777329 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069275021 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070239373 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069472181 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077489545 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080844127 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071301001 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077419913 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077502585 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070677715 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077219963 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069664822 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077691418 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070045048 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07086318 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068335327 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080624663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069483943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069638845 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069621603 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078484871 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069543189 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078942165 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075960842 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068841138 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080912351 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078631495 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075906239 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07888897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070564275 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068995338 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069250599 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069822092 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076321055 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078163644 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071506045 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069627436 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077201417 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079288614 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068960735 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078172918 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077411836 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077565024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069661715 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070338782 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080217275 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079842702 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07729291 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076983313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07789199 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069657928 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076707756 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077094937 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069428602 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083023491 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069369148 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081131626 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077891903 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075917163 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077606995 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079212942 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078658854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079291804 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081981755 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068741024 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069281497 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077796625 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06980891 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069757919 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077115597 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070594134 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070613771 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081711068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070354822 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079007406 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068961266 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077899011 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068720759 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070979833 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081963331 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069786551 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070412837 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077218592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071904215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076676555 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078863801 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077182372 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069320052 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070389375 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07836782 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077849385 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069508621 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069047701 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070556228 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077743816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076182083 seconds)
  done (took 18.534925853 seconds)
done (took 38.412827125 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202249198 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152345134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183363694 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112188338 seconds)
  done (took 2.113120934 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107753601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095617269 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087600589 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065920877 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094170589 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065820299 seconds)
  done (took 1.913096797 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284859875 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201195472 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178837288 seconds)
  done (took 2.056807797 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209812447 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197512988 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447872698 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287929959 seconds)
  done (took 2.63314137 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140066193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081705819 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064478866 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082603286 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123610386 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148768653 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092636765 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117386214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075346932 seconds)
  done (took 2.376434901 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144635632 seconds)
done (took 12.650281394 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100501796 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103915932 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23562452 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073114253 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06912728 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115797082 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093713007 seconds)
    (8/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.189922588 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.126124988 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208083744 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076516927 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.250034804 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099705917 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073496318 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092675763 seconds)
    (16/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091727019 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095580617 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.211324006 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075092167 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.219494556 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.202076502 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.156460051 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074754165 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093018538 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.166684941 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093090371 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073356735 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068006263 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074902359 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076414369 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123368554 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072843266 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17672386 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074450115 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.385862529 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094203736 seconds)
    (37/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.206275729 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088464522 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093147321 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074215874 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.227279112 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06449615 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065744782 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.224360823 seconds)
    (45/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.160935259 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072851716 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.147813691 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089156917 seconds)
    (49/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24542461 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.102197778 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178608356 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.066932472 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074408953 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171893523 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07869309 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06575783 seconds)
    (57/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089135949 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07587009 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092638298 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.101022729 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074030118 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065279889 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074215373 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073782069 seconds)
    (65/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071435722 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075644509 seconds)
    (67/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093014837 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078627148 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065509251 seconds)
    (70/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134956983 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.226869544 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067816752 seconds)
    (73/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065938634 seconds)
    (74/309) benchmarking ("sort", Float32, false)...
    done (took 0.131635654 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170907047 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067937058 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076449841 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132552021 seconds)
    (79/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07104521 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136242009 seconds)
    (81/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120854387 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066003225 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078647253 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065532261 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073923149 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.224465824 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068067938 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089426823 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065196773 seconds)
    (90/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138282485 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074885587 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07589573 seconds)
    (93/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126936798 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177454168 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.219307671 seconds)
    (96/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.178537106 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071664386 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067461337 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.134134925 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.179992654 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11519776 seconds)
    (102/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.127025255 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074588825 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072934346 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.193596711 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066566056 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075266667 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194667621 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.214864189 seconds)
    (110/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075559746 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168499192 seconds)
    (112/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087712217 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091470772 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081974451 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087205791 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074582166 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09206268 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067311354 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06811961 seconds)
    (120/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072429738 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076880638 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173875558 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104975281 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074993034 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067736496 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0744551 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124081036 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065887588 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066338962 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07278946 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073330421 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119926235 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213504469 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174237032 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066437136 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076936459 seconds)
    (137/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138806288 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075992268 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066531787 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173683222 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177520354 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081290508 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076882192 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162570803 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075910199 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066285151 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095192431 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070024625 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076459829 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07805912 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083595675 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066385927 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066154042 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072376359 seconds)
    (155/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.181045774 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074444131 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088054085 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074592978 seconds)
    (159/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140636426 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072955888 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135332674 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133073293 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182462018 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130528554 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069221831 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164466436 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066350358 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066229839 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06615718 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065084096 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066111068 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095690211 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091126948 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143241494 seconds)
    (175/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066329617 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189370144 seconds)
    (177/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138089339 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141367549 seconds)
    (179/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066260426 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066234021 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065400953 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165711119 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068827889 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077968585 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064761124 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.075818739 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092250831 seconds)
    (188/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093759372 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119364417 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076914567 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066142205 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066200806 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074878511 seconds)
    (194/309) benchmarking ("sort", Int8, false)...
    done (took 0.168911496 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173575 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072158735 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070857324 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124804424 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169650644 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074642366 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067009799 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080071935 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065737682 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065744723 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189992648 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065854201 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066872416 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064897574 seconds)
    (209/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.347793657 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074621665 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068248289 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073805776 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067023005 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066857352 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078498012 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077730328 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138906147 seconds)
    (218/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079729848 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07473783 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067532661 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123284837 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06618647 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069408834 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113682671 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077113186 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163823064 seconds)
    (227/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066361191 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069122039 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066077759 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088853695 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066644009 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06952518 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066937279 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086157324 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066040589 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.067432026 seconds)
    (237/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066636728 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06839057 seconds)
    (239/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065017698 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072789008 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114205231 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074117857 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139404232 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126846925 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06706046 seconds)
    (246/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.194751358 seconds)
    (247/309) benchmarking ("sort", Float64, false)...
    done (took 0.131917678 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067281053 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066761559 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066675674 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069154003 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077123816 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066427649 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13434721 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065239234 seconds)
    (256/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079191943 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066953461 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06726381 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066505102 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066976948 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079190055 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128492264 seconds)
    (263/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072820022 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065454293 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066500278 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165163213 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073190141 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066280028 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066440565 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078770941 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074232456 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067798907 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066109695 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065871713 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06678018 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086537541 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077934407 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069417854 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066355958 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074124633 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137402835 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067641656 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066209709 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066145393 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065109943 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078168543 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076917494 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067181626 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067044687 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078452561 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069598563 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14390362 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066921335 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129547393 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067129084 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072540227 seconds)
    (297/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066575974 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066853768 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070236544 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.065938069 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065520403 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070132368 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069271468 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066161309 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067764008 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117025507 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065453679 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077401919 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080587128 seconds)
  done (took 32.870885962 seconds)
done (took 34.279104651 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084262751 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097449416 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072862636 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09216545 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080394773 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094658711 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073718682 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078404212 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080877845 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080730178 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079138173 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071973288 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075343087 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07566385 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0731114 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097044088 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079799981 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074015631 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074275789 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066030034 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074372719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066039814 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06604367 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072180149 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077636387 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073330421 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075350806 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074931708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066268224 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06645545 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071163488 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075197914 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066333598 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078940602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074768236 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074316048 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075642491 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077951602 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065684046 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066312921 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075978585 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066023511 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074009839 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072547675 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070578225 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072380542 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074447408 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078066306 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096634546 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071135208 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07612681 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076670844 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078020232 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072020356 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071242936 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073922106 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07232231 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096294887 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074267154 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070621838 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075170833 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075084062 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072687636 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074345573 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074465414 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0763921 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078842374 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072095093 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076122523 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072817891 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065886007 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073748028 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070797135 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066047553 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079424442 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078643091 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064934981 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070570184 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074184716 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074501946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065828069 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070132935 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065518688 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070692694 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070190412 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072070449 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071478816 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073223947 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065263221 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074374234 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07293317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073761932 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065982024 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079451263 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065809163 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071827774 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066607745 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06601675 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06566017 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070812291 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065718392 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069992965 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074836077 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064927247 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070731768 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079024401 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06576427 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072934513 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065242159 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065821413 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077435653 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076194686 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065863016 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070059937 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065640054 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071131509 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065164134 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065663 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065405408 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065386135 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069920669 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065516745 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06976917 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07082792 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078493596 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0653829 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070421494 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069878033 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065433484 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072240379 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065795702 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065746971 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064956706 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079409833 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069820896 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065960394 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071310308 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069981046 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073615165 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06474491 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074491476 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072002496 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070320994 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07217699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065046417 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076824577 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070313192 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070440871 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065452247 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065972568 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065327496 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065395793 seconds)
done (took 12.534420764 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069000016 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116478013 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09236662 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092306017 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082189098 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067114777 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073896222 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092743847 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070102595 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095861875 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087999692 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087711862 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108813797 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06612537 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06648714 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068130335 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065385722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079722602 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.095631194 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08859588 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106814258 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06662373 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086387494 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088310083 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083219189 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090102158 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067790765 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067671561 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069195255 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087228498 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091562422 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066499831 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068174441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091170312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084519717 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07930219 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067386246 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074975462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067484003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06661767 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068018797 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.089157486 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074931179 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077757304 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067938271 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067999463 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067852034 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.077699764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084772461 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074670614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081627786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090467047 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070936628 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067462658 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065595507 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.077180943 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066879901 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067864334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067296875 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067462975 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066654972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069242163 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074834995 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076036226 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071205392 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07654004 seconds)
  done (took 6.593568154 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083990429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0968523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083737728 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083784346 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0661267 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067275182 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066950254 seconds)
  done (took 2.038653359 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067546825 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087594988 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090237386 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090031108 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.0837671 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091161376 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074877084 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067590665 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095387582 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066006308 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086891727 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09709 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070593983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078843194 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091284477 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067140658 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091087929 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067051863 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067849729 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090479723 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071402992 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093375833 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078108046 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067138949 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079219588 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067419779 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099021742 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074939405 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068793701 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068953699 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068247902 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093837136 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079639427 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081077828 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068228009 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082007352 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080346042 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070501505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077899477 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073280819 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079931238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068343286 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066315763 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068711181 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06997359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078479988 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066055149 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068571796 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068194384 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086040899 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065990338 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079571428 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070545437 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072918613 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073099665 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072026556 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075104651 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068612168 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086553706 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068139136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084261722 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083211356 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080131181 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083283167 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06693428 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079435978 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080467297 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06851508 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069460007 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068609828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083101064 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070385475 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068968373 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07890604 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066673975 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090809821 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090776563 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066542976 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080094707 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068915068 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068421132 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078584175 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090904608 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072701969 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068074936 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071657427 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069280837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070515051 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066343218 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070930474 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068183234 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072720695 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068329501 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071000504 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06951214 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083082788 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066140139 seconds)
  done (took 8.848585453 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069779643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068036175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069695402 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068534721 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067969358 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067897739 seconds)
  done (took 1.927255312 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090911088 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068179503 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080504246 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067939448 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10363184 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082838443 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083020696 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077431999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081632703 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079620676 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083446673 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085958762 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087973422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070104113 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083426406 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068919796 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082916264 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072367615 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079203993 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070479037 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082309506 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070086442 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070977301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087557577 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071902425 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068942865 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068106119 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079392281 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079170341 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077245408 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069848345 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071514882 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075975115 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077742952 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083759674 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07595661 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070883978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074379001 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070826788 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071983878 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085721746 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07097086 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070774378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074173977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077399653 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075619102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074451417 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072286053 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082672132 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074684649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074267448 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06889293 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071352535 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074126951 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076210572 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077623521 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074064936 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083536615 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07033959 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075643957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067930358 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071239045 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076944779 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071123068 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075083454 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074313181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075833248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070431483 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07058565 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068249231 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074069154 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068736622 seconds)
  done (took 6.954002585 seconds)
done (took 27.868385678 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.558253376 seconds)
  done (took 2.031518478 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613190066 seconds)
  done (took 2.11506584 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.596485446 seconds)
  done (took 8.093974598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.354755313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.450248728 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705323038 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134489208 seconds)
  done (took 3.175305702 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698294192 seconds)
  done (took 2.201290099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233244467 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223313883 seconds)
  done (took 1.966674763 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.357697316 seconds)
  done (took 1.855922775 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.061232709 seconds)
  done (took 2.559587083 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230693581 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165687827 seconds)
  done (took 1.899209965 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.441813432 seconds)
  done (took 1.942781659 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.209219393 seconds)
  done (took 5.71213423 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218822723 seconds)
  done (took 1.752119216 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236939125 seconds)
  done (took 1.738862217 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.712790233 seconds)
  done (took 3.215512625 seconds)
done (took 41.771865709 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083917819 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086247619 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085706797 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081231809 seconds)
  done (took 1.823475012 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074972785 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071048975 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074581604 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070830687 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074701667 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071162277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072532394 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073630794 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070591204 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071634471 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071156429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071045822 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074366446 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072679341 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069948671 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074148307 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075137541 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071805157 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074130901 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071210942 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069426626 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073876332 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074416036 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07070457 seconds)
  done (took 3.246665064 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079443347 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073834427 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076490079 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072422524 seconds)
  done (took 1.815152406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077314454 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088772068 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086540443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077676003 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089381655 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085173221 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068240868 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067666419 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069049954 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077688745 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067149105 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094507904 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087073043 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077457267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079772117 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06439692 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066024206 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08561992 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078534071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078231202 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068784397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077520188 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066676179 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088658064 seconds)
  done (took 3.376232509 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085096768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066691613 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084145835 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093458173 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095243534 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067583604 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082621674 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095477311 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142502208 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066975603 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072810907 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067301576 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108912921 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066958172 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083809495 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112930968 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116241598 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070831615 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100892936 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06708759 seconds)
  done (took 3.265434329 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084968704 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070224464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071521149 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066586053 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077723008 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073608944 seconds)
  done (took 1.963374442 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069135558 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0687779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068190331 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067981388 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072998356 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068057472 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069602728 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068540269 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068526427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068070648 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068002219 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067159367 seconds)
  done (took 2.340406062 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189325386 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070544243 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07181691 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066714598 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073056152 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06736768 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083111179 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070009706 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.0859707 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068168893 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067841485 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069939969 seconds)
  done (took 2.499569923 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179777907 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074768702 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210036328 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143350843 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099094195 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103908352 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107913549 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102030535 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.120435705 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097404454 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146434131 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159286728 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100208285 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116121602 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084580843 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.117739055 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140401981 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135892532 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097052781 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147300142 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124318998 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113424405 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138319204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090537411 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10248152 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118224998 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072523468 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077802519 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152695054 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116501951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132381718 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102645343 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090778169 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153776218 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159030746 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125269145 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139465862 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081954099 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11799844 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.125152454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183626341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0843992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138360417 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097601427 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078183714 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12021208 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109798224 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.10973188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102165718 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085301189 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269883366 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168303173 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.119891511 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084262526 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114072363 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101128691 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.105729663 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113365061 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161103882 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146490694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115302842 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070277459 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104679612 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142186362 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130811252 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102073463 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112581312 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092225695 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11702208 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141526435 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12102523 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125729296 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114985269 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086402744 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111900682 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127291566 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120812697 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156041529 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112314213 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071913916 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116046497 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095791855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079668251 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143562483 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074407215 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154015167 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092569931 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.122492831 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125864896 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099792351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098603551 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150160587 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130475303 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097793159 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084446099 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09697312 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.111876232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137197855 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08509743 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098753786 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110710127 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07807564 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127776527 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073691212 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110257941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094152837 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110157998 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116299068 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.224176727 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115049181 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09389556 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096719864 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115843939 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144963694 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0880572 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079204539 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156107225 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114143895 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10107605 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12863475 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142345435 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116242646 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094226587 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140160338 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155843699 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084442059 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148275474 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100790655 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081638405 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099942546 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116280491 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103264533 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.112661914 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080431228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113034575 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147821336 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073194814 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093824524 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117456875 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079820015 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079138527 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101989345 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100795893 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090883108 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095405259 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101614127 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13051356 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112133595 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10184368 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115143036 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095753893 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157632816 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086559702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.095948093 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097950184 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071387312 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.117346059 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147094118 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077098776 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146853975 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.111350059 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112179185 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110290896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081785697 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128479118 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077395863 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071304971 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134006273 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10624836 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.246588584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140385821 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111107204 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.113327985 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.109039319 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126033505 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119749151 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122305063 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099809628 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084247415 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106369016 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123172466 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071918159 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090341633 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080301132 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095878919 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091366736 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082810384 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125537112 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112010186 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104408887 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106256831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09329264 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137108963 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077967022 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112140261 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1105801 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093471369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142045997 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143959641 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120549622 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095161512 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129574399 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071922081 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073224761 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086536519 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112794554 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082631774 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082048766 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108785491 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137965524 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114620925 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129444228 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119467936 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105221867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141008544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071385281 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117246895 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136382507 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.098939928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088463176 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.088527639 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134941778 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100760047 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162816989 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110045693 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114959243 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142623818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095186983 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077698051 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097478415 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118862734 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096397376 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134459058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096031814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084101645 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102433312 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075994972 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092174366 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113633767 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109819667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124692841 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.105844904 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116558818 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074816012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105545378 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109958441 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113457964 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081378901 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106606436 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153276709 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092693244 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105524756 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133201657 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07568919 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131491868 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151414751 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124055614 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080240732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097383493 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107204294 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116729701 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106474723 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124692336 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096780174 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122783919 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099341798 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.081722689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086199372 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086526689 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093441534 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102324153 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093352762 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101277899 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.085386511 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108370362 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093139908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09698116 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1070793 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.093967529 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091462848 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089003819 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148327385 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103974711 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138528338 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.088589915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.12529689 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134705677 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070338066 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074648009 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075257501 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120203962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079265409 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113330453 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101096071 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106004308 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10752168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113976494 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089100729 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067834675 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09992962 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117752218 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112309494 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089838176 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.09516822 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131495822 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109260832 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074067736 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097275203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105742733 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09194805 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150810443 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.076749784 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100584163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072612549 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074868958 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112621761 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127648589 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080753678 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.091557004 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104069792 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099142379 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113038022 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08823054 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099723807 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11862357 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12787667 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105335425 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084190656 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097371419 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114156752 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129840152 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095597994 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.089452957 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149913154 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132537238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.133506106 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081535691 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10407654 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104437021 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099721866 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118405309 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079673005 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134876291 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075568582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11825373 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090982492 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082000627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113760378 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.477032524 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090057209 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141567337 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114479671 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085048077 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082917085 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114017407 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117745167 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104904921 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077668808 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132917678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076970072 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13088975 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158690544 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083462888 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104892949 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097866856 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08412278 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102356846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102080067 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088822419 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098772761 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160970245 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089806046 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144279275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13002835 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106663554 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134943846 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100952725 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636572582 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083194126 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147083136 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114558722 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167433567 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095732635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117385317 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110439655 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118912382 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137847583 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101724076 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183744884 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127869568 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114756013 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079442202 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100499195 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10175029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088340586 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101551883 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112080005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110659502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093942175 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112882915 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118173111 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082712757 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095123817 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147856403 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11226935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129701551 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130045534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238819678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115632388 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12896335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079323335 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112007114 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144371844 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103711655 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09995013 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083359445 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09784898 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160877184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0723734 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149151124 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11312088 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107358791 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109924654 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106059793 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122939557 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100864085 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115492556 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091452875 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109317178 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108973769 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119052568 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079424668 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101924495 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107960407 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096668403 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094530158 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098353799 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144171244 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071878784 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095725263 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112108341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137040482 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157802402 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101769827 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082553461 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114770342 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115594761 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10878819 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114764212 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081404056 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080902754 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080972881 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098984026 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122067116 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108292569 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114824711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107206562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148220112 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083149699 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223706921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094247919 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101415968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087472196 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078988718 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094223646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093378599 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101538373 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105320707 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161895199 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09190708 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.240579258 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093141547 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07451636 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081882897 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120897308 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102758645 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110110493 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101595907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080997721 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100375693 seconds)
  done (took 55.551651699 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119602888 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083009296 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09736376 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.155226459 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121817248 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212506764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157646084 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195002657 seconds)
  done (took 2.800897318 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069095846 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081658337 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105313061 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086582536 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067238444 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069317105 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.213725773 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083890988 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067860477 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090500982 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079926883 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071235518 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447597478 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068223332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069698518 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079501799 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068481036 seconds)
  done (took 3.472876717 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371291385 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613078446 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364476925 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076519451 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.96235695 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093488572 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.19007495 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13839855 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082402205 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552097293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370421353 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136444305 seconds)
  done (took 18.612711401 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082159987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076031144 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091164667 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090645597 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078856902 seconds)
  done (took 2.082477614 seconds)
done (took 104.404819608 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08206847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.514481595 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069605224 seconds)
  done (took 2.282909581 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091228745 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089020133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089565933 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086986146 seconds)
  done (took 2.031150079 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074975963 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077577863 seconds)
  done (took 1.818962809 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236545369 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175587284 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095307603 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084193906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081683812 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081789452 seconds)
  done (took 1.918344375 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072871748 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073235677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073233963 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077073855 seconds)
  done (took 1.962396808 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07122891 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067200021 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069645965 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072636965 seconds)
  done (took 1.94655925 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084557891 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084645792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079701561 seconds)
  done (took 1.91673065 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.093277918 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095073611 seconds)
  done (took 1.855381216 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081447464 seconds)
  done (took 1.749383719 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089841086 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099585389 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131284693 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115074097 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136260716 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118497063 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08371579 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088587991 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079461774 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.079236058 seconds)
  done (took 2.688351993 seconds)
done (took 22.421114903 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078917282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374949903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360285564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087280724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672736534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357304557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99203944 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093011459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108381773 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069839628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086408939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652271318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984621779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33388709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968757027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326024298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652361566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069484484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068699238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069624494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978460272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069013244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070065541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069904471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65093382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375099327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071152449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331350506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069752618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074089088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360650934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071189971 seconds)
  done (took 16.247429515 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070860899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123130176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073656212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084908633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07143198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070980281 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072355155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070351278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11876668 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070168093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087040156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069104586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073840924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071126266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090245503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070551029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073291585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071235095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070913587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071554148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088836811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070308838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071113781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070609787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070850077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08339908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071695736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070289585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070690639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074825323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075537099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071961948 seconds)
  done (took 4.145709681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1197255 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126785401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074309977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107258386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119437296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07152497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149002652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093899657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121834081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070218716 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087180548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069498509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104648346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071647398 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090836444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070564835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073526143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070873554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069998315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071090051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089407488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070683805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070953245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070809555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071871284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085262298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072345528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07045019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070645638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074653477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076134712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072154433 seconds)
  done (took 4.411732609 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071341517 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073804799 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081353258 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082285665 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068143315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070270704 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072194379 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068816143 seconds)
  done (took 2.272431473 seconds)
done (took 28.752791521 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07932953 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068827235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071595586 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088576503 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075242143 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079863709 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066325076 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075632866 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072554346 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073099872 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074362635 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070666755 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071452577 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066185494 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073380523 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067423658 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081960084 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072388621 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081233733 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082048551 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070543001 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073845508 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076535961 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081354818 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081394115 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081262238 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077174137 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073879501 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068813036 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072128019 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070949107 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078784571 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082161993 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082156493 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068306767 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068416272 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072459408 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070002766 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082676861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077622853 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069975003 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077458091 seconds)
  done (took 4.806179707 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084670346 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08936339 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082485014 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080032329 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090504012 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083073977 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086721988 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078619853 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078447198 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08636315 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074506113 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081969247 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079612625 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073280159 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077861996 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075226599 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080673223 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074339493 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078098346 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078915517 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087323194 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073416178 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088263618 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080462016 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075505468 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081170085 seconds)
  done (took 3.797092824 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073926753 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086247091 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093799032 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14120218 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112870684 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081235499 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08217626 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092649474 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097466951 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069187117 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074099631 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093996984 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093246483 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074731519 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109280534 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084997074 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084923258 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071274315 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075760485 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096918374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08945813 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085984474 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094633337 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084896898 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068496212 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07141498 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076023304 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084892926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074997694 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080148659 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073369688 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073005738 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069619959 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078874213 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0728485 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068314529 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092825364 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0802432 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081601922 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069497842 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078644675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069879742 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093981056 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128349189 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068436859 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072610867 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072387079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079688537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07002428 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096577532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080538425 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068705383 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069544271 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069558548 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069745043 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082566198 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070556747 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071086908 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078415004 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075326 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090693859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074180388 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086179413 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068780141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078628734 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070196178 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070641599 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067311789 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097169634 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075206286 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112243447 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069325902 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067143669 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079610032 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078865537 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074409526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068474065 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085614082 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079749115 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072538062 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07861509 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071604091 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071936425 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099627668 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068834254 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068340541 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06736889 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072240015 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075067947 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069473723 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080567439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067962032 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072077819 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081426968 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068617092 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069747002 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072442962 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070978 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068527405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078992311 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072352025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070120034 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07882485 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06951966 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072060252 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082060531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075481527 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068349326 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070584984 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072393615 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069832386 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072371821 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072260889 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071164565 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07553109 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07526347 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074470448 seconds)
  done (took 10.910588859 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164288037 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158192178 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071381702 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149788067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07660202 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080713255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153245783 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09476613 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069641599 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071054109 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06916288 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106692156 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102755848 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113107743 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081268337 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069672593 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092390979 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11054244 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155607252 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149084134 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092060567 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076752946 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071685288 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070799984 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070986882 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077988492 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084938221 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077257655 seconds)
  done (took 4.495043991 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078395276 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093531321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073914282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.080272407 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088616358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069676146 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071369259 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071126478 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083154482 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078366147 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070201481 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07520489 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073734945 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072565788 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070060557 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075839379 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076633062 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06867779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072839205 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074899989 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079412511 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094033263 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072665918 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06976717 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072266198 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069214083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077642485 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082232509 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069769223 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091627152 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067169326 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073963612 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083245311 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070495898 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069064572 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069700665 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069730427 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069471382 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070697868 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067900225 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06810144 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072991694 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068111984 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077571455 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082838556 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071125613 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071243946 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072514958 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072377094 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066958483 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072031689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072327414 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072446444 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076343624 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073535032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072341399 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070255388 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095970299 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075047079 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069156672 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068398657 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068212179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071879965 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07883691 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085418251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07167347 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067948843 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06971957 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082238479 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082708527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06854429 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073868954 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06703219 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071134172 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071837004 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071663001 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070505623 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067952292 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069238756 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069359301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069728616 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069280615 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068620594 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072099431 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067804817 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067951134 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069725459 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071252632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083378732 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068617747 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073312845 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069931086 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068134845 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0721471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07490048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072482506 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082982154 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080086617 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069883526 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068450615 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082333368 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072441349 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069059274 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075366259 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073948554 seconds)
  done (took 9.465909188 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092178919 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070676982 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085591654 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09207466 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079541167 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075106591 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079951244 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070163355 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086012246 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068698261 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077632978 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068143583 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080256294 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079466435 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070341252 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080143604 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072214935 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087490899 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083889193 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067944927 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078512579 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081691082 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081761232 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083570328 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082894413 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084366549 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081444097 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072277215 seconds)
  done (took 3.955850476 seconds)
done (took 39.108680422 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.787218704 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.929273596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.758313879 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.958356177 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.019739149 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.778458586 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.945644247 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.752504571 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.98112787 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.796306925 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.111973139 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.252611643 seconds)
done (took 65.908862883 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.782269168 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.937829836 seconds)
    (2/2) benchmarking "String"...
    done (took 2.028407234 seconds)
  done (took 5.660117316 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.006467993 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.416435671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018336361 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.752413215 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.760630573 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.185441354 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.54360216 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.219031545 seconds)
  done (took 30.590814945 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.917755493 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.981428855 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.462977409 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.480437558 seconds)
  done (took 15.581173916 seconds)
done (took 63.408103862 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.767649491 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.761449099 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.794008416 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.750475356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.827605874 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.755882335 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.069598383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.813600847 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.744603586 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.757077275 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.745182225 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.162862147 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750863683 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.131807054 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.74418967 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.744328423 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.786367262 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.355545891 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.898561026 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.760231338 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.748794677 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.755808793 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745395873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.754319327 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.800500226 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.7426468 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.139986745 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.751897407 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.583032107 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.746259095 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.790997976 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.21857777 seconds)
  done (took 203.591260277 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.74190769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.542556651 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.679985515 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.788289954 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.989786829 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.925438398 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.837682216 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.124469435 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.740339437 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.753214522 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.853252605 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.73807295 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.886051409 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.678774194 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770979129 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.824025454 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.900138851 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.918555418 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.777887556 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.891641187 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.756792321 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.751148509 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.673236038 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.866215597 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.767880175 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830962734 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.740230456 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.745513325 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.921099973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.840919442 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.748698868 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.75183506 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939913608 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.606066922 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.736486599 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.753357141 seconds)
  done (took 167.474775971 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.918761224 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.734155801 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.732516847 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.731035626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.735872432 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.730159594 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.850548592 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854631321 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.39636359 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.130700447 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784904834 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.728489665 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50821945 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.728114064 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.72631362 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.792473813 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.739498434 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.729315598 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.742064573 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.752274629 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729830854 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727796551 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850667406 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.741119968 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.727093816 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735699942 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.728498497 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733068425 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.112088204 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.726778748 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.945354639 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730255169 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731973792 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.967235308 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.726602099 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727358158 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.559326741 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.755669684 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.72702993 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806082033 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729201493 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733096741 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.726174116 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.944940883 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.727736466 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727043456 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.726338525 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.727061545 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.728600018 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843048661 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.728183728 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.846992801 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727023944 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21338651 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.726498326 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.726840602 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.244723244 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.338503127 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.738572234 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.737483662 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.735799305 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737439619 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.741384283 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.280185935 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.801842419 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.729212488 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.728183505 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733012807 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.72903181 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.74740752 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729420807 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.208976109 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.741409428 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.842888156 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848184698 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729026334 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791187745 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819942088 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.727126479 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.726948529 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.726085859 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.726555254 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.806510419 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.727736556 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.80954619 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73647924 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.728918707 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781666968 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.796166821 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.728172394 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55442561 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.72923385 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.728485821 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97545999 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790433383 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.727215153 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727855927 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.808074824 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849014757 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449940626 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.729392056 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.228835932 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.803926645 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.727138342 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.855845954 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.728857991 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803734576 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733257171 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.730272377 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.761060659 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.726417106 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.738136653 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.726215082 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.72565577 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.098187335 seconds)
  done (took 396.103613476 seconds)
done (took 770.84160468 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.339539971 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.29675612 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.386025033 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.311648327 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.286763663 seconds)
  done (took 13.285178632 seconds)
done (took 14.949769573 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.801684301 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.807419278 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742649707 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.803563251 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.739863498 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.804364074 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.787848425 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.746218353 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.775328298 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.745748496 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.774190429 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746949237 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734545049 seconds)
  done (took 24.675157758 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958125361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.956416415 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.792657476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.957564867 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766337055 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.955320035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879641531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871919034 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.863105885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.73711702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734643104 seconds)
  done (took 22.139246619 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.955547754 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.965995943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796021978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.956964909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769283704 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.956544935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887908706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.870567235 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873536432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735288399 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731021686 seconds)
  done (took 22.163551541 seconds)
done (took 70.641772542 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.727079035 seconds)
  done (took 3.390477094 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.743891661 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.898447709 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.726286665 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.732915004 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.726442871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.726131026 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.727057066 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.726586942 seconds)
  done (took 15.671372723 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.725217146 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.726869984 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.727391163 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.727162187 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.727184076 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.728246468 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.726451938 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.725964061 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.727040147 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.726334862 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.727107266 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.727337582 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.725181303 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.726094145 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.72731883 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.726862118 seconds)
  done (took 29.290577313 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.734718113 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.727434084 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.726678388 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.729302435 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.727008094 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.727327007 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.728641367 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.727389298 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.727299112 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.727077506 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.727300908 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.726794805 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.727554401 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.727371672 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.727325099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.727856297 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.726681065 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.727463619 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.731668513 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.726875238 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.728179123 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.7276233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.727511774 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.728129506 seconds)
  done (took 43.135264303 seconds)
done (took 93.150950819 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.455196474 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.754965948 seconds)
  done (took 9.874049744 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.736312114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.737444963 seconds)
  done (took 5.150680187 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.737249732 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.737998274 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.738309469 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.73671262 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.738835264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.738923736 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.737669698 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.73846555 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.739613617 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.738626591 seconds)
  done (took 19.054981425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.738891125 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.73755286 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.736275601 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.737772147 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.738331411 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.737355625 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.737435211 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.737602784 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.739190539 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.738963256 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.738941891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.738648498 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.739206697 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.739289796 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.738319337 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.73833746 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.738962571 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.739506283 seconds)
  done (took 32.964396983 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.739352592 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.739162525 seconds)
  done (took 5.151994869 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739376798 seconds)
    (2/7) benchmarking "second"...
    done (took 1.739673383 seconds)
    (3/7) benchmarking "month"...
    done (took 1.740101218 seconds)
    (4/7) benchmarking "year"...
    done (took 1.739317515 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.739530682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.740285915 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.739467937 seconds)
  done (took 13.852111684 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.74054817 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.897212569 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.96306836 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.611769606 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.74136777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.741951879 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.103215734 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.743193748 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743293631 seconds)
  done (took 19.960461497 seconds)
done (took 107.672582571 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.588942495 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.740005707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.981434371 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.804368563 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.805570672 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.075452601 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.754208432 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.006604802 seconds)
done (took 42.431953543 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.777657874 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.520670566 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.56882204 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.767715424 seconds)
  done (took 15.532697037 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.743475361 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.069600459 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.769777721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.603491503 seconds)
  done (took 21.926079068 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.118487578 seconds)
    (2/2) benchmarking "read"...
    done (took 2.094629504 seconds)
  done (took 5.893784455 seconds)
done (took 51.810401818 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73974587 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.740572723 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.741447142 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740370514 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.740926581 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.740959391 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.740476984 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741375293 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.741315913 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.741985793 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.741269079 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742235665 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74162095 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741143331 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741537636 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.741939116 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74166278 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.741881939 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740706249 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.742122841 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741793659 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740838475 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.741963646 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.742377553 seconds)
  done (took 43.468321025 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.743655199 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.741298663 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.742286372 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.741986387 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.741535599 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.741598326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.742226492 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.741472114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.742170409 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.74105931 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741995912 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.742886918 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742982605 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.74348583 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742391672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.742405529 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.742555124 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743414328 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743138918 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.743591254 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.742834196 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742671862 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.745056238 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7433611 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.743372915 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743509002 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.743638176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.743338474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742897884 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.74339707 seconds)
  done (took 53.960747887 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.743827072 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.742913231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742005155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.744050919 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.742807913 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.742383872 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.742887711 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.743268537 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.743359504 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.743332362 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.743065597 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74403396 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.744178749 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.743980873 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743640907 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.744534455 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.743216411 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.743842306 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.743573132 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.742867009 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.744189472 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.744528036 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.743595216 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744719031 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.7439219 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.74315596 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.7455775 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.743821351 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744069267 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.743654243 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.744593752 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.743130416 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.744275155 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.744921185 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.74395617 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.744205479 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.74432654 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.744337256 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.744871422 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.744896143 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.74485985 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.745169597 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.745804104 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.745181551 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.745337959 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.745191705 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.745693098 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.745157615 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.745315368 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.745956535 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.74587775 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.745343464 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.745809086 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.745659293 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.745038325 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.746808158 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.745883624 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.745188382 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.746299054 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.745034954 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.744034838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.745751151 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.746101774 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.746656421 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.746115848 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.745389713 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.746459128 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.745088194 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746927356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.745141471 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.746167146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.745077159 seconds)
  done (took 127.292505497 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.746302467 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.745511752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.744918889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747684881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744837294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747374809 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.747986063 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746485564 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746631324 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746567219 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747425397 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746786639 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746553558 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74706937 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746494408 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747983951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.747789207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747210116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.746401691 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747896308 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749150282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748085927 seconds)
  done (took 40.116122672 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748003551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747076409 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.748227128 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748986355 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748961889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747686357 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.747944609 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747360663 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749080669 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748581126 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748567154 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748712713 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748505518 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747009769 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750113343 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748331044 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747872157 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.748315926 seconds)
  done (took 33.153565911 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.747739602 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.748817908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.747208557 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747636505 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.749645293 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.749102024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748566796 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.748838171 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.748356743 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.749505587 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.74878039 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747927529 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.748753742 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748681044 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749478042 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748758163 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.748295737 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748671448 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749584711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74906881 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750869517 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748205979 seconds)
  done (took 40.156756418 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749263815 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.748098016 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.749664096 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.749391738 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.748699673 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.749514212 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.748889796 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.747650918 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.748454627 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.749815734 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7485387 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.7486248 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.750830223 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.750494923 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.74946416 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749738167 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749054599 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750403281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750575357 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748568353 seconds)
  done (took 36.670839086 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750317395 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750352048 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.750355106 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751076195 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750123118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.750761177 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752702102 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750893411 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750256354 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749675933 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751059446 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749800081 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749499423 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751368456 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750670549 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748859493 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750485039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751336006 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751853565 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748616611 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750860933 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750244507 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75081554 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750450497 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751057769 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75045945 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749309871 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.750930758 seconds)
  done (took 50.701165579 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750404336 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750775793 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.750650623 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.751250207 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.751647851 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.750426135 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.750173714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751708717 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750486503 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751073174 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.753105632 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.751367833 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.750931877 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.751294216 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751509269 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.750330457 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750741534 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752527818 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751261791 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75236336 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.752432444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753205507 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.752632588 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.751993367 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751729608 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.753056126 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751567131 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.752840694 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752719173 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752381193 seconds)
  done (took 54.235219515 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.772574203 seconds)
    (2/2) benchmarking "in"...
    done (took 1.772754173 seconds)
  done (took 5.232273599 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.752400184 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752798356 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.752020545 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752991308 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752634253 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753553753 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754284371 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753247092 seconds)
  done (took 15.712858773 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.75390463 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.755985267 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.75315105 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754116793 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753937659 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.755482373 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76000976 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.75389351 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.755164743 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.7565519 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.759924631 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.762133412 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.756462003 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756248838 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.754626639 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755315632 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.754547145 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.753186558 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.754337945 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.754553974 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754322811 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756985615 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755989795 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.754310424 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.756501297 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.764635602 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.758998037 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.754906865 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755606299 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.75822966 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.757002912 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.755145656 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.755481899 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.755545796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.755386876 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.755120377 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763866506 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756245196 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.761442675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75445267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756526271 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.757221309 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.757328922 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.756664224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757535989 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75559609 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.755588173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.757578108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.7573659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.759015584 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.763357879 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756411698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.757315506 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.760852559 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.758709038 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762136095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.756089106 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.759403888 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.766604955 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.766336569 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.767137112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.763698001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75829984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.755154949 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766474948 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.777950598 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763190789 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.758524573 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.757518073 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.756938854 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.763902998 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767401484 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.765438879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.757232947 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756589965 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.757264637 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75985771 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758004451 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765471524 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.760374558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.757033905 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757587192 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765425893 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778782993 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.758854201 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.756829555 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.756618601 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.757433456 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.75976719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768322919 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.758011699 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758483959 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.761221955 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.758557046 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.760978601 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.758151366 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.759575454 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759091464 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.759748882 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.759643674 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75857363 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761946019 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.768430275 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757511022 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758885188 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.764046883 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758763853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75938809 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.764234225 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.761610987 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758675377 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.761093656 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.765885336 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.759301105 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762319412 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.769184897 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.758411299 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.761571201 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.758403356 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.760016461 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767784509 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.785034888 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.759883057 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.760636775 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.763031826 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.768626466 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760004025 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.763054734 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.760809833 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.760485107 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.762499626 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.762812604 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.760671417 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.760883934 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758723944 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761301518 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.760334291 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.761578809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.759428991 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.761963893 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.762999893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.762073703 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.762439369 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.763050512 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760764506 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.762016403 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.768014933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.762335335 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.761800382 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.763464326 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.762214562 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761632083 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.763299565 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.760933803 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.763830145 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760293292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.762032183 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760140678 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761984674 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.763183907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762814647 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.762807708 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767134824 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761953432 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.764055083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.761523912 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.762825392 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.762264924 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.762333872 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.763127621 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.763112941 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.763229936 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.766845197 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.770996009 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.763696392 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.763933491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.767533413 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.764136253 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763228919 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7616803 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.764897905 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.769857452 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.760640283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.768895465 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.7613682 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.761485379 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.764400111 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.764010245 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.763323116 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762217853 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.764775711 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.770165735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773586841 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772501592 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.764697404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.76712606 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.764179724 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.766384081 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.767241586 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.763014372 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.763664219 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763031852 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763311764 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762634653 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.764885772 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.762349401 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.763172533 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.76316829 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.764593881 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.763437777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763594243 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.765417877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767789214 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.763418839 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.764812838 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763870712 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.764009913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763986687 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.76334422 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.764198269 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.763823661 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764171961 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.770430506 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.763563817 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765017306 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766039423 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.765661661 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.764611802 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.764527682 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767038291 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.763848209 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770475942 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.765147758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.765933923 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771811167 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.765154633 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.764746796 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.766884314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.763689575 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.762967424 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.768259386 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.771464102 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.764569976 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.764921893 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.764620671 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766852316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76422461 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.770604594 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.763280509 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.766105345 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.76530442 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.768259786 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.765757253 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.768134532 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.767883371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.76653553 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768630392 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767463458 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.766625838 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76744338 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.766758862 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.763924185 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.766109787 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769832534 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.77182017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.770287797 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.767077861 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.768200592 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.767649289 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.770013431 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.766505227 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.766643472 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.768350821 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.777942984 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.774215558 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773093128 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.769377632 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.767432381 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772242603 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.770874734 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.771728313 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767974257 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76833086 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.768412243 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.768820778 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.768280047 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768514207 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.768521228 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768943976 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.768410231 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.770684388 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.766598015 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.76898199 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.767803421 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.765648524 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.765704483 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.768943267 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.76624442 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.771201617 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770755936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.767420431 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.769136243 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775496407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769630806 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.769294281 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.76789587 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.768764832 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.768582296 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.771270651 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.767392233 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.771571501 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.774416064 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.776429066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.778386845 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.769164044 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778185261 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.766661261 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.771339659 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.775508515 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.767879564 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.768567346 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.770073855 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.768329753 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775365953 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.767581963 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.770078835 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.772354131 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768731624 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.76820332 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.769412091 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.769185142 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769609265 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.768771388 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779146541 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.770331105 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.774651757 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772403484 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.768623631 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.769935718 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.769817575 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.769757838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773415901 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.77053028 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.771419173 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.772303913 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.772075363 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.770752165 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.771623402 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.772160473 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.770101227 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.770332651 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775557411 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.769897832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.773279716 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.768246867 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.77748808 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769372512 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777573184 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.771423964 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.771479672 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.770486483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.770516481 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.771978738 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.770205448 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.772827176 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.769487265 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.772699386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.773670566 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.770500222 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.772270986 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.771898555 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.770240614 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771984612 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77953999 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792577992 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.773650548 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774090957 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.769832558 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.773199172 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.775911682 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.771325835 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.771069687 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.775375183 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781799405 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778711692 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773270012 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.772222144 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774409267 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771519388 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.772133844 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.7730331 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.774221975 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.774866804 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.775403613 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.77302671 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778954902 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.774110072 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.774555031 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774736691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.773148495 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.781725003 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.771537284 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.774653632 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773411007 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.771950418 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.774280908 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.77508353 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.771908263 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775241176 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772150126 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.775213884 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780562025 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.779868152 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.776485 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.773098021 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.772173709 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.775977449 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.774250069 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773267266 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.773948642 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772008039 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.776044717 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.772961947 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.774221096 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.773238182 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.772814631 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.774459447 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773758349 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775067172 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.782390256 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774986728 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.773763429 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.773806678 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774454138 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.774761548 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.774603872 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.78249657 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778289656 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.784865417 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.782406024 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.778199688 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.7753292 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778397267 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.783200255 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.774173426 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.777470429 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.775496716 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.775884549 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.776535956 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.780179169 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774854744 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.781984642 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.775818069 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.775528117 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784345338 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.777557545 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775247591 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.777099183 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.778535933 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.776822515 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.774563032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.776128149 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.777110111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783900003 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.778522221 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775378134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778330375 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.77531001 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.778060587 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7809126 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775694842 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.778526663 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.774746868 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.778043556 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775929678 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77469087 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.775734557 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.776678013 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.777535929 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.780654717 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.783344925 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.775399468 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77971752 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.777528381 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.77775641 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77666645 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777267836 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.775698416 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.776223862 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.776775878 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.776069835 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77819847 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.779618303 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.77752503 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.778855493 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.780514072 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.77695861 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780258111 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.787692604 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.783238707 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778279414 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.778225488 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.778542304 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.781796978 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777231124 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.777174419 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779031423 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.779775624 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.776116832 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77779237 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.778267965 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.781256621 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792725856 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.778314756 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778573412 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.779388446 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78263199 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.777963787 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778215128 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.778134389 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.780273397 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.782322828 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.784273242 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.777995573 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.78587322 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778952824 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.779170388 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.781736385 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.781764978 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.786380363 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.781170234 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77867229 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.779877662 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.783150044 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.79328835 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778812542 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788602204 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807087021 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.780626895 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.781194866 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.77872609 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778129876 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.778842466 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.781290198 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.780003131 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.779653359 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779421206 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.780364838 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.779755746 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786528208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.782648615 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.779001805 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.778718328 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.779234641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.780644787 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.779628057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.779698108 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.779243757 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.780103884 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.779545617 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.781378176 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783150101 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792476689 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.790600921 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.779380839 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.781470909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.780185613 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.78476365 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.784309114 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789717128 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.786864344 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.780677132 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.781560685 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.783185613 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780636483 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.78136268 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.78297858 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.781917778 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.782600888 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.779152993 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.791366693 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78773536 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.786280619 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.781153879 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781180237 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.781844974 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784076223 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781081823 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780516427 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.78433658 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.782257459 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784151568 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.78192963 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.779817472 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.784894658 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.788306683 seconds)
  done (took 1056.60205781 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782984077 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782303842 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780564711 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781224133 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781253567 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781757843 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781473303 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782214047 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782267984 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783578415 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.782860642 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781689927 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782327303 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.78361826 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783063775 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783447122 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783990445 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.783987492 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784182852 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782993815 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7821786 seconds)
  done (took 39.149454776 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.781855974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.782447638 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782507778 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.784647603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783622838 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.782858788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783952324 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782856273 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783523843 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782190284 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.784084115 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782618637 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.78190641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.782321003 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782920056 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782392058 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.783003177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783168964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.783597679 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786301078 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78381106 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.783898512 seconds)
  done (took 40.947748614 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.783956613 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.783337073 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.783808098 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.784687362 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.784530782 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.782723483 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.78503333 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.784324251 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.784692339 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.785523306 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.783808073 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.786701089 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.792275673 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.791820569 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.787174539 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.784334641 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.932598991 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.784882326 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.78499478 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.783919488 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.784201882 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.790514896 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.785396393 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.784448356 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.785894688 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.78494198 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.78533391 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.7858796 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.785485726 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.787073143 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.789192644 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.785602529 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.787764376 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.788816566 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.786942125 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.787938297 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79018893 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.786275481 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.784950466 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.785407576 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.794863891 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.807707623 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.786647309 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.79231502 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.785943184 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.785956723 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.790015071 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.793603069 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.785561217 seconds)
  done (took 89.430153774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.785359192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.786154045 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786440925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785714218 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.786012979 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.786187333 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.785367342 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784883314 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.785306303 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.788081697 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.786567436 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.786110814 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78595651 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.786754697 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.787336147 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.786873946 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786292585 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786306917 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.787327571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786230274 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.786800773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.78710642 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.787066509 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.786788391 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.787344625 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788595495 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788327219 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.788056435 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.788522453 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.787695219 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.788252419 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.788114741 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.787639898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.788007783 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.787061692 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.789064429 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.787444722 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788882152 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.786830097 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.786901326 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.789100874 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.788232684 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.790612385 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.788565085 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.789008829 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.78877751 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788303485 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.788638832 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.790001185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.78863157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.787505528 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.789407402 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.787644772 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.788969731 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.788005802 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.788602672 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788815127 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.788608042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.788786388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.788710948 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.788777278 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.789144324 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.789094126 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.7882482 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.789757265 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.789187011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.789332708 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.788290673 seconds)
  done (took 123.288696188 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789104316 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.788895836 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790730111 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789966632 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789242496 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.789941571 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79049007 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.790614077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.790559132 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78978957 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789683696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.78989194 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.790094721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.789677519 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.790808404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790072021 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.790077023 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789902464 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790340913 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790231327 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.790357077 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.791088368 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.791316349 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.791168951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.791647566 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.790565508 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.791169449 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.790839106 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791528634 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.791235751 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.791695884 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.791545428 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.791298941 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.791150924 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.790957121 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.791683673 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790438654 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790928485 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.791902165 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.791199266 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.790098923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790461324 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.791296341 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.791649188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790361611 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.791781977 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.791220953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.792133506 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.791340182 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.791432472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.791188369 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790373807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79162738 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791296621 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.792462156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.791621488 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791022241 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791699114 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791561414 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.792397433 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79156628 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.791326355 seconds)
  done (took 112.759541966 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792701464 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792016037 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.792108994 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.791871508 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791394716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791592975 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79231671 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.792111903 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791891118 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.792014995 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792616388 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79428453 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792982034 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792274284 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792844291 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793399881 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792275484 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793692541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793030996 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792981146 seconds)
  done (took 37.578221846 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.792360835 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793754463 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.791709816 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792580443 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.793546801 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.793910534 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.793398943 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79444652 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792427258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792946602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794220618 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79388352 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793439187 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794766155 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.793743149 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.792963961 seconds)
  done (took 30.421350851 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.793942168 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.792893658 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.793941585 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.79305733 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.79387168 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.792955213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.793943126 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.794306521 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.793309284 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.793139975 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.794030666 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.793561876 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.793968397 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.794338844 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.792723577 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.795233584 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.793762072 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.794604324 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.794051571 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.794533677 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.794383451 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.795720948 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.795256993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.794500339 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.795257053 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.794909781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.795011269 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.793917295 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.795292093 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.795657007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.795778849 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.795427512 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.796568072 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796090979 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.795353585 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.796627225 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.795753848 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.794736178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.795525315 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.797095584 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.796953964 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.795761949 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.796086326 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.79706903 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.796565279 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.795984497 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.796649467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.797813757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.795472586 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.796107323 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.795614137 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79618234 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.795920289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.796229607 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.795163011 seconds)
  done (took 100.458247848 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79655313 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796227211 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796836175 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.796575177 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79593097 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.796670661 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.797746926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795917261 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796844528 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796473911 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797746761 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.796753711 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797326561 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797321218 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797325908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79614743 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797215607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.797714222 seconds)
  done (took 34.073347683 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797380236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796463503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.797558004 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.797316678 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.79818127 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.797146974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797626469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.797659474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798780818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.799066147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80091333 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.799030219 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799577542 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.800530205 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799976852 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799373354 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.797387186 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797455426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.797360547 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796072053 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798375967 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797545528 seconds)
  done (took 41.292632587 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.798882261 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.799628016 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.812080392 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.819015328 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.817822684 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.831706753 seconds)
  done (took 12.610482029 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798363262 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797532403 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798264289 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798389878 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798519051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798820753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797974517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798502266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799034042 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800312811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798937533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798453184 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797119594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798318177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798157063 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798023285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798951052 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799872835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798529495 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798975055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798593952 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798735554 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797789231 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798475042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79975482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799516625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799466215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799316972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799413511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80184468 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800295037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7986958 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800631681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800785938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799972628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800173852 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799380138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800677967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799189647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800446572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799030834 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799766175 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800347202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800220966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800536489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800288155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801208561 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799297676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800044039 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801037882 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800991806 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801006231 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801053316 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800455402 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799984144 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799823378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801075329 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8001227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803187006 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801810307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799843362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801475749 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801243523 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801893683 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801095388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800904153 seconds)
  done (took 120.515388678 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800155479 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800963247 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801705848 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80183652 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80097963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802352867 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800903854 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802100234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801324045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802257371 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801911064 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801983601 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802276478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801323914 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802416431 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802662287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803341934 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801217071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803353871 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802675929 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802284601 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80167755 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803349113 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801965178 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802579461 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802379653 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803405943 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804152868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802775559 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804033412 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803571396 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802950387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802160787 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803208292 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80338866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80185396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803408536 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803757918 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802228607 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802136161 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802990423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803057939 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803199646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803616697 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803563124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802008975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803186865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805567859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804544982 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80198684 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803671275 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802989394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804116901 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803036879 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80289154 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803679171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80423218 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804907747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802891989 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804320955 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803612832 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803535277 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804344792 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804813706 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804209436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804033945 seconds)
  done (took 120.725812584 seconds)
done (took 2462.235373519 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881211307 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.856421662 seconds)
  done (took 15.475465488 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.96773708 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.921267134 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.805379494 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.805352919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.807076669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.836215481 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.833871602 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.806724911 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.806225483 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.806029771 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.806559772 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.992724113 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864719405 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.807080595 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.806868199 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.898329249 seconds)
  done (took 51.315993604 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.810758754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.810691928 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.821194977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.813822267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.809715243 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821797406 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.841391729 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.81505289 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.845091418 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.821964083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.879246943 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.819624246 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.811429311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.861155772 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.822663236 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.824431492 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.903796872 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.884895369 seconds)
  done (took 34.758479118 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.8860577 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.82031438 seconds)
  done (took 10.45274179 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.823369108 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.808387201 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.892815698 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.824312333 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.815446012 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.839412328 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.811156528 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863418942 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.835960429 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.833899489 seconds)
  done (took 70.092642644 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.815449442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.814859484 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.812206209 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.808825199 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80761223 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813282964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.810095181 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.813495281 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.469094835 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.844639532 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.818896875 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.818955678 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.811428077 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.81279247 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.809889658 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.835933573 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.927232805 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.809569853 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.812504742 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.81917654 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.813266147 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.867600956 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.825649692 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.812838964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.84172217 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.467967053 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.820069766 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.81703951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.919373579 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.809517721 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.811399928 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.022304463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.816724898 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.274199952 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.083308996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.815949015 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.825521455 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.819116832 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.810580217 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.92621576 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.814139476 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.817295119 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.723497071 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.059516464 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.910407686 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.856609031 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.116866516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.828126376 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.812422324 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.843356987 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.814050719 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.812120753 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.826840615 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.329482869 seconds)
  done (took 129.596089168 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.810632555 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.156850204 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976676796 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.809950314 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094456207 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015846962 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.812675792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85825745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812034547 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039172864 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.060535597 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91450109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812546393 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.811840577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.812372109 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.810568756 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.966308173 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.880048621 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.813632011 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.811266496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838356315 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049534279 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.930330629 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.812387028 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.836839753 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019903729 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931384972 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.913363847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.595840257 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.810925136 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872630415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.813760127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.813043308 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811128754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.966352794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.90423712 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891664554 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.815215336 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811969089 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.811440731 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.561241661 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011180049 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.905590844 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940394021 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061472494 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015148925 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.590755264 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.8144017 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.548537088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972814554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.038187268 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.037655211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.932093323 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.813778583 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.344723681 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811953595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812396967 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06179152 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032508641 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.908160365 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815046557 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.812274859 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813602749 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098318854 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814101532 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.907561556 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815836067 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.813305953 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.909910125 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909447865 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.039677021 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024320291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841521308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.150653578 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.324787809 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0573445 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879218173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061313791 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817641066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813893484 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890196623 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.646762818 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.065746802 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.093525628 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058249499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848725712 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.529555811 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.812966008 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038391016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032933344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.07249223 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062011296 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.053975317 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.126065249 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.814921584 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.813756387 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.17006522 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.937353088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.816049895 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.161293686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042969899 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.34416574 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840347567 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116514533 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945344532 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.816727762 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.449483152 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.814428246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043706235 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.853827552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.814823386 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815872025 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.032510662 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.806138919 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814399679 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.70944774 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.87492247 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.821049255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046667537 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818902146 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082229071 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819909119 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046131748 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.262738014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845484763 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.041057214 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061118823 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.818744454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052744825 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.057080468 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.932094076 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085766979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.718576134 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817939975 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101096917 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81808181 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.815448047 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.982712971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.818482628 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957437869 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818794966 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109501563 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837435926 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048235297 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822468835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.069236592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.848650758 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86589978 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.821557108 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935561188 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81887916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.63989321 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977936386 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820802424 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817659604 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.721594894 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.818516054 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964749906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041878993 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839527997 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888416399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.478100919 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818462743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895432261 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838985288 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.20169769 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.817755871 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.067047426 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.820966561 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.818209187 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.818843845 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102385363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05455366 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.818126429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81864763 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.722034372 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.817691227 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817155865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.997174856 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.330107577 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818314311 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016727557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823432575 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944105922 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.823161074 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.884727683 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153781419 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.81731059 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.817280428 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.819253455 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.819071643 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.819956903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079076101 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.842981078 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.322659001 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.953226941 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089122156 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.127609689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.058470874 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.860400417 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822506547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072047113 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.82367307 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.879638969 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.822691418 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838011935 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044834802 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822887263 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.026584378 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088086609 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.663794176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865957858 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.823923168 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819156201 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.818904473 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964254844 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901713073 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822227778 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.818643155 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932097143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939126475 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026172347 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.821444703 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.920492672 seconds)
  done (took 891.873562617 seconds)
done (took 1205.303679762 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.819009436 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820879819 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.821568143 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.823731094 seconds)
  done (took 29.039474695 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.822042187 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.821688307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.820841157 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.822062859 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.822333086 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.822713547 seconds)
  done (took 12.686342335 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.863565939 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82226822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.822418951 seconds)
  done (took 21.263827919 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.894193952 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.200142737 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.955995181 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.238234673 seconds)
  done (took 10.045239968 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.822890467 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.822133489 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.264974701 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.823087229 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.824027073 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.823086612 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.823310389 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.822652493 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.822762349 seconds)
  done (took 18.606522821 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.928293711 seconds)
done (took 97.323640915 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855677046 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.476202498 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.565044136 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.890363977 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.956277135 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.832388458 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.213109572 seconds)
    (8/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.101451637 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.955717901 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.831451243 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.841046275 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.276619022 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.828011776 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.045246605 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.487997526 seconds)
    (16/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.322009699 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.828494049 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.085391592 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.082899823 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.978997959 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.124822971 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.960626052 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.84470327 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.122372704 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.009627836 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.080938357 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.055771681 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.825689995 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.025014082 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.823322996 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.138808538 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.047994052 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.907020717 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.827077573 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.47300463 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.850125306 seconds)
    (37/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.048242671 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.728988802 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.841195538 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.992843179 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.824851657 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.595432918 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.181416714 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.085974926 seconds)
    (45/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.905845992 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.149099818 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.043376171 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.944974087 seconds)
    (49/309) benchmarking ("sort", BigInt, false)...
    done (took 6.829557918 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.710583639 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.827893973 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.458467691 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.85049369 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.824218183 seconds)
    (55/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.828460025 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.186927188 seconds)
    (57/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.831297598 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.075545222 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.152101786 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.160258457 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.963190343 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.974468835 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.844947275 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.838146547 seconds)
    (65/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.921708839 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.82355704 seconds)
    (67/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.058659301 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.829339471 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.244764982 seconds)
    (70/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.293811215 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.140927043 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.910613404 seconds)
    (73/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.105101017 seconds)
    (74/309) benchmarking ("sort", Float32, false)...
    done (took 5.57596284 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.972494484 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.050086167 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.93738058 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.950726514 seconds)
    (79/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.903936129 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.280229764 seconds)
    (81/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.832100325 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.14505681 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.030451477 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.093158677 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.828318323 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.116521705 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.882539472 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.157264148 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.020924387 seconds)
    (90/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.010266677 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.988170421 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.903675993 seconds)
    (93/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.901935962 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.829079423 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.011496121 seconds)
    (96/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.966993461 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.919688061 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.121525805 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.728848251 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.832558177 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.607200885 seconds)
    (102/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.925462034 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.852771011 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.841669532 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.197724999 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.832837081 seconds)
    (107/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.107015055 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.083055847 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.26151236 seconds)
    (110/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.836055748 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.107733772 seconds)
    (112/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.205969706 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.73786648 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.118303578 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.986923292 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.990322091 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.621028752 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.892923567 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.066569223 seconds)
    (120/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.949494156 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.024998428 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.043648223 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.445640974 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.862644452 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.830015784 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.948658299 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.954056724 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.220101948 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.22733459 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.217164013 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.147126551 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.936527085 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.757902647 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.147177243 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.091539647 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.837187359 seconds)
    (137/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.101153914 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.869024609 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.176217679 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.034921152 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.945584131 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.991089586 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159691575 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.942946179 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.837265162 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.226004468 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.822659916 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.898420164 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.082929708 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.355721122 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.509498608 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.149845035 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.056287568 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.841370987 seconds)
    (155/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.129829729 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.857481437 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.594318472 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.857378639 seconds)
    (159/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.070176093 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.922687169 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.835708253 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.863573453 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.83688059 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.983508225 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.147869639 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.032727157 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.22916005 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.519694808 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.586944881 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.855503719 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.079769989 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.838359886 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.544983009 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.838411673 seconds)
    (175/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.275601465 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.011376138 seconds)
    (177/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.092927327 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.836634219 seconds)
    (179/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.931500776 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246299543 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.937338923 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.761060818 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.835440977 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.393880307 seconds)
    (185/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916835164 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.961826341 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.945332365 seconds)
    (188/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.798743638 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.866195754 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.06058419 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.454494337 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.066991283 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.854526366 seconds)
    (194/309) benchmarking ("sort", Int8, false)...
    done (took 4.720577722 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.834478872 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.85450418 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.848447466 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.909529672 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.953143198 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.917477837 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.939787757 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.694642658 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.283758909 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.175737718 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.209020282 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.221347577 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.839002447 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.111277258 seconds)
    (209/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.19068051 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.906213287 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.045243892 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066157792 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.982415964 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.192753238 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.657279266 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.029947906 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.833305198 seconds)
    (218/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.1021206 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.862288055 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.217700362 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.97590102 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989855072 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.901902898 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.957260655 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.834608698 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.177892843 seconds)
    (227/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.953230414 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.938828425 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139973027 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.748641901 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.627955934 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.943764914 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.013637059 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.885897282 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.192182272 seconds)
    (236/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.714602437 seconds)
    (237/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.153790781 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.972296476 seconds)
    (239/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.967783962 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.836304219 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.967284221 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.859005263 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.832920437 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.936519067 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.887407373 seconds)
    (246/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.158087631 seconds)
    (247/309) benchmarking ("sort", Float64, false)...
    done (took 5.626894793 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.910204845 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.124407449 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.091212055 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.006110497 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.841543617 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.10272525 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.837503422 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.924562972 seconds)
    (256/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.389514576 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.806927528 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.944695117 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.139251779 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.844045804 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.246453575 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.96634123 seconds)
    (263/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.851173083 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.913623243 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.945506447 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.956961865 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.930226393 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.839692223 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.979502291 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.836752445 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.869530932 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.092776842 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.272874969 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.008417671 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.175971102 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.762126773 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.977625254 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.258079826 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.203944227 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865217453 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.97014043 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.837033445 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.031107794 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.840911208 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.015499921 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.511808281 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.615995114 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.155575673 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.071050031 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.972244436 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.151072923 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.840435676 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.042920355 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884350289 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.221856848 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.873940691 seconds)
    (297/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.913133255 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.837806153 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.04370459 seconds)
    (300/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.007051422 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.216615966 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.899132756 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.896233273 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.840778313 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.914995064 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.912815267 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.129593435 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.330831771 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.695841465 seconds)
  done (took 993.544357047 seconds)
done (took 995.359572368 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.866733129 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858013975 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.841051207 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.861529107 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.952485131 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.887133409 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.85460659 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.844320841 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.89147168 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.889457104 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.839361 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.885301871 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.840689015 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.841931439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.840310641 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856778455 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152621617 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.876560587 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.859793779 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.852663497 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.858277143 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.839064928 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.890089387 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885987842 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.847622003 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.846411981 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.844114932 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.860508098 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.953860729 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.844766409 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.846065075 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.853990212 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.153299696 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.876011785 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.84196294 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.861266264 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.854422849 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.853102525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.846174776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.873882201 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.240886976 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.886791239 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.84279722 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.841475147 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.843054704 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.849970414 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.841685348 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.850678819 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857808025 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858797693 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.233860289 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.905971166 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.845897315 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.842528916 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856520752 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.84439823 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.847132696 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858493639 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.861626779 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859148952 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.138862161 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.888853132 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.845817837 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.861260075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.851751199 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.268358347 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.88980687 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.850188605 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.240574855 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.896918482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.268112718 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.89965881 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.844967437 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.857507826 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.87638938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.155443955 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.878963265 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.843059345 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.853130836 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.842514132 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.855898127 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860754477 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.848667131 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.844385516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862002995 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.89042352 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.857258184 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.844044164 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.855543512 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.864447235 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.853818746 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.857172992 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.847278058 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.841899211 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.856150128 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.849025018 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.846979187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.846371374 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.849967524 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.858293456 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.23896075 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906585037 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.842675439 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.842180098 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.8457536 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.859877932 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.240852334 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.893580572 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.868132645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.894665842 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.846379049 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.14138384 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.883191412 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863244252 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.857315454 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847972022 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.844238435 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.142435024 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.271936211 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.907579621 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.845697193 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.843779348 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862912225 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.847655185 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.842847124 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.158777592 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.883234325 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862045309 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.968670472 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859166563 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.880258755 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.845043066 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.8496956 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.896519424 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863638219 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.879159265 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.848802427 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862410581 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.866170504 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.84339205 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.858242377 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858929737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.847825428 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.856676078 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.844815063 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.897320681 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862624742 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863189283 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.868144898 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.968518113 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.844399273 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.14335246 seconds)
done (took 290.280194865 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.928010434 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.845270765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.974199131 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.845515859 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.937768907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.922003652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.847293346 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.846398474 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.845928084 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.326247988 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.846542662 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851428713 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.844350187 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.845383457 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.918501802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846875902 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.845735034 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.276762597 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.847812227 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927208128 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.846463085 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.846820345 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.846802786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.333421982 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.845483854 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.845507469 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.926816549 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.846850381 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.297662256 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.846538988 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.845953753 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.283988123 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.925973492 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.875553792 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.853864794 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.853107004 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.938008991 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.860034125 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.915314928 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.91684637 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.97366761 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.881171077 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.846994403 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.847173953 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.850209276 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848940286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.847298615 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.880314461 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.846404333 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.855917544 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.275232694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.853590333 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.855860228 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.850427372 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.848043406 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.876056112 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.847960483 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.84891946 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.929105576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.850437085 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.918506793 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.335051083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.331353343 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.848627064 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.848779966 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.847857357 seconds)
  done (took 183.74303665 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.914383257 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.922669086 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.914799047 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.852957535 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.898260688 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.91533599 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.853291006 seconds)
  done (took 15.052673135 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.854482946 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.847551215 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.898357268 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897118852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.848848746 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.004648955 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847953489 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.860473695 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.852475296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.873722071 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.847699011 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847887458 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.854267988 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.849105276 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895689892 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.859667479 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.96142738 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.848057833 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846425403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.995668882 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.851273546 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.854502008 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.871989227 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.859036292 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.84784788 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.853132889 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.420476523 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.847108016 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.845371004 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846613403 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845895901 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.887747266 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.847625881 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.846288704 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847463829 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.959999124 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.844712598 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846853212 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.845936372 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.845203292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.844518205 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.844626479 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846510293 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845799774 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.845662408 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.867998121 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.845693825 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.846057188 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.844609697 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846042331 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.869746643 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.846270599 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.845162514 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.849485597 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.887098218 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.851154427 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.847420878 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.845627398 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.845759553 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845930291 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.994567011 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897267566 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.846178002 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897399306 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847276674 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.846688389 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.844769317 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.844770958 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932422546 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.846021316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894536463 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.845012491 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.003418534 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.867762678 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846499925 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.848770949 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.849354654 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.846682379 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.843706409 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.853214946 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845606321 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.846889488 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.853361118 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.853475128 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845534055 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.958779748 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.987036488 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.846628311 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.845833431 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.852668284 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.845654759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.890186455 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.84668425 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.846916557 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901707409 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.961374367 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.872388406 seconds)
  done (took 203.497807935 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.853151681 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.851804302 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.847423713 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.860539149 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.846315871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.846133753 seconds)
  done (took 12.88287107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.84721658 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.849828108 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.845127011 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.845128279 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.84637151 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.846217555 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.8460358 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.848430621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.84935726 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.846837001 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.844912189 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.846761164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.845637679 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.845086941 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.845474824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.845933969 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.845609464 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.844863891 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.845471189 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845666722 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.097214537 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.846068174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845822385 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.84976833 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.850184708 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.846588504 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859394632 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.846487255 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.845853652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.853383622 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.852594462 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.846993151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.849216997 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.853198353 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.850132835 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850072658 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850086792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.846325066 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.845900448 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.845587057 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.845509444 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.846912475 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.84557319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.846184463 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.847629581 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.852203667 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.850541175 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860145748 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.845128453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.845248402 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.845872057 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.847360673 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.847931364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.845293643 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.850553687 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85362869 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.850740877 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.846487289 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.845259603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.849384388 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.849857168 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.84621167 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.848366283 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.850458557 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.853722966 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.845783377 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.848282537 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.850454389 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847457875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.845916598 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.846529802 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.846487115 seconds)
  done (took 136.084146887 seconds)
done (took 553.05991094 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.225583336 seconds)
  done (took 9.004677642 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023746308 seconds)
  done (took 8.845625017 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.480910211 seconds)
  done (took 10.271696506 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.874746505 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.893994009 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.881402367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.855384296 seconds)
  done (took 29.316158813 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.149296661 seconds)
  done (took 8.938088197 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.879601728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.855687928 seconds)
  done (took 15.578378226 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.02328144 seconds)
  done (took 8.813127248 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.306555265 seconds)
  done (took 9.107162656 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876372074 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.882650959 seconds)
  done (took 15.570259142 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.860117405 seconds)
  done (took 8.649317761 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.051592604 seconds)
  done (took 9.930476168 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.877072044 seconds)
  done (took 8.73136416 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.937143165 seconds)
  done (took 8.728195024 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.966117336 seconds)
  done (took 8.755809362 seconds)
done (took 162.019249489 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.857938934 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.857894529 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.86018404 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.858272684 seconds)
  done (took 29.223504004 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.891649958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890396295 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.894001876 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.903613168 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.893394291 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890901885 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.884673039 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.885422651 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.902811323 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.894577878 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.893031239 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.893856733 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.892336337 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.885433486 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.895343901 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.894469621 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.903975655 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.893797898 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.885929537 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.895819275 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.860840497 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.905028137 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.895675435 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.861012363 seconds)
  done (took 47.179179203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.048267677 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.930981967 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.013696689 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.913441008 seconds)
  done (took 9.697187047 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.910823214 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.911865965 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.924049408 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.962865737 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.986862711 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.922738652 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.885774666 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.881690765 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.867571513 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.913558591 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.988137619 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.908843975 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.996255413 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.8606377 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.046936172 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.860391049 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.860794448 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.912153061 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.964388738 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.976474247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.860422137 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.912627969 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.915706912 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.909141619 seconds)
  done (took 47.932229856 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.861282558 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.87006453 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.867760827 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.86224524 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.864452111 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.863250441 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.868828828 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864398395 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.883966895 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.864585177 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.862217847 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.863220577 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.869026533 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.863178978 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863637597 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.875752607 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.876047602 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.863975078 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866737192 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.869265894 seconds)
  done (took 39.136051367 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.861342617 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.707169691 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205650416 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.113069052 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.862014378 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.861658152 seconds)
  done (took 31.404316401 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.875053331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.869197249 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.863088358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920382804 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.005589295 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.870213492 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.862527005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.874252678 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909515792 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929038321 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.884254607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.890907411 seconds)
  done (took 24.549224132 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.862981882 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.862061364 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.865577986 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.876219645 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.87553127 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.871808502 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.87002628 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.8610234 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.873938288 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.88118092 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.870935314 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875309034 seconds)
  done (took 44.244220523 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941751004 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738698881 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302341858 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319903491 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388030036 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064873042 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.861015961 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946555729 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.863856266 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133916204 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.193326539 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05519404 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105099931 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.561229807 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.959885742 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.324874852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145406492 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065870697 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879683004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525075761 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960632501 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338946075 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.589420352 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96497091 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066046448 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.045238486 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.121264049 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.812957401 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919854216 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866450269 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867292648 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863666243 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134162351 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989486135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937768418 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868331617 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283818953 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.569358714 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.870800167 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.487810177 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.329009631 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971689581 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867389241 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864535193 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790115819 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351923178 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063702141 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.867452832 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.565295366 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86454213 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870021137 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938172089 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.865512406 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.672962121 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552023337 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133731934 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.86465359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866609752 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41432889 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854839299 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453824207 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.905614684 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.949343721 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486290206 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307460164 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.015039009 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.866056873 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865558316 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79201621 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.53145861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969303332 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001160692 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.882434926 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506371671 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147514866 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.267792106 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906734802 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129094456 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.603367237 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.90885432 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083459656 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814983235 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792738927 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.693652066 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791791111 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063485002 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887813239 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.465052144 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889030617 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950218252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872159518 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882092039 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868141481 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080403595 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.760288689 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8668955 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.140085772 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107014592 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883160422 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952872612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793076661 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.868161689 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112410497 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.06990243 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.058752242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.44553903 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947600234 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841608406 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.990332534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.585323302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985642623 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.133271667 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925431151 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866893578 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975546754 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.819067589 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101272275 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864262258 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.078335178 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.196261138 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094461951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.184602743 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10500496 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931496044 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872600364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869217519 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546302844 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.570916583 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.085367088 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.881440235 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312405238 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9853248 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869612477 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805483823 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.496031177 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.202132676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.944351256 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083325111 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.860255616 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255913863 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796932198 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006174364 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.865592993 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.082949647 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.509685886 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.941423909 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11738107 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06389185 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.185993588 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989508403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884755897 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946200633 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88674226 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.262958577 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226454546 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.871359839 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.870814947 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.528692274 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914042495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876485605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.874404272 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.410177226 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134429306 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89038866 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872170051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.745560634 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.883224002 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932009444 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873745277 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874571161 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391901687 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382990943 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.877809038 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.523985128 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086768979 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874740423 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.521452796 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035069263 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.883179676 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132379074 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932499782 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.79785053 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.571833557 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.573013605 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871847205 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79822553 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871931938 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874598331 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876617535 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.059102002 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148336087 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918279984 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.522616426 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.968255942 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877990457 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.874808907 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872346655 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.364268192 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865329452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432661123 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990021709 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000986945 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.883424369 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798541306 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.873643057 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87448516 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.872756581 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.818868951 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920045286 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.541480464 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063664177 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121750713 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.292647552 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881449791 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.52656788 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.979303465 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889844817 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.139158628 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463825341 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.975910926 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940732626 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.878061475 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.482059123 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428039964 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424838602 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165618227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179747463 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216789161 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.328451554 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.200334898 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958737001 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0995991 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394317376 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929999707 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962787379 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811132831 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888446518 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.5137829 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217613467 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884310401 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090792532 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159061913 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.205401985 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995087606 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077084047 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903879746 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.5976915 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905941101 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.170440523 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89077518 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.255409724 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065729587 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956392088 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.146706886 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.941344402 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.874221977 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191143765 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904145987 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.57603074 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229303649 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351167915 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.329073838 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086614152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87451218 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313838225 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223023615 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.127687474 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.998693522 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802935107 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880008792 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882765815 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.888883767 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.849461342 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.712086481 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.120589224 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880952793 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103000591 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.082686381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243487262 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.776478113 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.879615989 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876547536 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104291541 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.673349706 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044520956 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.249676817 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.459851653 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884148718 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804623253 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803712496 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.578556351 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885821346 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842214151 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073317447 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.971062804 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563746489 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323274711 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191000307 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120566356 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.889439605 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138320747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146300976 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.374951643 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898554316 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.975395767 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.159778467 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.568280663 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.091716384 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104536538 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422594039 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096091081 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313581689 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.836757792 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878289478 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0838109 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.093044396 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.219285007 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047355998 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.589335791 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.884646515 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231757548 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934848543 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.223624951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.052631712 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.96378238 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885224606 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954021243 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882395844 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.884508144 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885255198 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886175414 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.224554829 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.983723224 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.891299427 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955158515 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877985262 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.443596177 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.888391352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14002402 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21889107 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202716725 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93682652 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879989091 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880377712 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805555614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008983448 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.31802489 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151108107 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.997115615 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.012283831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900983562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.154200654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.194841341 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192135984 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152770166 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.959971131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.581530696 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918147534 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.097522715 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885269292 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.082530807 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081127916 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163898656 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428623809 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.087898713 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0748771 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152022872 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.242018244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880177999 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465016556 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.889544574 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255875551 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.904053372 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217038624 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123931481 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884457124 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009974665 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884912655 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.086347146 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.331967972 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487941958 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217292648 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730113504 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885811733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144582547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195452306 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181254597 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958107592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886287635 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.573664108 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014287405 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.747363961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.114383379 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882371775 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086740319 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.591591297 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885354542 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146716876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181939191 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.883420139 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.789753096 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914391443 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.885651037 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09649831 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084365717 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116791701 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886331886 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889626969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.689885571 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15113702 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942559382 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812230559 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.886915737 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93796532 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110171179 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90338833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.397773543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.584268655 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146980806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.778007553 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900507207 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363044279 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266719791 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202514338 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.408190412 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091491288 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426626661 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.885735956 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266479071 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887724585 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349352943 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267428998 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.885643718 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435376973 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999430807 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.144866745 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205819908 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.90387572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607944872 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.905184895 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099384135 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249366806 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815559681 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887970953 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.931012986 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885334548 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.86636262 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894247886 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.83676425 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390548018 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.730940789 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441327394 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.888668201 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.898490026 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.208885949 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.481000944 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997194566 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902494639 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894743739 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.586400855 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.172645555 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128947395 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455527797 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.980056333 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.88799747 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886915529 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805524934 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066431198 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.074175431 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147943238 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.306074055 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.998029653 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887672066 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.093203922 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088584224 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.224390743 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002952574 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.092208729 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003183624 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.82601416 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.590643192 seconds)
  done (took 1663.689533972 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.886468005 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.904783604 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.005059012 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.911429377 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929481837 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95987574 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.020158567 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.006803347 seconds)
  done (took 57.442616803 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.886237017 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.960382374 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.891743167 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.888755159 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.936214549 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.887326015 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.042316232 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.913796231 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.891623231 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.892754003 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.88876929 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.887216747 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.161376131 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.910069225 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.890187908 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.936978704 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.890998842 seconds)
  done (took 74.649782105 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.891644717 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.109171275 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.946647593 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.889065357 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.881342524 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.89559372 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.952575216 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.895398937 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.890620224 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.141137304 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.186953358 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.907090008 seconds)
  done (took 90.408037658 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.902437747 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.891463634 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.88963761 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.890419424 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.890503087 seconds)
  done (took 11.292670236 seconds)
done (took 2172.645502187 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.114957635 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.096879517 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149382665 seconds)
  done (took 6.066585041 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.033112459 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085893688 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.196400006 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.204303871 seconds)
  done (took 10.346827405 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.195582154 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.272247458 seconds)
  done (took 6.290434331 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.211573279 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.915729743 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.279714039 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.896560869 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.894804367 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.894468621 seconds)
  done (took 22.515726466 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.894782981 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.895324808 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.894487938 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.895030147 seconds)
  done (took 9.4023734 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.890751285 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.609760551 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.895336719 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.905510548 seconds)
  done (took 21.125468475 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.042055413 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.010965549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.039548711 seconds)
  done (took 7.915251407 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.114065196 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.743859694 seconds)
  done (took 6.682907069 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.033174877 seconds)
  done (took 3.856609824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.923912782 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.164378032 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.408159661 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.459054214 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.560352083 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.800874961 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.185126085 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.120719493 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347674037 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.350639148 seconds)
  done (took 25.145330194 seconds)
done (took 134.6906948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.235437497 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932440066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.094405606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.248000043 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.129039182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.093850091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.114886178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.237281025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.925687071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.916102555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.252807736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.129354212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.058424118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.907438422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.066051314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912801927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.118958129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.254147491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.935431665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.177666903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.124569317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.89742334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.090430662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.913270523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.124801568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.046758408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.440819946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.916405789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.076380607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.455095499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051783668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.323012106 seconds)
  done (took 169.027297778 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896455421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.898453782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896745059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89728206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.434379399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.899060888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895963697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.896379929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.313046063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.304896984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.897324276 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.41924281 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898516636 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897330484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.895508694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897068383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.452217365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899127913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898467629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.897661841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898481807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.250947746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.898358101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.260856381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.446445652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.898274442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.897346092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.897590935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.896041225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.896886055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899162391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.898598042 seconds)
  done (took 210.252821337 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.898411708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899592306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.898472628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.898668509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.897667026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.898747344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89952175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.898088987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.685584237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.674854102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.899145256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.900412045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.90333089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.898438718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89913145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.898767915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.898539952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.900519479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898796603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899707145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.901124375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.6867462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.899508924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.712161352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.899021032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.901596892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.900235373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.898249561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.899938664 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900874485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899332723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.898765261 seconds)
  done (took 221.773658617 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.141049395 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.899672044 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900549136 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.819940417 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.901351089 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.901191332 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.874505354 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.146516526 seconds)
  done (took 19.415201469 seconds)
done (took 622.302306962 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.291599811 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.136661849 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.083062472 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925487576 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.191894022 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.977447372 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.920116175 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.98615727 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.755432447 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.997199575 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575861067 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.94772737 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.667207773 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.953278591 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.045989808 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.980826552 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.509791144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.616349132 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102316249 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.005905151 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.110373466 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.819044358 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.004870548 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.762700527 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69929177 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.875456051 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.946898628 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.515773659 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.933742189 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.082517847 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.616786253 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.183358174 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.936952651 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.919642881 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.976738663 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.952728838 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.127664918 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.932269291 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.048003167 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.617320357 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.000831185 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.65536123 seconds)
  done (took 104.219400909 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.911762611 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.907012694 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.90687175 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.907113952 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.915256248 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.907021766 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.905815591 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.905998935 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.907306166 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.906776166 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.907163342 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916008618 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.907149999 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.915550521 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.90728585 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.907424818 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.908229071 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.917160413 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.908027231 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.908920024 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.907288623 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.907582024 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.903611681 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.908845917 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.907087761 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.907402654 seconds)
  done (took 51.472723641 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.904351936 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.057603116 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.150567753 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925839852 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.905387262 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.907650743 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.922642611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.908755625 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.905971414 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.90587061 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.992313316 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.910187501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923491154 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.15109756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.922016755 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.903935073 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.90360698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.906139143 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.064602073 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.921428686 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.92473705 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.909905942 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.923883672 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918032943 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90644342 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905178678 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.907307252 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.381787132 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.914180571 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.993807156 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.949277398 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.929012104 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.354745242 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.161436885 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.961544806 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.915410815 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.90504845 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.000490927 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912921524 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906455155 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.923742436 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.91215255 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.151292099 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.451591674 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.92180885 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.906170912 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.394722373 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.009334154 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.948420589 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917784698 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.155304206 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.924734361 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.90650952 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.907740029 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.943641642 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.916224895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.906723668 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.274515772 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.91915362 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.924371162 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.910824857 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.907638651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070818627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.915962285 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.059790409 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.916947291 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913583587 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.907342289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152938484 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924983207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.457418748 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.921371088 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906144004 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.99697076 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.065608969 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.420347658 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.921317756 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07356598 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.373043355 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.931866151 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.915984874 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.373000953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.934940789 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.91588853 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.908585569 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.908115721 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.907533622 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.965504033 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.924324323 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.366843301 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.462915891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.291800204 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935205206 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.920063371 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.908945788 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.274428304 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.917593516 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.90707313 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.145379152 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.469502743 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.923003093 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.917181207 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.438385161 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.924952403 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.926589694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.916462419 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.158529324 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.924575471 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.019274534 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.908773623 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915346417 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.91162777 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.92777011 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.916360558 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.908371507 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.430890702 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.017287173 seconds)
  done (took 237.115719345 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.910435876 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.913097327 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.907250599 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.912517526 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.907220869 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.907880192 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.907058048 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.908792391 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.910328849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.908602389 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.906983782 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.909295202 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.909828488 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.912686024 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.477234348 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.912020724 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.515629842 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.910044171 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908582266 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.914249981 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.590028643 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.91697649 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.910718537 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.909049458 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.909551244 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.913383559 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.916504228 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.914029112 seconds)
  done (took 169.191288711 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912363054 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095787865 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.934747987 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.941508555 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.919872394 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.911738618 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.053189516 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934595551 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.917068072 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.912177581 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.911386574 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.971471974 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.924775229 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.011827653 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.944415924 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.021743488 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.019336158 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.919451766 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.912327525 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.913516918 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94114459 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.921584004 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.972885681 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.039037724 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.933417267 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.025709474 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.933996709 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.912424248 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.918360116 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026095701 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.933800762 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.975012184 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.943614162 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.932949768 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032421052 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.03229493 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019056632 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.019490183 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.922219444 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.912015602 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.913162566 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.913909405 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.0266185 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.935072234 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.918905946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029514099 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935054873 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.914894349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.91432886 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.916292865 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.927801148 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931153506 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.978910593 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047347253 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.953386532 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.938635785 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.012084531 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.03286622 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.914420837 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.014171262 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.920941966 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027198057 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.935824929 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.915184943 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.917304149 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.916267019 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.942650871 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.021841915 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020788569 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.92354697 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.011552242 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.948942342 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.922237507 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.913908132 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.913847282 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.02705946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.03525038 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.949408625 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.952886424 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.946504911 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.923877163 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.915647368 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.915207665 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.932266513 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.920879864 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.029313147 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.035773493 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.921271741 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.91431955 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.91509614 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915230511 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.939300098 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.03656116 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.954522538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022205833 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.981785786 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.992630381 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.932369762 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.928862765 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.921082016 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978854777 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.934151637 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.927870757 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.198581262 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976267838 seconds)
  done (took 207.671525305 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.305558852 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.963876468 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.969768203 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.246435747 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.261354344 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.861170618 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.962058643 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.963675985 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.998886764 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.186287556 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.043602051 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.981415911 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.950502488 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.937876238 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.961703996 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.997069435 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.970684937 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.299577402 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.188473006 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.121939348 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.953872958 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.270943773 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.277211525 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.556906028 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.014561559 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.364569641 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.539297452 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.129816076 seconds)
  done (took 63.13209383 seconds)
done (took 834.633616182 seconds)
SAVING RESULT...
DONE!
