cset: moving following pidspec: 17822
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.978873795 seconds)
loading group "string"... done (took 0.705074046 seconds)
loading group "linalg"... done (took 9.721406969 seconds)
loading group "parallel"... done (took 0.183934472 seconds)
loading group "find"... done (took 1.472983945 seconds)
loading group "tuple"... done (took 2.309248854 seconds)
loading group "dates"... done (took 1.530090618 seconds)
loading group "micro"... done (took 0.241648772 seconds)
loading group "io"... done (took 0.590369057 seconds)
loading group "scalar"... done (took 47.195871652 seconds)
loading group "sparse"... done (took 14.49423067 seconds)
loading group "broadcast"... done (took 1.269187929 seconds)
loading group "union"... done (took 13.015149621 seconds)
loading group "simd"... done (took 2.735217242 seconds)
loading group "random"... done (took 11.014552467 seconds)
loading group "problem"... done (took 1841.416185125 seconds)
loading group "array"... done (took 27.807571465 seconds)
loading group "misc"... done (took 1.208603996 seconds)
loading group "sort"... done (took 4.009888493 seconds)
loading group "collection"... done (took 20.300195865 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.770241627 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144424161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216836853 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.37685225 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242153837 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163905072 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.172897547 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.584589704 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.068796934 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.287378333 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154756822 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.600831296 seconds)
done (took 6.502860116 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.305920904 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.390776551 seconds)
    (2/2) benchmarking "String"...
    done (took 0.178915783 seconds)
  done (took 1.243745968 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074683752 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188253788 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112515337 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113313023 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.099100136 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113782554 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.115382781 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11408386 seconds)
  done (took 1.527018221 seconds)
done (took 3.826210223 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.560281077 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.932569164 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.566238488 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.169917353 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203611195 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.18092178 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.324412596 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165303868 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109466671 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.10989619 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.223643343 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.387555147 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.501643115 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.068480712 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090680068 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126677497 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096901747 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.743287585 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081161634 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141463599 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.602810918 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114456936 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114784207 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124966632 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207399126 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134033101 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170656409 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094153043 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.745225078 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102559253 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233535353 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083390653 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.180602442 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257886312 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.080420178 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109156071 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.72897447 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182606224 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.118004452 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100870534 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.726196871 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081020835 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246493314 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107868723 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113284056 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.200156162 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112566508 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.103959561 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103621394 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085088407 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.187594027 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.502241918 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106485607 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172031542 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108461484 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.768962955 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096909668 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158553842 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140604004 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109389105 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081853141 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112699855 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173031112 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116324858 seconds)
  done (took 20.756939416 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161251328 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168616208 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094441823 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143721556 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143611151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095780395 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098544643 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078166679 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128855254 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.2380986 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141739639 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.187041932 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077151284 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.103651581 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146038288 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25241465 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111276218 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125327407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100081592 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0900511 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143733255 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112241853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110351744 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094860956 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.185372952 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205044087 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107817057 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122820255 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098502687 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117422294 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140861893 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149239782 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091672995 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081972606 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.205048527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105128815 seconds)
  done (took 5.44624587 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.230836914 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119038719 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241329532 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.183118223 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150435391 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184228094 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144539944 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306942166 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.24748872 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.120477278 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186919923 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129086764 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112344547 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078547569 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096501795 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094706035 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.727970533 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185459335 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157695188 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15614653 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107979554 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098678211 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.736987549 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087811738 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098559068 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083939689 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093882487 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100341759 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.208620028 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103728863 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.381318095 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119334301 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109112768 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131165858 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197193753 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136538122 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14407122 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086438376 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098545481 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223101518 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111535895 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09427794 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111812404 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135669114 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13399523 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101170594 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112819867 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.251643824 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083075701 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122929824 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.156733421 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.216880863 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.137753763 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082627162 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.375304157 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116821987 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10570142 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080045775 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.33703737 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143839523 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082294325 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096732003 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085019888 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095859179 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.800419825 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096082098 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.31429227 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097074959 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165567781 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100900446 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105821869 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102641949 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085236022 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118525462 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096680922 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078603475 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098329334 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077512993 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102300206 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158215005 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123222023 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102136054 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078947717 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164135827 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.121772142 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08128548 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117285784 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125197886 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100561871 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079468937 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129330436 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097579676 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084375404 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.193440548 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088137448 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121548976 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101915734 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142950471 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097055754 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.224516066 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083321525 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128024491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101373313 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129519282 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125097538 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07935725 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101735986 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093883506 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081532877 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163860044 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079771395 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096161383 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100803954 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09476168 seconds)
  done (took 25.85231605 seconds)
done (took 52.72420918 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.545557834 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.126615267 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.125323176 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.125496711 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120215395 seconds)
  done (took 1.792463689 seconds)
done (took 2.514378592 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.391518028 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191162677 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123114293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187968617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10834413 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212775747 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180454338 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120306337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208742045 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101371006 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186093642 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102197247 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107939897 seconds)
  done (took 2.973315745 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099319487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126107092 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085956588 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117030006 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07827981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115738323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113307927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121300865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115028428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106720168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080492315 seconds)
  done (took 1.877159047 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096272365 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120254758 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085309868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113382829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079124484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112650969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110857081 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107511561 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113886962 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091748509 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097804482 seconds)
  done (took 1.849399769 seconds)
done (took 7.412878393 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244275913 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.783170881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154951114 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210975959 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.415358872 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257536381 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.650362351 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172492851 seconds)
  done (took 13.828045227 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.183345154 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106040713 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08892692 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.109087881 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088977494 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.106617477 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088356043 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105105987 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104244128 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088888886 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102891887 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087335832 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105990691 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088667022 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105211085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104144992 seconds)
  done (took 2.455672568 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146180299 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.144898054 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095530079 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.119915548 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110921169 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094120293 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.113131162 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110803876 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092598981 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.109180404 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116156189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099669123 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.114710012 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107561278 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095790723 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117312977 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.108829891 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09681446 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113643535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112937952 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100854464 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.110836061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114415416 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099977514 seconds)
  done (took 3.469489714 seconds)
done (took 20.47537017 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.184714541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102710261 seconds)
  done (took 1.016566092 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.153536006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156527283 seconds)
  done (took 1.042695169 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115811455 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101488562 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144820571 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123461842 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.103436102 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.087336794 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.142530939 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105074655 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086396223 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.10552903 seconds)
  done (took 1.851975405 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089680504 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10661893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.113608154 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.156038684 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.101398953 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.110085743 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10937989 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092649591 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111005589 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.10447516 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098810518 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.130577577 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.112414419 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.259588395 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091936246 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114143725 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.120062371 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.112983824 seconds)
  done (took 2.871551268 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083516397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10236562 seconds)
  done (took 0.921582959 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091879874 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101685546 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09067835 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110182095 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.105235697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088363599 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104732888 seconds)
  done (took 1.428616734 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.571548914 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.289434026 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.394929774 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.127307672 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148020015 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.412230557 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146987365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.119534485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.11975533 seconds)
  done (took 3.109138825 seconds)
done (took 12.979054081 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092235465 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.242846413 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609828169 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.125409596 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084169658 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163816002 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331205254 seconds)
done (took 2.389995559 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368214651 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164878338 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.096971126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.102799409 seconds)
  done (took 1.470165714 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079300105 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10964498 seconds)
  done (took 0.931892836 seconds)
done (took 3.154017821 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082497197 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096524297 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.121129543 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.102784962 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.101281206 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.0844185 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.102413236 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084554604 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100291502 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085366081 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101227251 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.084537231 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.100837282 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083584822 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101674048 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085219722 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101590777 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08442047 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102017281 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084165705 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101694757 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100175005 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085169015 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.100952074 seconds)
  done (took 3.059330454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110075428 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.104375462 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106645675 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089517572 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108905609 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106759515 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090017738 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103672917 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108372897 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086925195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110231091 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111198333 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087395913 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.109778454 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104262348 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.093739037 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.109225294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105119351 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08830772 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.11024067 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10791778 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090220156 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.111589871 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107976344 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.093227101 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1114906 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087975173 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106219777 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110471589 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093192594 seconds)
  done (took 3.807989061 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092077071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094620408 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085325223 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112314704 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082575512 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104235506 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082133352 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100499365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.103089371 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08515051 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.1047553 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086576606 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098768717 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.088888692 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.104701651 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089549457 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120268617 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099986604 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082841694 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.104361507 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.088446113 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.099757343 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08492985 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.103265074 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084915717 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.100369228 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086166075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102672161 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.086419129 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.102354347 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104254883 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.090045548 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.10228151 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097943448 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107779313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084561301 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108341131 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099632592 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.087990287 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.099272676 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083221556 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102897746 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083006516 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11233225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08592159 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104599882 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082285449 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.104490391 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103386024 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091349658 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098572133 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.082712005 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.106894343 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0891008 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107893927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081456088 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.103494796 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.082364947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105242139 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102432554 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08293621 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09901404 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090857435 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.104390066 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109030179 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113853419 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099541492 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089280137 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.104919811 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.091197066 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10755556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121126723 seconds)
  done (took 7.722826235 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098258555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112847911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085048509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103724275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103009218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08690791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113346654 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085926607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106380143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1122237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086836932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104755298 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087961685 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105239939 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085949528 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105668511 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114424042 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086712483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.10346926 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086517054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104815012 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112201964 seconds)
  done (took 2.946221957 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.268565895 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090775585 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15441963 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121031789 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125441351 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11995746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090727805 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111217253 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108664533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098266911 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115724614 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110931563 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.129289688 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098384607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115386129 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117901114 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091336406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118694796 seconds)
  done (took 2.942094916 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103579428 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10564842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128350245 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087394751 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.105720994 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087805307 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116543572 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12341974 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104931513 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090048681 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.119223054 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106151951 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091061189 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107898346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089469436 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108318907 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.106356991 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090120892 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119639006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115940485 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098788059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118630548 seconds)
  done (took 3.082883966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104190779 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106722087 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.14481665 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093777222 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.107307085 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105137017 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.096300529 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.108720325 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097672282 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107107787 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108250521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089279456 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.116839809 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106437501 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098380136 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108697216 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090106327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109445772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107727238 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089370346 seconds)
  done (took 2.854862571 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182143159 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104592066 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124152112 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137283343 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123517592 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106136727 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136595079 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124811336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105288919 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14106333 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.12335487 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123379106 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136755474 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115759784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124015516 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139934528 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136723323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136512034 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105860038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122779292 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138471209 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104400474 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136438229 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122788067 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123789887 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105258158 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123111734 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133507263 seconds)
  done (took 4.301273958 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084112251 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101274379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085587789 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10395042 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087756613 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.10421354 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087126443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105087853 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086938517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10410142 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.086158554 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.104441157 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086196962 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.104637976 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085980551 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103785818 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085942977 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104895672 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104577586 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088314906 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.104755716 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08754141 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.104336279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086561813 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104367634 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086498585 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105819362 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08759579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10481585 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087415542 seconds)
  done (took 3.626757507 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098497576 seconds)
    (2/2) benchmarking "in"...
    done (took 0.12928937 seconds)
  done (took 0.993023347 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094399192 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123690046 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083517988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102333305 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114649221 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085400071 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116018746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113706218 seconds)
  done (took 1.598748703 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.155002627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.153787433 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093047046 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118593581 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.15538146 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148580775 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172715637 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.109542693 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088330385 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101269375 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152025749 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080556847 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109331851 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104816748 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090914729 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116377093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103460429 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.096506952 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.111694237 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086952949 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109060642 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117262464 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092054545 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.114917812 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103443363 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095462814 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116116469 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.116085293 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087950539 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113258456 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107507047 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086560929 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109573446 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091479505 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104587642 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153165008 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120346203 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087050673 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109869153 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091854281 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11274487 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.104632092 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093061724 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107852688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113487795 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091227911 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109301589 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086358701 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101008324 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085178421 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105418577 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104201455 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085335864 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110191054 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108475016 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104117157 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108374404 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085479463 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104746489 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102725023 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089184679 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104465574 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110196009 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099554305 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111556472 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090376227 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108213142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.1036913 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088885035 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105692334 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092463405 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127203629 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112989623 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091111524 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110652751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104253292 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08729447 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111070441 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090475634 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112118775 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.108673306 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094200909 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110995993 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103359581 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08486457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111648572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087780814 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106454525 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098583202 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106282859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.106806323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085976988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100446412 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112437074 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085548361 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.108418386 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082322933 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109520454 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.102218738 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.092437523 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110609228 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088923511 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114477427 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110067369 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091636764 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11106824 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148188712 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105232955 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084671964 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.106898237 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092547774 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106145084 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093054342 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.1024356 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105195486 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086539294 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110113559 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111652642 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087533575 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.109148758 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093439746 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113045234 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105603762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084694646 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105750035 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090550463 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116189437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11257524 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08727665 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10535905 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085753748 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110230638 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107950673 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088676071 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10957151 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086851093 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.103818973 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.104826115 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092218779 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11383883 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085947331 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10803846 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111632656 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090804235 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.106194651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11146171 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084990779 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100614323 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092351773 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104925247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.105265351 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096331915 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105483036 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087778519 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105738921 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114807051 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087409951 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111136738 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088508171 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110083848 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11133342 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082274396 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107290117 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087701303 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114694369 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105303586 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087187855 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.104703134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092341243 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101880053 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10861896 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082989191 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105404498 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092307335 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.105794705 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088806942 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104319103 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122939671 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100704043 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111676703 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109259387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094374942 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10994854 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107218483 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090971367 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111966423 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092383445 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110851946 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107583845 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092658222 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105957376 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091252355 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111365847 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112847924 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082202782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106304906 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082246472 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111488188 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113832664 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092097888 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110316843 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088506924 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108907022 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116299034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08761388 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.109452411 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083095379 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110330314 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095971641 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11107773 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111657679 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094010167 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107645268 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.104657316 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097968209 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107298264 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090661245 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106847537 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08344548 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103012374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111780028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089003009 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104139204 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084880139 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111685828 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112398537 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087993749 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102168463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092541453 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117084816 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104790516 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091167093 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106691772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110288778 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103271795 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101922209 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087203029 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115584943 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.111821251 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084949927 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110507078 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.106011935 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093695021 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.107308586 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088891362 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108472802 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093322277 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107590619 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.102968888 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08766048 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107868413 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0824823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.107545811 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112252318 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088410259 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106502743 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096983737 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112177657 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112114546 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09050636 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110041206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093426128 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112622074 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107875758 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09352302 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105190204 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082843779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10742676 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101816805 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088614865 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10525282 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091898217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107017276 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108873961 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090059925 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113630646 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106432533 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092674218 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129654721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103595057 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082882114 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110096287 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089925262 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105847213 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10639232 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08825706 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112693938 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09109 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113949464 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104829411 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086414271 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111638699 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086415238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112771789 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.113182932 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.093540233 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106662435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090658239 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106945151 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118462373 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083741927 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116111926 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109965969 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090369703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106361653 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090253516 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105179002 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10200984 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08816844 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.113449951 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088217529 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.111279831 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109345157 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089474273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105628092 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085496462 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113483062 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108041695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093706418 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.106205066 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083787858 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104025356 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091491609 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112878208 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112894746 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086396293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109444847 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092377414 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.110036795 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10629722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097315931 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114368178 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093776371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118248585 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103902342 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088060097 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1191203 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.105183752 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.0888102 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107478283 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083987198 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113868131 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093482895 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113695102 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107597378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08410675 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.107332169 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093099495 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.108632065 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.108099893 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.088510724 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111020207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085060567 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111989725 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092787012 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111383633 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112714241 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093316017 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110235163 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107095542 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09388068 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.106868762 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083946974 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102574091 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087946562 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113340124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10291338 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.091089273 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110183242 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089774613 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108407435 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090789432 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106998254 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11380663 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091751629 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108752011 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119136623 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087173974 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107891224 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091072031 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111093833 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083544057 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109495453 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109294943 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095191377 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113613941 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109836161 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09143843 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110434397 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088601649 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111297818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09193173 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112481805 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103197415 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.09421677 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115358242 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087840657 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109061041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109894121 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084909767 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109925207 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092979619 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110731453 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116777627 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09354126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108290502 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111548426 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093800095 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110413499 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094349498 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106837708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113484049 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083911389 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116131782 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090306107 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11402369 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107460298 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085589393 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111535358 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091289642 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111424013 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114073037 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093357952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103823928 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083956368 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109192821 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107345954 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099333807 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116695917 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088689106 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109984639 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.107041261 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088825472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115240804 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085113645 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107741433 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110725661 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093897555 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108569182 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085318016 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.112415184 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113349947 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095285082 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111321504 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10446093 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092695269 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113946682 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088527493 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106000284 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106217921 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094634444 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111355579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086457777 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104150448 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118875453 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095019637 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113838877 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10708741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091623025 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108542889 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089139124 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.115044346 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106896455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092586325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108629738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092256483 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120589011 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102698424 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087791856 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122562242 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092216864 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114902239 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.109273416 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089479315 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115211285 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114726014 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088949693 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103535628 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085691158 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109699362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085076188 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.109104171 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120747402 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095208488 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10971885 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109312544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092031127 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.109029852 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090076811 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103760949 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095896034 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107533422 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118312879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084300048 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104735229 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089706081 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113187231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108640797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092487405 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.108613886 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089694234 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105041998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090532342 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117435145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110370065 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092482332 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111437964 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088793708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.109313426 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119284154 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087752402 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111070292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121696424 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094367274 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112750517 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092388222 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11710903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.114461615 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.089616373 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115330736 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109389985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091124309 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115583073 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096233005 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127474397 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111199328 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084037712 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11212877 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108739943 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085393028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118920863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095516091 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11369328 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111880404 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088611595 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116820296 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096137338 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112765247 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111270133 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090761191 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.112466795 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107488854 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09062052 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107298136 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095743272 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.115237851 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092626986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116567187 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104361809 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10203478 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117757683 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116706896 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08815151 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105276424 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085191516 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.110299051 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096016111 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.114216337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.110801 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0916917 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.110544937 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.092274191 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11183872 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089233872 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.116185251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112568689 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088170854 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1135438 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089746935 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112146096 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.107763683 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.093854231 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.116051069 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094638286 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11936092 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.114311429 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090169027 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108111723 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112147533 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090316739 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112917049 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091843994 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107912041 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08528336 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112873779 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114016561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092588285 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115050058 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097428079 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111123121 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11354497 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098668942 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.113848268 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088074434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11411959 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109718832 seconds)
  done (took 62.144518462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.170094746 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096923063 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110412103 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089387857 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141127487 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111849655 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109370348 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092188947 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111501242 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103396732 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111068561 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109702212 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134270281 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142592376 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138504007 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105715355 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109259622 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110964536 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089351138 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113072707 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133031328 seconds)
  done (took 3.248349862 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114605231 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.130312662 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129458031 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131448668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119011695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.106297647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.128205423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127828623 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.131876463 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122511455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13177152 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126563732 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103850655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122713279 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122543341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12191461 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11079012 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121768651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128660896 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127801618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121859276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108158269 seconds)
  done (took 3.503995014 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098275918 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112164826 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09568988 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109670471 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093123455 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.111106851 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11808886 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089006742 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118742897 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089409746 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.106987692 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090912451 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.116246465 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.108420034 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.087750474 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.109397447 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.099459417 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.113606218 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093052552 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.111396372 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134318587 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109594174 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090092643 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107107386 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103323976 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11536152 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09387524 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11320317 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105878345 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09329256 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108821458 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092429164 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113528972 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086069043 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106688457 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.112885037 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.093352128 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.109881283 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089066941 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.113028511 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091323607 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.115292014 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117457969 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089279017 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111108379 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090274954 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.113553532 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.109101849 seconds)
  done (took 5.822707317 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.15539162 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.174726297 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.122945987 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163455252 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135187809 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107540486 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121997066 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160181139 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.114765267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.096128727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136745063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.137281854 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123903699 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.126296642 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099733188 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119982336 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122991966 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098177544 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125880713 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117808382 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131476797 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.102272033 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134334468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135403955 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121672734 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095893863 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123243317 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127646532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.135477259 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107594559 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.124381969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127378602 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134032256 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.121907099 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102600528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121166507 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.138549783 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.118689026 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.099212038 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.116201253 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103258835 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128234965 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120581952 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137304263 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121897094 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103718877 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118714439 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.113667965 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119987545 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122533733 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128093495 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135605049 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119711591 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099056509 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128072433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.140499291 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.11825631 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096850911 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123040365 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.136463612 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096675903 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122542156 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141125777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119968737 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105627678 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.137463907 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120977935 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120385694 seconds)
  done (took 9.313763518 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128229196 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.122459094 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136283915 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137659411 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120641257 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100874932 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120857817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121044853 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101858896 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130372888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120734122 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.211747293 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117567446 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130155325 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100544858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123609606 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120919344 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121538428 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101355206 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122341709 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121910782 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136433716 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101991351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135904199 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138465826 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117146856 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100778503 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12232028 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136368309 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120519367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138830256 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100486567 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123297651 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135429764 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137925403 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121759862 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092114694 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122349882 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122349984 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100331769 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117614625 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134470288 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12134331 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09695318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121359629 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122128368 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136442877 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137694232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10768297 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131930075 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121903761 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136409384 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121959637 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102661422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136144545 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145900078 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137246998 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137167409 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122343796 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13590697 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136160403 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146971743 seconds)
  done (took 8.553339544 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090332329 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110717465 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089921836 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.111207283 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090932406 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112210971 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089868846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110169748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089931277 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112160954 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089174037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111306281 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089349732 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110792101 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088864 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111030344 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091610554 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112082564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111544383 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090806909 seconds)
  done (took 2.843360029 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.103228458 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136775993 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114743314 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104630971 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115684129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124524366 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09357115 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115874007 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115002059 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095896783 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128116227 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12907074 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095001124 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124585796 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12685749 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123835593 seconds)
  done (took 2.680218269 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117886713 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.138065795 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.171967978 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.118626162 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.116336045 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102824495 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.116435757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094387375 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.113657566 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122111695 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0986383 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.119804786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093309933 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.115127481 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.115070174 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09824404 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.113310263 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098276993 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.115498267 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1716041 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122628424 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096106425 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.118905029 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.119834481 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.097120129 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122803153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.124366061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.094162761 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.116851218 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.116270571 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09830733 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124562068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.114118505 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.101067139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.114837328 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095191087 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115287317 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114633557 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099162388 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114947181 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.095559311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.118797726 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114800535 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.097970849 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.11315458 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.095398282 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.113410398 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122597371 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097866408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.119139545 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09307122 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.123288221 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.120102435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105685785 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125901246 seconds)
  done (took 7.061539837 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108989436 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117515265 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130899841 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091404224 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116120366 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097339238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.117580135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117642412 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096866306 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112338407 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097932012 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117736973 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118318752 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096523659 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118968347 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095767951 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.113179607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117299126 seconds)
  done (took 2.82235189 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10076358 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115153928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10260887 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115662989 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092898847 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117382247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113213196 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091907166 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113434854 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093925122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114204085 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093617793 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113452282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.114225851 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094902696 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11571398 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093980205 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112221008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.115186112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092241213 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11535422 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092129429 seconds)
  done (took 3.161672675 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106038696 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.173317541 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.126162381 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.183127418 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114994765 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.113356517 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103612195 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.115527063 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13280029 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090943085 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.112594425 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09103931 seconds)
  done (took 2.307552244 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123551273 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158655387 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117354495 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093601857 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131357401 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122594799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120717833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101759843 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134879252 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139710573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121617058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134947063 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112046649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136601604 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128879736 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128878512 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122267635 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101068567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117039557 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146990725 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121715115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133832874 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100919316 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122648798 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122312991 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136781123 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112508003 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141148263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12397936 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134867908 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129874883 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099965617 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135636278 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140014722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115848491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135009028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100730668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168166553 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107975366 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138171756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115801827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129053145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113364076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133827704 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13484412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123390189 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130988258 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100360602 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122595556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156319182 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129051195 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136619032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129582211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135049985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13472064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155336866 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142185953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136458563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108224235 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139630305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136841296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13062361 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137836298 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139873667 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130174472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140799909 seconds)
  done (took 9.288755813 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166364754 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098451873 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123204343 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141827491 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137457469 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101617128 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124300029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122771957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101208619 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119317707 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176344762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122442737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137086142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137635733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12227034 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101886459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123405998 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137006726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096446464 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177236437 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102305087 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138337467 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137408716 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137847149 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139209592 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129980748 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099984755 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124598526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122385055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122109911 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110131505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123956578 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136517936 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117379331 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138455023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102268307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122392312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133181557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101194399 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129473011 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136838891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146202946 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123057216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123080512 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139791714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102032683 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123653235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118427713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101433881 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118821559 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140471905 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140609282 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140893941 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137067963 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101307754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12377171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122345026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101315799 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124230639 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129567793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138315369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101161672 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177840459 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101488354 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123949679 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138541358 seconds)
  done (took 9.163192519 seconds)
done (took 169.59308847 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157336374 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.178503998 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15440643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151486678 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10983448 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.133530064 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146477848 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154482598 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10916259 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087372391 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.111415444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091185973 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.206781956 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087799001 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110424322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113205222 seconds)
  done (took 2.949087384 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211840105 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306306046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134350009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114543973 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097353203 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11249146 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093507363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117783272 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110710161 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105141863 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112416189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090694649 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126063284 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.113162257 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089908281 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.112201674 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125647544 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091308324 seconds)
  done (took 3.117522441 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115957945 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165801408 seconds)
  done (took 1.138914955 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128453807 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.219437074 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299793436 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172407011 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.142823748 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136631051 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173547845 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130370195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206928047 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136628907 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136171115 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096421322 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143403598 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124177797 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10621606 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11701319 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148672983 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104601909 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.382988664 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119581146 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140456069 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097556374 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125064618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126388927 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197319375 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13585097 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097418398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119453027 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118893084 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103905097 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125668683 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137166326 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.136043267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187268205 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125405096 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.203434733 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105263056 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117791011 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.126104048 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096585231 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122310055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122830081 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111866451 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11839449 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117850161 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104270305 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118875296 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11785794 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105546902 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128441376 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128169832 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12505726 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.182256114 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128918285 seconds)
  done (took 8.436549507 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.921543426 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161478645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094803455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.06252507 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155342924 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133110221 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.935826179 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122069193 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.28214737 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.924210939 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135740295 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10716201 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.288524028 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274664011 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192204588 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398159179 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764258534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135166178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147932804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.171180986 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124905311 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14907542 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116793127 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454002127 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095102754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116898091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122842047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10703429 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.20461128 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093480415 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120915743 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.228388242 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28900944 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234938517 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11820326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091915657 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115152485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191080447 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27393534 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187542879 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089820138 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11562527 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131013857 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116979594 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113894149 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.208040647 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197679666 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.220848096 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097488442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130894 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127102774 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129333483 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.185405283 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112625688 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376637811 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382465518 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114411395 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104530725 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136615322 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303157061 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116886144 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264224107 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146748836 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246734751 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115176338 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.856145811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190579111 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114855414 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103100421 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12595973 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122800063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13018418 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182774169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393528378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133410345 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098004656 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115202916 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255183346 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093082362 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117330762 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187401849 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119635236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127126217 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111846462 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133023718 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.216693671 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272181705 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133082128 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12687314 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098729745 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132061013 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119062921 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233501682 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.27767143 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181608545 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.260472518 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1090875 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.210526075 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188414293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1305638 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.216233202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103835445 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137288779 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130593074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252813321 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156442099 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.117829503 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098160612 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125902618 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161241072 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120639657 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124962631 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192377542 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.499684102 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187531031 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115530768 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097372937 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128018517 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20629353 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102948941 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296237872 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128610043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189698324 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127700237 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113505633 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103669962 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.212629986 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132884582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12623431 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109931934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127165467 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.296312537 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256887241 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109821544 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269098118 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192799785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128519668 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220252555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103434014 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.215266535 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127395542 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107386647 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120327739 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844856323 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133432196 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12499828 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098652546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204111372 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117298541 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116274435 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093135013 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112276972 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841885625 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096171442 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.114651727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093738789 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129078232 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127093844 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123330622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100902308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207724839 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272985047 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130397472 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102735233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117697957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181051363 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120426891 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115522313 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093456146 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116938372 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103815874 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123858379 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117347435 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196494265 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20512352 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.261445998 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572541134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093159136 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.117890709 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269934209 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116790805 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344878605 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126209304 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.264118864 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19025893 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.114166345 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.377074348 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.215801548 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208901801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096180869 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.218574606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089490095 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125902464 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.208365705 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093281936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126450143 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181425267 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136389072 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135350728 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.200181274 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115986617 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251720361 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.114336896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192161167 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120177437 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130499197 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347452739 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09230441 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142362527 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208895266 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097543158 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.1178292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635609039 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093585701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13004133 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128040582 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.262382388 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.213318232 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104962228 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126913795 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13146784 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184529216 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.258153501 seconds)
  done (took 48.564890704 seconds)
done (took 65.057967717 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.335564221 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.297701441 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.34924136 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241161806 seconds)
  done (took 2.186506392 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.242519587 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166381788 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.222142707 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091425793 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.230629639 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091879202 seconds)
  done (took 1.927319723 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.557341981 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.455128516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.388320856 seconds)
  done (took 2.288197373 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273132143 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.305635818 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.374652641 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.507562067 seconds)
  done (took 2.455221374 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294355258 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116008384 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.135809631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.187420048 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261012212 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.288815179 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163079495 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211852272 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120463651 seconds)
  done (took 2.716802842 seconds)
done (took 12.460335236 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.208555876 seconds)
    (2/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.359458084 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.2200878 seconds)
    (4/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.209397942 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.309100539 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169585365 seconds)
    (7/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.303509571 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.126861798 seconds)
    (9/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.185236735 seconds)
    (10/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141905495 seconds)
    (11/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.164313773 seconds)
    (12/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.276111888 seconds)
    (13/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.268278635 seconds)
    (14/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.295708504 seconds)
    (15/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.246414221 seconds)
    (16/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.210816669 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.155190179 seconds)
    (18/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.164088792 seconds)
    (19/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134281947 seconds)
    (20/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.199553626 seconds)
    (21/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.304181881 seconds)
    (22/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.277520841 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.136302262 seconds)
    (24/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124567683 seconds)
    (25/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.230690169 seconds)
    (26/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.231249996 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101525211 seconds)
    (28/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.227131917 seconds)
    (29/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.347498958 seconds)
    (30/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.187084823 seconds)
    (31/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.179067734 seconds)
    (32/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.126170414 seconds)
    (33/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095146588 seconds)
    (34/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.162473295 seconds)
    (35/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.202515219 seconds)
    (36/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126995591 seconds)
    (37/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.171968022 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.16025961 seconds)
    (39/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.139124554 seconds)
    (40/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.116440678 seconds)
    (41/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.215652975 seconds)
    (42/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.141714953 seconds)
    (43/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.149102733 seconds)
    (44/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.167406762 seconds)
    (45/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.148414909 seconds)
    (46/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.086486304 seconds)
    (47/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.097111659 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.13586441 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.126164236 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.223085621 seconds)
    (51/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.08570674 seconds)
    (52/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.232930571 seconds)
    (53/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135352844 seconds)
    (54/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199447206 seconds)
    (55/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.145905742 seconds)
    (56/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199704746 seconds)
    (57/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.168778665 seconds)
    (58/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081962913 seconds)
    (59/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163597458 seconds)
    (60/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.218525393 seconds)
    (61/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.138995682 seconds)
    (62/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0854555 seconds)
    (63/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133650753 seconds)
    (64/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.133079027 seconds)
    (65/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.226727961 seconds)
    (66/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111276555 seconds)
    (67/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.112992695 seconds)
    (68/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106505115 seconds)
    (69/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125415609 seconds)
    (70/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.145795403 seconds)
    (71/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139716763 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123226851 seconds)
    (73/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.185148226 seconds)
    (74/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.209345253 seconds)
    (75/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.102274354 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.125992044 seconds)
    (77/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.082848639 seconds)
    (78/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12211413 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.15732667 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.155701605 seconds)
    (81/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084431421 seconds)
    (82/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.1082104 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098662827 seconds)
    (84/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.108961545 seconds)
    (85/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100470053 seconds)
    (86/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.125689055 seconds)
    (87/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.214130791 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137547271 seconds)
    (89/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.127821603 seconds)
    (90/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.176987753 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082652544 seconds)
    (92/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230041795 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.157800465 seconds)
    (94/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212618592 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.159868118 seconds)
    (96/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.203613591 seconds)
    (97/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.199745541 seconds)
    (98/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084345051 seconds)
    (99/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142308853 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123247252 seconds)
    (101/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10052894 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13814433 seconds)
    (103/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123768713 seconds)
    (104/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.134597078 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122066002 seconds)
    (106/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11400057 seconds)
    (107/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.15490004 seconds)
    (108/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138226759 seconds)
    (109/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.082700112 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.206330171 seconds)
    (111/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123918554 seconds)
    (112/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121149789 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111371174 seconds)
    (114/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.199140383 seconds)
    (115/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082667653 seconds)
    (116/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134811886 seconds)
    (117/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106522867 seconds)
    (118/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.153236688 seconds)
    (119/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107922926 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092636506 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.127458332 seconds)
    (122/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199833447 seconds)
    (123/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084053057 seconds)
    (124/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122168985 seconds)
    (125/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10970846 seconds)
    (126/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.122751525 seconds)
    (127/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.160073514 seconds)
    (128/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.145522131 seconds)
    (129/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.202394661 seconds)
    (130/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.108202339 seconds)
    (131/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.180514101 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128277368 seconds)
    (133/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.181203395 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099455637 seconds)
    (135/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.218202035 seconds)
    (136/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125203906 seconds)
    (137/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137478536 seconds)
    (138/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.091003855 seconds)
    (139/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204721624 seconds)
    (140/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100828543 seconds)
    (141/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.218348382 seconds)
    (142/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.108341409 seconds)
    (143/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084914956 seconds)
    (144/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109813786 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098822177 seconds)
    (146/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.108365218 seconds)
    (147/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.082687055 seconds)
    (148/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.10901026 seconds)
    (149/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108343763 seconds)
    (150/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.109590342 seconds)
    (151/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10397007 seconds)
    (152/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.125124663 seconds)
    (153/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.08339526 seconds)
    (154/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139141522 seconds)
    (155/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.125573242 seconds)
    (156/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085278349 seconds)
    (157/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.108214765 seconds)
    (158/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099539564 seconds)
    (159/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.107883034 seconds)
    (160/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084896543 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.138183586 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113872321 seconds)
    (163/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.109847728 seconds)
    (164/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095903842 seconds)
    (165/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.110077531 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101005037 seconds)
    (167/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.165118733 seconds)
    (168/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132070042 seconds)
    (169/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085387179 seconds)
    (170/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117344305 seconds)
    (171/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.090617207 seconds)
    (172/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083788349 seconds)
    (173/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124291787 seconds)
    (174/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082887323 seconds)
    (175/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.10892321 seconds)
    (176/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101829596 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126458457 seconds)
    (178/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117218699 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100564768 seconds)
    (180/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117047811 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099081512 seconds)
    (182/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118342926 seconds)
    (183/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134799487 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100595423 seconds)
    (185/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.165746486 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124209671 seconds)
    (187/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097849492 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.134940413 seconds)
    (189/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111791104 seconds)
    (190/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.121850004 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091792681 seconds)
    (192/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.109013661 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09974189 seconds)
    (194/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116601139 seconds)
    (195/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09906896 seconds)
    (196/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.109505137 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099454284 seconds)
    (198/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.111999575 seconds)
    (199/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083288652 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.140185344 seconds)
    (201/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116628887 seconds)
    (202/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.101669879 seconds)
    (203/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109320283 seconds)
    (204/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085173478 seconds)
    (205/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.126762255 seconds)
    (206/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.089991423 seconds)
    (207/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.120332087 seconds)
    (208/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084976799 seconds)
    (209/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115617294 seconds)
    (210/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085448958 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123876592 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100911194 seconds)
    (213/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.110148349 seconds)
    (214/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08430786 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.139440456 seconds)
    (216/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091922781 seconds)
    (217/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.109997919 seconds)
    (218/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.090774762 seconds)
    (219/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131534402 seconds)
    (220/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084314781 seconds)
    (221/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.109817896 seconds)
    (222/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10114508 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127271893 seconds)
    (224/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.125720309 seconds)
  done (took 32.666820008 seconds)
done (took 33.564591312 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.517540821 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135042183 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104975566 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130555268 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187173205 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.134252221 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113680919 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135684158 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.134527609 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.102063274 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118800862 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109812953 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13115071 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186495209 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.133938093 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096311899 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.124626763 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.135790284 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.112332282 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.139824378 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.186755906 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122564686 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109428555 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123014143 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.187558054 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122133121 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103998871 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.131211067 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133807628 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.1042188 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129894448 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096107876 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138438862 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.138099461 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093474228 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.127071235 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092882996 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.119025 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126368906 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102516557 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135792502 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.101848659 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.132664079 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.122335594 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102109754 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.126910866 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09257573 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.134514769 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120323397 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10434537 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122664514 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.138410938 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100990493 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.120112459 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093386543 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.123987443 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.13424231 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095028397 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.135840756 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093987896 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.123573101 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11833596 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104554299 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119355108 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.101384894 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12165585 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125561695 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.105725196 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.126880289 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096354623 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119901616 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099083837 seconds)
done (took 10.099704675 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102255618 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183409979 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.188257719 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192709016 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155691067 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140977148 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.143791956 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152520452 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112718394 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146854489 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15966598 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.151405288 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.19507083 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.136097628 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113879708 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.129884841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13432183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109934431 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.195045485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148059726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159802467 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.135444238 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159708422 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118930089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.129620735 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.161959527 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129377269 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.103236063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12780085 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134842641 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.122497674 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127996283 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128445941 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124128878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.139666501 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132813992 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115317555 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.130348471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126171827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.102495984 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144520447 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145232715 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100750234 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140283741 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.130418781 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108159008 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137117666 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134560258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104720059 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.131783535 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129132821 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133882077 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.136391332 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.136587433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13509172 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109045055 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135961925 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107254039 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131885049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.133905305 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100280316 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129222429 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130650409 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155831978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104590356 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.136618174 seconds)
  done (took 9.85996053 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123168951 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.162146856 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138572234 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137043081 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10823944 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11804498 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090592446 seconds)
  done (took 1.821858571 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094876746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191944058 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.190141097 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1876528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.21070084 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.200202994 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143265303 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095415617 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.161322292 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130509768 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191083854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.223174152 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.128360092 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.113087198 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.219350741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093848343 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.193054887 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121951054 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132125491 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.19137202 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110111105 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15375443 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.136572722 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094401269 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209486222 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097218659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272975818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111692301 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127351873 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.10436053 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133991324 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206437461 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184832093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.138113017 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125877428 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187975231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.185407124 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132291584 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.204438151 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100153361 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183871863 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.135179892 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.134576117 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107995965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.13413098 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.171849225 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137847141 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.108635492 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.131940645 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190871137 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136657553 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18661491 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.102432116 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137251534 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.133993953 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108556933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.141927858 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.135017596 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192307122 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.136764813 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185112016 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186937716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184965112 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186154553 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144642777 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188542078 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.183640901 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103558129 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131018918 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.134319915 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186778058 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.10597375 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.136896227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173040352 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138133514 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.189785688 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186322626 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131217498 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.110019498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.127248603 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103552694 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.123217547 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174995556 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135786206 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104615814 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141616179 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134637446 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.10831481 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.126890949 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149257476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106082104 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.135816647 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.137825815 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.106508938 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140981394 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18790601 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.135048611 seconds)
  done (took 15.397410607 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097862552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.121061133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102647155 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.124016988 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096194754 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123487221 seconds)
  done (took 1.6287598 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130429433 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.136934811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145401068 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108853939 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19420208 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.22193642 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.197800567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135486975 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.126593767 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.146629467 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.193772262 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1966674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219092 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.112124298 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196374142 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.139556048 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196844296 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13414389 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144713549 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10516713 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144117242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.137231862 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104853923 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.186280058 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.140613304 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137711755 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134423304 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117995539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.143320392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.133640938 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.112197101 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.13804002 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131337685 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13254156 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.199020952 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10430958 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132618258 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142816081 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111585544 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140171292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.197150669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133659974 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.144265846 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14305484 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10814116 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.131637708 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.142687285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108412361 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.223195167 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.115801569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.145090934 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.137397971 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.112808452 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.144433821 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131166217 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13410806 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115188387 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.224610285 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.112930974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133126426 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.137769581 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.113061745 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13524504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.140788243 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138527378 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.116399465 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132579705 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134722036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105582329 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.138742372 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143659454 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109815211 seconds)
  done (took 11.259755165 seconds)
done (took 40.910184322 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.163508375 seconds)
  done (took 2.12331119 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.021583848 seconds)
  done (took 1.987371662 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.592794128 seconds)
  done (took 18.59622881 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.593407096 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.675266152 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.021087484 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149854769 seconds)
  done (took 3.404212888 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.031458951 seconds)
  done (took 2.021381582 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.33159665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.292461048 seconds)
  done (took 1.594756568 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.904495365 seconds)
  done (took 1.884503852 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.493009852 seconds)
  done (took 3.475105817 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.389772686 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.203614478 seconds)
  done (took 1.579087648 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.691074526 seconds)
  done (took 1.671453777 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.758124643 seconds)
  done (took 37.739988649 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252041239 seconds)
  done (took 1.246442726 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321036082 seconds)
  done (took 1.302583109 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.896963084 seconds)
  done (took 4.8802888 seconds)
done (took 84.479547253 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106603254 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135623179 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10900899 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.134178951 seconds)
  done (took 1.463083626 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116787428 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.135008288 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.138655843 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.108164709 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.144357339 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.107385852 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.135442034 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.141138465 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.107540485 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.137187285 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.133527075 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.108527404 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.136153938 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131916175 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.107076011 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.136867197 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.111166723 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.136353111 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.134704278 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10890769 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.134330557 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13452669 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.111139976 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.13524929 seconds)
  done (took 4.019764029 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108111639 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126093339 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103535327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125925703 seconds)
  done (took 1.451909127 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11650139 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.152250171 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148470011 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.116224555 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151914273 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.1487632 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102507798 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.12919465 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104873531 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.144289522 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130994368 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154507113 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.123504006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.137267411 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.14288423 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.101859183 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.136035293 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123129323 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.143224682 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142388246 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10325547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.141417695 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130160878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.122760924 seconds)
  done (took 4.137900269 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.219271223 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119767216 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.158962319 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.186530986 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.160610126 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103691605 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1624589 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.139322884 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.140101699 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.11007889 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.13670075 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.194975949 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135895492 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.113707771 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.136482723 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.140620424 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.113417557 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13913528 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138567253 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120170818 seconds)
  done (took 3.867241531 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109557312 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125372217 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095953899 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126299775 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132164872 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104406212 seconds)
  done (took 1.690655884 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096678554 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119490486 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094761057 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119465748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100042995 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120091187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092860786 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119794924 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094771416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121597148 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093274798 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119621196 seconds)
  done (took 2.290820052 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.316374062 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.100085365 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.130438351 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.127035752 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103534719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.126149398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140975911 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098710374 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266562935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12612432 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117111738 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20284563 seconds)
  done (took 2.850934687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235999684 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108056446 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296306338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406313578 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180065733 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186349613 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.298642806 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18661444 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.23807973 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12941206 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246404857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173876012 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1713739 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200084406 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128999539 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.207689335 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222892282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224213072 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166182282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231886274 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183710895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186916133 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202640621 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168539663 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154834385 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177075016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133366996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115446747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221362921 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192138873 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195970041 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167265331 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158225843 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224885189 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27386402 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202564958 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.368630248 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124136486 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.214604425 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.229277272 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262756985 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157943766 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248385048 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145356023 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146982314 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203038529 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174370875 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.23160755 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.122681752 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158741231 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235834921 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19653061 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207995007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155440369 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324831773 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164720367 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164881598 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196881345 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213889945 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244136456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187061391 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.108293922 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231072638 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208268025 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202736948 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165583913 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192981502 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142529393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198500393 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218786233 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234575373 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188667754 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209084992 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15023755 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182078183 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191338706 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172387403 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200396762 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179416917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.133073472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167028996 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124155007 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142323721 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204648235 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107790956 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259934878 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151431243 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.2074756 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226786458 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178728104 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180744309 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184434031 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18661898 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163623353 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.135223568 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161703596 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.180956524 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176183896 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117772699 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175109394 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162792222 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144166894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170468024 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107639381 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177889149 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.150801823 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186548881 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183569112 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.147253988 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183691784 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167770806 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179289655 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192342749 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211270485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14822127 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146807815 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219354517 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175639831 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126383498 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225966775 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213658778 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.187059354 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15336312 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192559862 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220516081 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158601768 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212894558 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160988427 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148657048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17219942 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178482799 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17726144 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172969234 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11619379 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171468161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246540804 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.112916841 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15218364 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195243976 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143632779 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113409095 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160012826 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153244428 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.157388718 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170123825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.159307377 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174267138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178685436 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143639244 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207109237 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132257057 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25108213 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147153231 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150704138 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163007244 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.134909136 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.207039686 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205687881 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145856034 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206934825 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193006201 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2453095 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184321263 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144392001 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203815555 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114650869 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13761373 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18965006 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183102975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182489204 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.235019371 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213903048 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194104874 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173451509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166092644 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189486496 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195948972 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178512272 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.162446848 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183589962 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188820928 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13560486 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139482529 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11548485 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156616799 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146104765 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119159432 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234297921 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185114802 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205290282 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180246912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15612114 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20455494 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.143099948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184692615 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.197117511 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155184299 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211698824 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20375335 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185813517 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159818729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194232543 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.137314308 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137965155 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122298811 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219573621 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120392772 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150842672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161610171 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205315239 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196921101 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166194578 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252224635 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192030315 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217444553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.13713333 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180572892 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190567265 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175542125 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180006879 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146318962 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181411193 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200567747 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161880947 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216649352 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182815582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188175411 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256840567 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.175321583 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145460334 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165648229 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189076153 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157233693 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156431609 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163033342 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15131241 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172201055 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.154268717 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144591613 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205078662 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158794951 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2060419 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17720898 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196258582 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140309183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160893756 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179323489 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162827603 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104467777 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190373049 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243955165 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163398438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177314933 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197341948 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144895892 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329433489 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215237678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207132906 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153918287 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161522331 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179941841 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179951855 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183857952 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205067887 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160325001 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202454669 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177717705 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158883634 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149344409 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136587678 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168600254 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173340326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152916718 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175547171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.158144282 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208115009 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161722607 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177259515 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184151636 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.16384353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145354314 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157672381 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253581776 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176699468 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200521992 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.173758615 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191090701 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210224937 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137236046 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113904127 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.144039848 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20437656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146456619 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177772358 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.199978458 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217848768 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179674901 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218676667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122990289 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.140891482 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180670853 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165903345 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217733203 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159131879 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154866855 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215192694 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.168599 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146967827 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183470369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304388722 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162433545 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195627993 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104865499 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.322267207 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112340711 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147895023 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179977807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193497126 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16654657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.200864011 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187142453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160226975 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150400104 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154872968 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237331021 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230869577 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193758645 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196954181 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.161439131 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178594757 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182294078 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228112751 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130388715 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.16418781 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181008933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205321634 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.241295898 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.122042342 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182045811 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181000615 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178771674 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227892693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119342575 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20835784 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14685842 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188269436 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157270219 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142481772 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177167484 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198933969 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150159521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196954954 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176771783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145956569 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113879853 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169594016 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176878986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161225641 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.146234131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202760192 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.141933832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182466919 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200022299 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116608217 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17598219 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164356508 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149116356 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159956732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131348232 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151872668 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.187645087 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207202222 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.14993437 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197350367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194914012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185893637 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179175665 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160533033 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.681174068 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.145565339 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204893076 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163788147 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216466163 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166204868 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186711652 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180447984 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166524013 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190237982 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167919844 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240671411 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189076603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181434506 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116026177 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161569151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162373907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148498753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169973849 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181312325 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127613713 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155561529 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178641634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164667875 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.162869049 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153428259 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206796696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163819787 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207979037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20575081 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156801382 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185579204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198402046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144904395 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185030143 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194124746 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159208201 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174630743 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.148167568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.124651688 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199544907 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.139087533 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181184554 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178647992 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181864574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181447117 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152152744 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178349872 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130768346 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179357006 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142922727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178395877 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176699205 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149185108 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115840967 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174440979 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179643398 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.176837811 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14385002 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.187686671 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206767548 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107808506 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149871669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301920732 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1769805 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245204618 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143602504 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150763067 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161758833 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176520578 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173648732 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178290196 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115656843 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147004544 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.150948206 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.20271369 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175214677 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175248677 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201264683 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180133875 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213289632 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162288163 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286417749 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123595659 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174190539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.148748847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146386666 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128411772 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150714643 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165652974 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20887481 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199610588 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.170784906 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.163558208 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145777995 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107686995 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147048257 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18217773 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174319745 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176168754 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164105386 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103090302 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161655253 seconds)
  done (took 87.149176921 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167630422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.23611389 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170761519 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223049257 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189337798 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281526219 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22866536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24718312 seconds)
  done (took 2.828576761 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.135911005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.120845773 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.155171067 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135085751 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136495021 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451011232 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146408973 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107438016 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.200492674 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.176837141 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105786658 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.68575443 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.138586675 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135454285 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.130127427 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133940891 seconds)
  done (took 4.171140481 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.711848792 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.575252155 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.390114787 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.269688113 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.25053139 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.196158332 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.800621292 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.207433009 seconds)
  done (took 13.479444142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138282404 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154197145 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.35440958 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.224469025 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.173006969 seconds)
  done (took 2.132804355 seconds)
done (took 132.5182808 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110175714 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.156842975 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110091612 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156458891 seconds)
  done (took 1.609499562 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156630755 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.124202353 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09557828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122442052 seconds)
  done (took 1.588313483 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.545450638 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0919569 seconds)
  done (took 1.754707031 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137889278 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15554327 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156546951 seconds)
  done (took 1.547544746 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118045991 seconds)
  done (took 1.204762812 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115113565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13787587 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.189978952 seconds)
  done (took 1.535394852 seconds)
done (took 10.330366675 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131173346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.43652157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423952462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117285087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.731905429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.416294691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049544025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165901354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204992494 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097719084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149320392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677226401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034554131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377314782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988692969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467071273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712892682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101056495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135679857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099133973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02607871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127071378 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100565972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130680123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679673342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.433801395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126582605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.453587199 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127806765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103241891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42032663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127750373 seconds)
  done (took 17.454997335 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145415419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194891815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138411486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099725123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.134271316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129199074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109909124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143711984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204922062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129291167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119668825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127942349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133711894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100074992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152088701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097484607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131512562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130362764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107624899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130392323 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120126836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127797351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130412101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101918968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127598217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112838098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129339286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142571295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098025117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134696399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104672976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12990328 seconds)
  done (took 5.213529857 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149378165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.20311843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13910679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163809784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184544994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100850917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222109307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170765536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20317403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129125917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150847838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098337652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.170021832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128163064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122778158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129013148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101504345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13096615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135460535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101619592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150352229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097147735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131223696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130512583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099840491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.145004612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099311062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143346237 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.129081604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105728528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135682688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12873072 seconds)
  done (took 5.530864101 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112279256 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143582153 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122477694 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.153314586 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.138948917 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.112452705 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.143915136 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.106266795 seconds)
  done (took 2.13134128 seconds)
done (took 31.42189156 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125561895 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.150829307 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118714905 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.143247684 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203781645 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101635189 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.146794077 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.132154772 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.114241294 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.151687012 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09891902 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.135120932 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.119140849 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.138839742 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.187137886 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.143345574 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192463768 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189264553 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105796925 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.143129721 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.105197447 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.193739925 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.142585393 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103869931 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.198546777 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.134938469 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.185833283 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.139600375 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109308316 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131996352 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186613071 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110753327 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135489839 seconds)
  done (took 5.810914515 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.224661616 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.215981141 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103818061 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.136848334 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.214555862 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103968555 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.234403931 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104770323 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.134954318 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103630652 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.133429157 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.205147884 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.212853168 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.227108168 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.24515043 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212980011 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.203280595 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.214232557 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.199000345 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.217653945 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.204991515 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.135983896 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.215803144 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.219177451 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102881967 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.135174499 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.238737594 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.213070483 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.241750842 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.201842705 seconds)
  done (took 6.668737507 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114055394 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146984364 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124692141 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202713389 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174637673 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144961317 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1118599 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.155389339 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155749705 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100479752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141134359 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.139071081 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148153125 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141878512 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104944832 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.151004647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.155776701 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102389523 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.137823477 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119995234 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.15033274 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.149779281 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116270426 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141981069 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100971012 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142406205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.13571208 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113413699 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139729546 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109187685 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.136389654 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.136601022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104399906 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.141096425 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106801485 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.144065768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.158191373 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108988766 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144631322 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.168432039 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108628582 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.137846866 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151839092 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.147941121 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132316252 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141956103 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11375546 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143399776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099768336 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152686168 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1458083 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.102045738 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.154255073 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099658195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130913746 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138951405 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102376949 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134007812 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110969228 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.135324876 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157252848 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109324739 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138650241 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103311112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.137406036 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099428312 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.133116769 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1388597 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125184487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137449232 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163574228 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101573304 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.142747782 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109230735 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13756365 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139587149 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101431769 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138223489 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108555797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.138458631 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109368572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.135047549 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.136035635 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120342248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154420793 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.145407438 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.111794582 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143328188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103568867 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132855055 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145446123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102804801 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.136513295 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110576155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.134190693 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.134723574 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.112495627 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.14226298 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098797463 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150668684 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137615033 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100700037 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.149638372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101769194 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.136559367 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110932864 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144802328 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132638966 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110350766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144167151 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100310614 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13762364 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.135579658 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101549777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149855707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.111697617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137915492 seconds)
  done (took 16.395242212 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.308405391 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.319272966 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.214435288 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412593309 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125703685 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23596788 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.28314069 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.234387205 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134962924 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177827046 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19649061 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.277720759 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102718329 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.168027044 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.315867065 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.385425501 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165750247 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.179266365 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178965587 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126160224 seconds)
  done (took 5.666636376 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126045377 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175410791 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164835328 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.167312095 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107200565 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.147748077 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.131966747 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.128695065 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.141940406 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.139656411 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101025708 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.147680834 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.110242408 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.142490373 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.153050271 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.180317713 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107334289 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139771072 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.125602607 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.140938181 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.14333243 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.163395414 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113806557 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162602767 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.149055287 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116364933 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.132985519 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140461765 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104319468 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.137466631 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106888199 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.154896597 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140916601 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10769176 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.143298414 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.11348882 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.135509036 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.133436219 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103546296 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.136309243 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.119207845 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.143109552 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104985141 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13164916 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.115045641 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.135648246 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.144167984 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.112657322 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.145701683 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117263885 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.144901903 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.146082525 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109181219 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.153713981 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.103612421 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.149295699 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147134693 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.144728377 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109902772 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.132217357 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099437952 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.137606176 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.106095779 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.145849579 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142764447 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125062723 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149958131 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.135332981 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109711951 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138196198 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10584858 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151760407 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161730564 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.138370548 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105266377 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156680879 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.105508105 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.126341679 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112057787 seconds)
  done (took 11.619943479 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133684395 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.139228705 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122673036 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.171884022 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.154594544 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.10775836 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.139248794 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.122134169 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.147251033 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.148008185 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.116214602 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147539812 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159397974 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115202899 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.138885271 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148266604 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.112002152 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.17967727 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152421122 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136336363 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.15157087 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.138327942 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116127237 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.146974483 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168717927 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.114319288 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167965189 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.145078223 seconds)
  done (took 5.08064025 seconds)
done (took 52.347503483 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.23536705 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431034905 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202179087 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.203204179 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.198780481 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.25397481 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201755817 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.397316024 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.964107636 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.199238246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.204599733 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.200644517 seconds)
done (took 27.816786458 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.430394326 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.815431612 seconds)
    (2/2) benchmarking "String"...
    done (took 1.518710967 seconds)
  done (took 4.475073194 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.195665015 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.197873891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441724622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.197509853 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.215955215 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.216452776 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.213408024 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202865139 seconds)
  done (took 15.808649325 seconds)
done (took 26.03396086 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.31272527 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.64919113 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.629154458 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.216986729 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.201282356 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.199779842 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.192790113 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.263034321 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.199263627 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.210402779 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.233828419 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.597225519 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.201434557 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.743619033 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.1926075 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.205063479 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228431735 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.51016527 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.203788059 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.220320749 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.211991283 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.213903778 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.207852995 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.240606186 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.212087578 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.214172066 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.260547557 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.207563124 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.49637277 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.20658295 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.201522739 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.224724658 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.270617007 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.204786337 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.336919247 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.223283465 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.472798481 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.208803175 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.195349407 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.215474674 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.457256803 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627407515 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.200295112 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.197871138 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.207385584 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.275912762 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.200318771 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.954717765 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.215662418 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.19440782 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.224058889 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.605740601 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203993744 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.230212297 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.211204232 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.510120315 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.213973465 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.275693989 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.244602852 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.232366209 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.204091754 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.201540188 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.20787336 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.207594534 seconds)
  done (took 144.868112443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.201943699 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.209733489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.210388163 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.232414178 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.202991677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.209390486 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.203989481 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.204362287 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.211515015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.235659327 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.204922164 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.204637402 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.211205953 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169572951 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.208124288 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.223020129 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.209180804 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.233633954 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208193162 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.203639933 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.224026462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.205271788 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.223532353 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.203836933 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.25380666 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.3028107 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.239749219 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.206080067 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.210615868 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.204117024 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.220630407 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.256587135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.875592124 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070542239 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.216913213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229570019 seconds)
  done (took 80.471220614 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205276713 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205446503 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205148181 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240749402 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20489142 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.838565227 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845180176 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.96913569 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.687046395 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211015628 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.669221316 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520742672 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.206004852 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303152988 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217052566 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205394344 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22140116 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251805162 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213266269 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206696879 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836963671 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225723995 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208868753 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.393260587 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224227172 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242493129 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612383501 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206530558 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206401511 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241289909 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549224201 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260472995 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206988258 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613007937 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.805253995 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323122348 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209248206 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242131045 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207500239 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.496232607 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209336727 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207096607 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209704964 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916433975 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20667975 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839833739 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212042818 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218874762 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207104028 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206081544 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.573002519 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.990098926 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226680239 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206750763 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210439548 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20910726 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20769532 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243420452 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.743458535 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330185776 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.2277493 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212042351 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243840802 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208433254 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.290582907 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214434183 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.466102402 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296291369 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320667755 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828733729 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213072376 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309337332 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332807534 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20842067 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207924842 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209417977 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209292119 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.322982426 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20857625 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209400474 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.667413778 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394238407 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229749621 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.682095297 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309659587 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211898034 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209060279 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622046327 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209315104 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209572823 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006239248 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309228022 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210455655 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210507068 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209437743 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.669744466 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844400333 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.563516463 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218125172 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.093251532 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220171581 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.683086411 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.817004257 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.912390627 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21092013 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327747883 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396220316 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.230427547 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211962765 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.689972712 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209837433 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268697807 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21082308 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612719323 seconds)
  done (took 370.271541385 seconds)
done (took 596.734767686 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.943395385 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.894189477 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.031463257 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.922871388 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.884913558 seconds)
  done (took 10.811144381 seconds)
done (took 11.944829528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41005766 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409528207 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277554036 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410213756 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245997576 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431409955 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395193732 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233963988 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319709511 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.2996645 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320720696 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268339189 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250176559 seconds)
  done (took 18.407493002 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498836991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.218866231 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300321413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47322167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256565928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494389151 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524556887 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.219487629 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355044134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23058768 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228328929 seconds)
  done (took 17.938436686 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491015364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21946869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302853237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.475526833 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258333978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.484568148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.526717779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.21889824 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368903349 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230791575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231191856 seconds)
  done (took 17.944667116 seconds)
done (took 55.424781573 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256585015 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.388966296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243356162 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231360565 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.226732005 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225962586 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232825944 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225668443 seconds)
  done (took 11.168260233 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225649143 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.225093946 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223824391 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226195419 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225504385 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224472732 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.225797104 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.224500824 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.226265193 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225126419 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.225003483 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225441563 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225102768 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226309406 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226532263 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225151219 seconds)
  done (took 20.743341042 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229701489 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.226509999 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.224904214 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22598739 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226186892 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227193084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.22905643 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226692575 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225671468 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.225681062 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226454026 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.226762658 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226136049 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227057236 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227674698 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229017099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227121403 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228764065 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230498343 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225954851 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.228406904 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226855071 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.226312702 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227251029 seconds)
  done (took 30.593139308 seconds)
done (took 63.640453086 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.219219041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.228934472 seconds)
  done (took 5.58582883 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.287337825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.290560187 seconds)
  done (took 3.718095312 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.227429185 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226614376 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228247451 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228038449 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.226033731 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.227722413 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228282189 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227528394 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.227380212 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227677228 seconds)
  done (took 13.414093488 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.227167953 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228412083 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227161336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.228726462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.228658706 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227948485 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.228113236 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227638875 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228004453 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.227975589 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228561258 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228716488 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.227776879 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229403555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227991614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228874678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22951889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229736723 seconds)
  done (took 23.24997073 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242351758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.250651866 seconds)
  done (took 3.633447345 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.370685353 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271610616 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345970745 seconds)
    (4/7) benchmarking "year"...
    done (took 1.335087363 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.271070208 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.250965951 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272875786 seconds)
  done (took 10.260584832 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.230460843 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.422238933 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536811953 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.766778005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.231641635 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.276494344 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090306734 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.276155553 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.266934256 seconds)
  done (took 14.240384858 seconds)
done (took 75.241116929 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.217519395 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.259693331 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.230198348 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.257789697 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.566824533 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.258340342 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.217513297 seconds)
done (took 16.149540163 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.223761075 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.221884581 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.22275671 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.229582055 seconds)
  done (took 10.041666197 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.230480047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576859521 seconds)
  done (took 4.94869917 seconds)
done (took 16.131969031 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230696377 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230898578 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230581638 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231415599 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231666607 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231117839 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.232501099 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23138438 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231551408 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23110051 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232162291 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.231317997 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.230657257 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230652414 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231506277 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231059884 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232347581 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.233147472 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232392642 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231893777 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232708474 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231799508 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231947525 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231420192 seconds)
  done (took 30.701106245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.23316468 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232053738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.232766109 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.23110359 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23186766 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.233220326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.232402673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.231988687 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.23320961 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.234557944 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233327261 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.232521632 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.233160175 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.23288033 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232873743 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232279787 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.234286265 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232996666 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232591963 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233131809 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.234489879 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233291806 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23363976 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234193693 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233935485 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234231152 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234542703 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.233161271 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2343274 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.234790354 seconds)
  done (took 38.141680957 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.239719675 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239059193 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.234056092 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.234162323 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233224592 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.235178208 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.233994055 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23457153 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.234819289 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.234488931 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233626931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.234555452 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.235072485 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.234685663 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.235604495 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.235378464 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234471291 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.233372598 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.235084641 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.235144704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234744329 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.235505085 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235397298 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.236017231 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237014824 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.235788121 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235529265 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23522046 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234333574 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234301115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235261328 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235155909 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23577882 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234736685 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235318445 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.234734255 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239417431 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241627701 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.237040414 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.235344018 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.236974395 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.235749943 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.236123469 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.236816965 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.236087703 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.236855983 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236300526 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.237274002 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.237767142 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236668282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236893261 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.237195426 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.236655255 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237049342 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235886979 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237642765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.237269226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.237596762 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237806597 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236694298 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238629095 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237990424 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236799385 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.238880413 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237964372 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.238433013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.238272841 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.239475394 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23823146 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237276951 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.238100772 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.239512876 seconds)
  done (took 90.164574738 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.239071168 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23863865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.238301637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239054892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237736469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238830925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240300855 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239462079 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23894784 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239002063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239665821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239180326 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238402187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240255823 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238890313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239871103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23880548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238258287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239869849 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23924036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240435989 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240270815 seconds)
  done (took 28.413469237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240629604 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239908776 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240259457 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241096782 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24303745 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241101449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.240255591 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240736815 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239119906 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24104654 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239794432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240477815 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241306618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239998713 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242187723 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242673497 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240572682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242861195 seconds)
  done (took 23.486260619 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.242743389 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242584399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239942815 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240112466 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241145134 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24101289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241222639 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241479714 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240781045 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241184135 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.24105863 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241670352 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.242247424 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242409987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241771348 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242476914 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24192678 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240217006 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242373353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242868778 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242301274 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242683981 seconds)
  done (took 28.46751997 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244016791 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.241935985 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24140202 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242805671 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2424473 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242598851 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242754292 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.243118952 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.244972757 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.243854136 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244257708 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.244947712 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24454748 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242714231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.244570411 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243754742 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243107005 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24461153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244139214 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245236161 seconds)
  done (took 26.026463967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244571997 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244721736 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244015214 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245176591 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245631826 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.244340803 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243552241 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244209843 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243933931 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245572675 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244860699 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243901471 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244923949 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245472282 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24529981 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246296516 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244353756 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246216926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246128074 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244568309 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245740204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24606238 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246184784 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243851005 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244260508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245968499 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245894431 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246105628 seconds)
  done (took 36.016093061 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246382778 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246233075 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245133117 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244529024 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246915947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.245671939 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.247380527 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.24527677 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246353856 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247372735 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.246463986 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.246226986 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245588348 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245541536 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246473142 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.247505646 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247010496 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245922798 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247218503 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247312158 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.247930966 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246667687 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.246548135 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247352488 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246081004 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247092433 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247913716 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248643337 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247225027 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247585283 seconds)
  done (took 38.555672872 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295513969 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296946609 seconds)
  done (took 3.750065668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248891577 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247588597 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.248304437 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247820655 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247962037 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24823811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248663069 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248953451 seconds)
  done (took 11.144850472 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24420451 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248380558 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.2487144 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.247129894 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246194624 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243794921 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251299603 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270872675 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244856308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245830704 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.249450874 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250241723 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245326061 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243615465 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.243767288 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244747685 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.249687515 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.248137511 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.246808374 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251145189 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247381237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248360476 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246584175 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2485622 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246432203 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254414268 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270315513 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249260878 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243634585 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24899749 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.242916558 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24874741 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.248683494 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.247815465 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250248059 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248417668 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253982168 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267246191 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252621787 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270147667 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252054335 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250412707 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246379139 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247729393 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246624833 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.249895437 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252232994 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251099804 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.246487244 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249152714 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.257874884 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24850834 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251966491 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252874613 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25007765 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255289847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.272867856 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251258014 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255957993 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256483725 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279651587 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274827145 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248623186 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250990262 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258980147 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266314844 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252971826 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275724246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252277858 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252373471 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255905223 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281130601 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275562503 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251888665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253161628 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.253381768 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248406946 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251997902 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255135072 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272448204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252001236 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253571723 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257793941 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265473351 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249027929 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252190018 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252676005 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.252580905 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249197188 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258404467 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27430476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252436295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247525452 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249518175 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.2490772 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.25486506 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247610413 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250423386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.253995848 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254631624 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253154485 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25344254 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.256634343 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253810557 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253410702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258208758 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276342173 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25058159 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257012715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255418994 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254052306 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252595442 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.255145115 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.255063412 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25312743 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257586875 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253514941 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251931612 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253137503 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256899876 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260272942 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269655208 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.257005102 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255863745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25697501 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262346845 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256881049 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255030206 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25818656 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256774036 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256094826 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252687068 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257844393 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251264744 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254285892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252390679 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255738033 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257446049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255034292 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253519771 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254116263 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252163992 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253985163 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254972112 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256163642 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.254340356 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258596008 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272903944 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253059973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252945703 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255412744 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258702456 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253977832 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.257134707 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25356407 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256879996 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253997526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.25528024 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257950543 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.257889136 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258718379 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254161567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258738412 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.257896241 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258277115 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255446149 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.257549966 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259235792 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257862218 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253605351 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.258763027 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253350965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257407879 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26440233 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260752055 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25672583 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257871219 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25746959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258538717 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256724621 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258090086 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259923752 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257059983 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262488365 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.279791409 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257981086 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.259326497 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254805548 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254461146 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257939706 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259415752 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.266738723 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266009623 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283104868 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256485073 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.262125171 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256331465 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263649494 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258944564 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259608485 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26124121 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260216523 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25663185 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260125939 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258615976 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259223968 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255406036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.261268021 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.262655574 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2588692 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26234749 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257249053 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257119491 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260214781 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261483847 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259764773 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256966391 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.261433776 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255507463 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25623896 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.262795764 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260302681 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265564044 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262612951 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258905694 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259936657 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257264395 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258110388 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.262337274 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259704219 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257910178 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263635517 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280427721 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257495686 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264943451 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.279611945 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256034856 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260598991 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.264217555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.262603958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260622775 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269782961 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.262872848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.262173641 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.262043945 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259694826 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263258138 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.265335112 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285784882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259323168 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.265498906 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260576651 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.264309048 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26082657 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259475497 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260766301 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260892855 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263504671 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264034177 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259320321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262995699 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263984088 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.263854724 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26283969 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268829523 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266279809 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259371222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262026448 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262313276 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267511614 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260753165 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.262912435 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261148632 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272908105 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.291840831 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266712931 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285302903 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.264800604 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266528852 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284146307 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264787681 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261846624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261107292 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268703592 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260715406 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.265478284 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260643516 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265838616 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264316726 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264122246 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.270142363 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.267337166 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.2613823 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264730223 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26520471 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267804981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262124457 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266937481 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264571929 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264634869 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262089946 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261849877 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799160082 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286537716 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26329941 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.26377066 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263583701 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261620923 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264546744 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266857068 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26678056 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271019121 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267156829 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.269253191 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264958757 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271756066 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267645834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267863647 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273186826 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268377993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263186298 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264848893 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267059982 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272289606 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.290562774 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26668953 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271243854 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26826405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.268659725 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270228232 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267849827 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272035377 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.267424123 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273574518 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286202033 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268145216 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266187774 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269085456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26897092 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269482222 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265043206 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267339875 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268665083 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265569126 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264498985 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265738271 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269594808 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.269596705 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270952908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270628237 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271741213 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271067781 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.290425442 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272537405 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.271275422 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.272983576 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291722396 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273404327 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.292928396 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.268861277 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26907739 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27256347 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268766779 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267365855 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268932612 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.270355295 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26847235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275614419 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26963399 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269628955 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266225411 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.270757149 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266514058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276328287 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290732817 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269737363 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27616511 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272876332 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268156774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273990718 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271480981 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267184302 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270480975 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277144476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279033915 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269197014 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27051507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268558595 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270659821 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273862716 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274005961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.271414983 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273754988 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26940925 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.27306348 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271296322 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.275000036 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269377634 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269870933 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269904762 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279227811 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.296261951 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270649795 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272987396 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27713558 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269268387 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.2709728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272575019 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269651788 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274532645 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271413219 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276652076 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275352434 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272394051 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269502236 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273290465 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269981022 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271689202 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274562151 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274307411 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272948967 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270906378 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273385343 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272565252 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270194545 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.275666009 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27155607 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276007313 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273614879 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276272921 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272173364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.274392339 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.275804494 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275060912 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269735454 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271573961 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279136661 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29908492 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279305459 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.278899787 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278417354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272524774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275692395 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278418382 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271596968 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271737727 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275813746 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273166513 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274590199 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275773291 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275474357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279175209 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294752301 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271826896 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281569532 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294003478 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274654547 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274772282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276129565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273033261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.277736905 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276778969 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273453791 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279918213 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297088022 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278237299 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273876815 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273299728 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27532415 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280423197 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280516896 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274563218 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.27765861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274346854 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275719347 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279433571 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278285852 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273031934 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272566058 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277344805 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.280677396 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.280065691 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275302913 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273728121 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275363607 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277483372 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280485001 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279835872 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278368238 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273963333 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277563876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.276659729 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276683845 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.27411333 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.276178983 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281623315 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277746979 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279339943 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284697859 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287219186 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.280622124 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275897557 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275854434 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278428631 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278687884 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.279335769 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277122529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277579908 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.280671549 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27925274 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.281402969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280364315 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292560321 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.303699541 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276081346 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276273709 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278424379 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280982235 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280598308 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281013616 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.277571199 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.277840549 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284815485 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28086361 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282776891 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298093586 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279175862 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285549154 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281458491 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283472958 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280495488 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280254815 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.282756871 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282611814 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29167725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282130985 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286923304 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302688747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.301914432 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279326524 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.282996032 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277763791 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282930613 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.280466929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282306903 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.284177507 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283245878 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281260943 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281534776 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283244536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27974966 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.285954384 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.284731902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279328282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28138198 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.284892814 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.2816072 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284223637 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282692897 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.281975926 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283283373 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280911299 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2915078 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.310174606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284586982 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.282488859 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.284557042 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282017582 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282708251 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288592781 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288733431 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282468583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283835257 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281278778 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283510411 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28635719 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279045895 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279368016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279784267 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.284104144 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292641527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311702793 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285221049 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280940902 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284322413 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.286826961 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281739145 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285095717 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284420843 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282463433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.282543798 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288966425 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.287434521 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286425078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.283803063 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29266049 seconds)
  done (took 757.162228928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286252312 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286904671 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286389839 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287479227 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286972408 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288288237 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286765179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287069533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286497257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2861766 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287661451 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285513354 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286370878 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28865005 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28698312 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287605972 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286910142 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28864423 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287119498 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286179685 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287742361 seconds)
  done (took 28.221120136 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.28825959 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.287398429 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288489595 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287646489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287737236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28884532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287804525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289192613 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287962958 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289984607 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2894842 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287169184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288003703 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.288223281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288558901 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287798453 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289035573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28785454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289023181 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288181578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288760589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.289852134 seconds)
  done (took 29.537845801 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289386099 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288883626 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284388939 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.289955979 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.290048635 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.289408988 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.28950238 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.289810659 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290338352 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.285752238 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.285740368 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.28837141 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.291640115 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.296193996 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.287639432 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.29016284 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.288889213 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.29057143 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290993704 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.291184691 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290813308 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.313218717 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.289713335 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.284965787 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288587732 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290953458 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.291323951 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289441761 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.288405534 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.292223739 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.291539232 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287812553 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287562981 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.287781578 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.287198558 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295269803 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290848785 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.290168287 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.291669853 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296414333 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.309910689 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.291936815 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.292923712 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.315362778 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.291273886 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.290976791 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296920659 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.293113027 seconds)
  done (took 63.193914614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.900490748 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.92764107 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.927997117 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.926745418 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.925184693 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.923591275 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.92249816 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.935715649 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.931597695 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.927615606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.928573474 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.940707983 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.928871025 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.9304939 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.92901387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.932746825 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.932450891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.935590723 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.933162726 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.945135602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.940194792 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.93177185 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.933120184 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.937174928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.943865322 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.935698996 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.935631095 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.931584173 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.934454616 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.938705272 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.932230694 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.937565396 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.951259956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.934913383 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.93668956 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.941033738 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.94352917 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.940391825 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.938059169 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.935222043 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.933367809 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.933220485 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.930602375 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.934490794 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.944127385 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.935627407 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.939276375 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.936568758 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.933134071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.948770625 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.941225727 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.93650287 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.935234885 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.939605806 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.938030805 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.945841036 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.939086229 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.943210427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.934278468 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.940447052 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.936171299 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.94443578 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.938672887 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.935433207 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.933478252 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.93875453 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.939710355 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.937858567 seconds)
  done (took 132.806143601 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296092575 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297507517 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296036592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297269139 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29615558 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297139748 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295940172 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.297174068 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295543221 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29592475 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297809328 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298878193 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296499071 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299275068 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297215229 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297721568 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295944141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297222669 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296811047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297540915 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297149914 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29823195 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298298934 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297860159 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299482066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298190298 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297623634 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299492275 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298554302 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298493256 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29900009 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297317516 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299124502 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298967552 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299722596 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.299668501 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298640057 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298971291 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298913623 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.300193826 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298757024 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299024524 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299107734 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.300062598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298707707 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298703026 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298598032 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.299696919 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300528624 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29836305 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.300576522 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29884367 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300218495 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299244143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300467969 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.302396658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298305621 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300311466 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300698822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299542877 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298599234 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301455201 seconds)
  done (took 81.71122258 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301615612 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301490751 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.302062426 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.300856138 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300885838 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302406662 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301600794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300902113 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301851125 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.302134677 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302013806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301701282 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302585235 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301335784 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302139432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304536249 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302199477 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303916893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302811756 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302650415 seconds)
  done (took 27.246708172 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.301777087 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302674544 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303384641 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303237233 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30329473 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302953335 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302413741 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302742035 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301769863 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303171245 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303496254 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302828179 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30281887 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302901769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302318497 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304706996 seconds)
  done (took 22.052757945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303690892 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.304782972 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301570959 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.303648804 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.303159418 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303237478 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304254975 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.302798796 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304659316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30426345 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304049344 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.302837008 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304022118 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302889284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304189307 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303116141 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303658445 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303989391 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304210201 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303101479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304389911 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304839716 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.305512928 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.304364533 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304916621 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.30397211 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.304809433 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304935586 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.304341471 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.305825753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305118916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305057402 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305205101 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304334256 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.302989065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305198397 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.30676877 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.304653966 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305233588 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.304928766 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.305673385 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.305669379 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.304541184 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.306766911 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.305349349 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306643095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306417611 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306181429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305453983 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30737392 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306477458 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.303740825 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307231775 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307920638 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.306709073 seconds)
  done (took 72.969963579 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307410642 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307296937 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30740045 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306536381 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30670789 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307620485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306807901 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310282701 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308765343 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308517862 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308956466 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310666701 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308972332 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30994539 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309477709 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309456163 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309419393 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307660516 seconds)
  done (took 24.762060121 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308447815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309732488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.3086952 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309484818 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310133625 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308651031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310146254 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309222142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308670387 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310478482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309609505 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311399739 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309159644 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.310180772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311008874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308621052 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308688319 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311214102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310418242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30922937 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310564047 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311549613 seconds)
  done (took 30.027178048 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.305167454 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.305245581 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.304906998 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.32108256 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.32299796 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.304968517 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.304076029 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.305818258 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.329019282 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.378277896 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.372112564 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.323362295 seconds)
  done (took 17.090283224 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311690745 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31230657 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310817985 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311537613 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311759716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312839195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311249954 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313030223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311720848 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313392947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312800076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310025022 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313484263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313699207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312149798 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315149894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312473324 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312785631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313085401 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312181823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312456654 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313774944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313153518 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310971204 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312930358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313877806 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312936658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313740059 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314525875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312814371 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314890635 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312968827 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312624861 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31436842 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313093361 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313617606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314000225 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314246728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314327389 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314861251 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312384237 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313714602 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314094517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313063689 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314035188 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313201571 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314559774 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314006816 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314268595 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315391584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313654201 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315046728 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314398545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315356645 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314348961 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313777585 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315347182 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313827039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315512335 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315515056 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315637355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316032239 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315646951 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313944214 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314543358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316600386 seconds)
  done (took 87.914667812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316795745 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315157031 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315402901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315249924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31529824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316811278 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31725893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316289118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31579912 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314344834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315068427 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315589729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315761246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316591127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316042553 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316510944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316782142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31699215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31680578 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3162424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317821424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317636738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316452877 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315624772 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316094822 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3174493 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316546112 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317143433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317706925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319998914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318742277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316562923 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317464773 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316766209 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317523475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31913523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316829183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318487087 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316704198 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317031167 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31662204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316358559 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31718443 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317899821 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317954402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318461573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318204937 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318625697 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318690144 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318959522 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317727907 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319403511 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318467957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317128595 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318724017 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317514685 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318903611 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318718499 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319655003 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319276715 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320197334 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318477584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32125343 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319682373 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319286818 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319942133 seconds)
  done (took 88.174772944 seconds)
done (took 1818.881345569 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.480069408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437732525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313066012 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.328398223 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312675028 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.316253113 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.338073544 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313668767 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.314636935 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315163195 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.317087527 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.516400399 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.329002732 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.315625812 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316461286 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415219905 seconds)
  done (took 26.902292935 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.348550054 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.322060632 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.451253182 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34108551 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.348580897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.537042196 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386293205 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322691315 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.521724282 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351022474 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.328218283 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.346756414 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32082542 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.323543039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.342398438 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.53940053 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.604531786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.329486113 seconds)
  done (took 29.287581401 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.846349703 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.35201857 seconds)
  done (took 5.42279012 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.344846093 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322126725 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322470946 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319320704 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.31173132 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.312740617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319844768 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.312590928 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.317904198 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.463179617 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322880051 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.335109332 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342473203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322082167 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324415656 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.36597274 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.475563029 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325828548 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32322263 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325174002 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417826196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369430688 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327120134 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.464497031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.315018569 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.345633513 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328854856 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.47528345 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327405992 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319244034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322018559 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323557647 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321523794 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.866123181 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.333444657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330893504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353448954 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.325202791 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486370998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323834879 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328058064 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.314617525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.858397354 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465895515 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.454436663 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.33534722 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.324256251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326347841 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394047926 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.325195292 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323681267 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.387041011 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.168266215 seconds)
  done (took 85.051660952 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.316252662 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.315137714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498647335 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.342044135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316977134 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31531192 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.318325041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.648970592 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.335230561 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317666824 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.667606035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939704987 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341472856 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.37265205 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.191146101 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.390946126 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317921583 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.33511153 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316782139 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.324121691 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90438155 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31703871 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.337059803 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.39476037 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.360037708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880904679 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.330526319 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.320506147 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318318402 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.317681949 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896375198 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.334754243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.3830116 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.3191911 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.610535174 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.743592268 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704484382 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.322977882 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368052126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.318827146 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.330190832 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862892579 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723738136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317829355 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319056621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.872590255 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319332029 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.326456448 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.323209897 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573225351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318719134 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.319907677 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.351798037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318121384 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.319223353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.404495821 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.319349734 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.881472436 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320633017 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319022798 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360397072 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319941461 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321354367 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320654036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338285303 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741379713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.515131757 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323914664 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.746085601 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906988751 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343968003 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956927875 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.343982827 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.340244358 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.516170156 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325049156 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319132654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894591726 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.339058782 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32123226 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.707503641 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322166076 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.671891705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348319738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321190757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919658117 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.322378814 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.333197983 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321300754 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.321910084 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321498485 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342805717 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.640120636 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.360234937 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.321299452 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.320817545 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.323037468 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330826842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320557488 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.328688393 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948814978 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.347591707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321343513 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323390591 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32213035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.321095209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.321616991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323296784 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596074537 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322469863 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.342485195 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323091535 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32243482 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.329330569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402140582 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.326846738 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.678996357 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323572125 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323451464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342760429 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334175739 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366197189 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323007999 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.331602304 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.21554372 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.587242382 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.346645211 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.323818046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32500344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344526866 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323945266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325374904 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.394005191 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.325992172 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159642891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.352915179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.355816647 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.323452907 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.334636041 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323660129 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.347425281 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324418272 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629132837 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619890901 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543314465 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.341830852 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.336322056 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.135095043 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.380059165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507545224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348616628 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324317217 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574917518 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540946679 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.3258285 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.32475085 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.326626627 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590557904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.325338647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643194006 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926048114 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.346125358 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327472799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.174123132 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.073400454 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.327281337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.328550947 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.676126302 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.346449145 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.325426672 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.327238487 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327554674 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.346326163 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.351905138 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331913913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.326948504 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.326876522 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.339999333 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5199171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.348705771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337067831 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884413134 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348318013 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328188462 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337735003 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328128644 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329559694 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.404856927 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.328381305 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.373449643 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.331178366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330478846 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.900654241 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.327839178 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.328991104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521633408 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081323259 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.348740822 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.331290947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347407458 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.244781754 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908812441 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.364581371 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.685658093 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.333832488 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.370027909 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329009495 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.365710909 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.911822299 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330683655 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.349031782 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042538485 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.348187515 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.73831681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.328430601 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329806801 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995738435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.34996945 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.335142585 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.330358774 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.345944428 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635492821 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.330968922 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.348863433 seconds)
  done (took 498.257659336 seconds)
done (took 646.142447714 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329594883 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.331469704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.328297875 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.336996895 seconds)
  done (took 10.568594644 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345651369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.337075084 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342873076 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336646954 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343111933 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337956864 seconds)
  done (took 9.286578785 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331191461 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33342964 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.337401022 seconds)
  done (took 8.24372504 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.573178201 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.367325227 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709702117 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365730656 seconds)
  done (took 9.25767901 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342920269 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.342041038 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.342917252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.3440911 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.346038497 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.346961005 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344130388 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.343860812 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.347312338 seconds)
  done (took 13.340443246 seconds)
done (took 51.937224576 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.394055444 seconds)
    (2/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.122650077 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.440037251 seconds)
    (4/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.383697765 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.441840968 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.396543036 seconds)
    (7/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.326633496 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365198107 seconds)
    (9/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.554120251 seconds)
    (10/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.567423068 seconds)
    (11/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.381245734 seconds)
    (12/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122758731 seconds)
    (13/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.045672957 seconds)
    (14/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.400340142 seconds)
    (15/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.471439626 seconds)
    (16/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.457494545 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.437545077 seconds)
    (18/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.368030571 seconds)
    (19/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.393918517 seconds)
    (20/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.114271661 seconds)
    (21/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.43443851 seconds)
    (22/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.473753646 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.372732403 seconds)
    (24/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.364491538 seconds)
    (25/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.480591434 seconds)
    (26/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.342606352 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.377720364 seconds)
    (28/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.477515156 seconds)
    (29/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.59582524 seconds)
    (30/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.73596989 seconds)
    (31/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.454181352 seconds)
    (32/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367706508 seconds)
    (33/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.492500112 seconds)
    (34/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.354900476 seconds)
    (35/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.465994824 seconds)
    (36/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.401202186 seconds)
    (37/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.440878177 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.435737049 seconds)
    (39/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.373109162 seconds)
    (40/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.56374371 seconds)
    (41/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.574894038 seconds)
    (42/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.348510385 seconds)
    (43/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.468103756 seconds)
    (44/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.435625666 seconds)
    (45/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.474180931 seconds)
    (46/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.008291441 seconds)
    (47/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.45014615 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.431899608 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.370264422 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.147931216 seconds)
    (51/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.100491944 seconds)
    (52/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.383749175 seconds)
    (53/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.343679943 seconds)
    (54/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.504458648 seconds)
    (55/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.548989621 seconds)
    (56/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.415847088 seconds)
    (57/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.407594987 seconds)
    (58/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.152646787 seconds)
    (59/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.466341256 seconds)
    (60/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.094688313 seconds)
    (61/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.358113085 seconds)
    (62/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.032244438 seconds)
    (63/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.441868579 seconds)
    (64/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.542349251 seconds)
    (65/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.307574628 seconds)
    (66/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.392320733 seconds)
    (67/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.400371344 seconds)
    (68/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.542833024 seconds)
    (69/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.380584209 seconds)
    (70/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.514352828 seconds)
    (71/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417874257 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.432514296 seconds)
    (73/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.374860235 seconds)
    (74/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.360599125 seconds)
    (75/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.38293939 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.365171714 seconds)
    (77/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.429168394 seconds)
    (78/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.358464391 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.601617602 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.484710986 seconds)
    (81/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.506530271 seconds)
    (82/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.030525627 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.458901843 seconds)
    (84/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.998853067 seconds)
    (85/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.372356564 seconds)
    (86/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374623324 seconds)
    (87/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.516809655 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.439057502 seconds)
    (89/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.707411518 seconds)
    (90/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.647985191 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.531423775 seconds)
    (92/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.359059167 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.484288269 seconds)
    (94/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.330428322 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.338648045 seconds)
    (96/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.486145221 seconds)
    (97/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.442067404 seconds)
    (98/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.30661576 seconds)
    (99/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.379919909 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.42989119 seconds)
    (101/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.381617548 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.41437501 seconds)
    (103/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.370184189 seconds)
    (104/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.389815729 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.455777674 seconds)
    (106/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.41676498 seconds)
    (107/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.356736335 seconds)
    (108/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.684319423 seconds)
    (109/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.401050463 seconds)
    (110/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.210964201 seconds)
    (111/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.49564019 seconds)
    (112/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.393545164 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.335980192 seconds)
    (114/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.513276507 seconds)
    (115/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.509843199 seconds)
    (116/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.491689675 seconds)
    (117/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.375899302 seconds)
    (118/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.405384245 seconds)
    (119/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.755234205 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.484948151 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.37299929 seconds)
    (122/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.474149316 seconds)
    (123/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.496316228 seconds)
    (124/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.401816176 seconds)
    (125/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.384942856 seconds)
    (126/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.454649663 seconds)
    (127/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.397190891 seconds)
    (128/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.390095461 seconds)
    (129/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.071052241 seconds)
    (130/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.34606937 seconds)
    (131/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.338110476 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.467130516 seconds)
    (133/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.584043059 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.389755634 seconds)
    (135/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.156047379 seconds)
    (136/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.47125391 seconds)
    (137/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.364216316 seconds)
    (138/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.525358815 seconds)
    (139/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.346988736 seconds)
    (140/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385897509 seconds)
    (141/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.474492971 seconds)
    (142/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.400450868 seconds)
    (143/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.052489685 seconds)
    (144/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.618459822 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.365989364 seconds)
    (146/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.448475202 seconds)
    (147/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.436602397 seconds)
    (148/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.502499285 seconds)
    (149/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.591246752 seconds)
    (150/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.33624213 seconds)
    (151/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.571701554 seconds)
    (152/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.542782013 seconds)
    (153/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.336614716 seconds)
    (154/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.397996843 seconds)
    (155/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376381679 seconds)
    (156/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.339919336 seconds)
    (157/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.518294668 seconds)
    (158/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.457994736 seconds)
    (159/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.484927584 seconds)
    (160/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.111549918 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.477611361 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.418932156 seconds)
    (163/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.340233841 seconds)
    (164/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.51812722 seconds)
    (165/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.336548267 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.383068118 seconds)
    (167/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.378856105 seconds)
    (168/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.590811605 seconds)
    (169/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.344390332 seconds)
    (170/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.457114319 seconds)
    (171/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.40940245 seconds)
    (172/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.459900844 seconds)
    (173/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.422822557 seconds)
    (174/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.27700054 seconds)
    (175/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.203983747 seconds)
    (176/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.547032438 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.576763656 seconds)
    (178/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.336429963 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.500227214 seconds)
    (180/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.401492285 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.501376255 seconds)
    (182/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.445004251 seconds)
    (183/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.481425836 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.433320922 seconds)
    (185/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.440822097 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.485897564 seconds)
    (187/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.572024962 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.3874808 seconds)
    (189/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.363909702 seconds)
    (190/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.274086641 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.425194058 seconds)
    (192/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.005078239 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.466665185 seconds)
    (194/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.336318341 seconds)
    (195/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.370603675 seconds)
    (196/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.390634718 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.40175096 seconds)
    (198/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.340167461 seconds)
    (199/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.16109413 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.477635523 seconds)
    (201/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.429240987 seconds)
    (202/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377240187 seconds)
    (203/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.336981936 seconds)
    (204/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.572999807 seconds)
    (205/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.40527681 seconds)
    (206/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.409239884 seconds)
    (207/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.578751273 seconds)
    (208/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.141425639 seconds)
    (209/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.492005177 seconds)
    (210/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.542292635 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.521047015 seconds)
    (212/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.346409839 seconds)
    (213/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.580974493 seconds)
    (214/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.523981997 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.588046336 seconds)
    (216/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.532834103 seconds)
    (217/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.462806601 seconds)
    (218/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.531628102 seconds)
    (219/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.600079448 seconds)
    (220/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.526933025 seconds)
    (221/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006336699 seconds)
    (222/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.347811232 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.5899225 seconds)
    (224/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.386444113 seconds)
  done (took 376.8477445 seconds)
done (took 378.09042933 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401970524 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.534505302 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353813604 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.355618537 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396732965 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360309811 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395367861 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.363795868 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.366068765 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.364265119 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.361150542 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.365775906 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366567411 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.395699823 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.468389044 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363874247 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355382028 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.360373308 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.402946079 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.421053641 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396844613 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399125155 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374575214 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.355710269 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40318678 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402339797 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.3622744 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.356275853 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363099878 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40197739 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.346803154 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.362037915 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.411708235 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.410553506 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39922583 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.362657489 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398705199 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537563189 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.398353628 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.396191362 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367943634 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.411594808 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368029691 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366278724 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.411158934 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.375616576 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404770467 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.480423965 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347316741 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.354515633 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404056808 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.422656739 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.367547091 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.354517543 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.36188106 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.481484056 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363766459 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405313163 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365711022 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401968736 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.470605959 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405471447 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.423523041 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405570283 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366123688 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371270507 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36320813 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.42456027 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364767163 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403453586 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402986761 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.370322203 seconds)
done (took 109.441348044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.489022143 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.357580527 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.505621361 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.364384846 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.532524065 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.516403423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363502144 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.363657298 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.361887128 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.188403516 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.363371094 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364654024 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.357006932 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363670092 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.532300208 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.366323521 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364972225 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.074194592 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36449438 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.503624139 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.356994148 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365386446 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36571857 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.182439906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.357632461 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.353697325 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.502939118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365517409 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.077328599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.355483752 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.357882918 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.075743322 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.506049933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385825985 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.375126481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.374707573 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.537069188 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.389910921 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.490941496 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.491495249 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.507517583 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402470071 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.358138961 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.359499265 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369121952 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.365987297 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367290956 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394982202 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.361086518 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367837455 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.077597343 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376338952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36757182 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.366084371 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36644922 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39452843 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.367864511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.367067348 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.507936653 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366340825 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.492966417 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.187233047 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.193428018 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.367726306 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.359885292 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.368381773 seconds)
  done (took 110.6100922 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429436273 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437667672 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.483616305 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384975575 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413492592 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.490485584 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383705104 seconds)
  done (took 11.287392384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370130108 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368753528 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41157886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413158574 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36805783 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.5221158 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370236589 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375850356 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.369492627 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417041382 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.368136333 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368586929 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376854234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.361573823 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411232579 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375042881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479026479 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366121649 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36929389 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517928793 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370365508 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.377722659 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.416580582 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376830251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369647567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371693797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.130146964 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369574708 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370485055 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.370537615 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370014287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.419545172 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37216336 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.365482429 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370686399 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480560589 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.370089154 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37280931 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.370468923 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.36794718 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37243579 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370797855 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371445385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371284983 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369653248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390368861 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371591963 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369759804 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.371118163 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371353116 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415271427 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.371481938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371917206 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372041155 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421709546 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381890773 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371250269 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373325242 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371746113 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371953273 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518214688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415508678 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.371925083 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415051966 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374026062 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372286217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373645493 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.371975457 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459631426 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373205009 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414965404 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.372890892 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.548720938 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.39378388 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37507654 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.371059033 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371257641 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370397406 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.365163827 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375548025 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374609293 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370909388 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.374919096 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373408367 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373081644 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.525127481 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477767721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372722911 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381820713 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375746817 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374504081 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.423255703 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37394251 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37436845 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420155183 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.484622852 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42331361 seconds)
  done (took 141.065340274 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382963486 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38342177 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.373763924 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.398244681 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.369793454 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370228577 seconds)
  done (took 9.548221941 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372914963 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377783964 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.375290162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.375412447 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.374903025 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375100597 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.374519453 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372806888 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376401284 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3763082 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.373472982 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37539877 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375560852 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375144951 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.375800777 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376279906 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.375414277 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376332544 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.377309316 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375356021 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.370697644 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375404376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377023492 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376013141 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.37976824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.377777845 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394827815 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376662143 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377626905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.380674222 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.399362183 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376825819 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374823992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.376945866 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381496776 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376980326 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382207408 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.377745005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377874601 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376403928 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378229074 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376304683 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.377799319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.378007867 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375150381 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378845524 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.381490583 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.395982333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377045223 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.378235685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.37954482 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.377930942 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.379608038 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.379265316 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377198248 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400233226 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384013504 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380540729 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377875311 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375958675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384171662 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378007063 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3766065 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382732206 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381163173 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37970933 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377203714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381179394 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378208954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380373064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380468372 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379946051 seconds)
  done (took 101.539328515 seconds)
done (took 375.309467401 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.311149974 seconds)
  done (took 4.587247157 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.628451878 seconds)
  done (took 3.905715641 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.74787178 seconds)
  done (took 26.031484728 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.413707482 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.450891364 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.371935777 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.377403704 seconds)
  done (took 10.888416695 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.766594048 seconds)
  done (took 4.040469214 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375247927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.374723409 seconds)
  done (took 6.027556949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.68717349 seconds)
  done (took 3.963045746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.946673044 seconds)
  done (took 4.230236246 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.390456193 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.388041428 seconds)
  done (took 6.062510992 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.362591826 seconds)
  done (took 3.638542985 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.443689907 seconds)
  done (took 40.72060504 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.387186267 seconds)
  done (took 3.666720352 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.404497494 seconds)
  done (took 3.680805053 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.754555927 seconds)
  done (took 7.031054546 seconds)
done (took 129.750114726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.369994067 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.377778947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.376809422 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.375870862 seconds)
  done (took 10.775920776 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.433322365 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.434334509 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.434281056 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.434114252 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432640537 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.432490014 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.407216152 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408400847 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.433232458 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.432999252 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.435125847 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.434256461 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.433612469 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407899671 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43324756 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.433590108 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.432838863 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.43410598 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407946346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43415697 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382462807 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.434542884 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432904167 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383892746 seconds)
  done (took 35.482407214 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89508204 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449752418 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532455692 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431895045 seconds)
  done (took 7.586190043 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.461890932 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459798081 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.475080196 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.512297413 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.525554339 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.474398849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.409333238 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.404328043 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390936946 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.462630624 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.513053231 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455189146 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.538473141 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.383263646 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.589265132 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383364637 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383738667 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.460803578 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.51130742 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.525619391 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382269547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.460333111 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.461155048 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452419281 seconds)
  done (took 36.356692225 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394083014 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.40068835 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386191362 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.40026082 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.384876727 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38620578 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388232344 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.392459309 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.386558806 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.385126336 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.388346597 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399837447 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.390662898 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.385646159 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394247578 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387972639 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.392490327 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.391405255 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.38808572 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.392770575 seconds)
  done (took 29.096680481 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.376036777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.374652336 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725265885 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648713291 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.375513442 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.38138862 seconds)
  done (took 14.16219483 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467202488 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.645054399 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38210123 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.806110125 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.888138472 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383567107 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38087585 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.679306876 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.062269755 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.048176612 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.457165576 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46792368 seconds)
  done (took 20.949398958 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.377674348 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.377607084 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.394706716 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396688728 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.44668468 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407029591 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390091714 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.381423262 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.446307923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.472316892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40642273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.448934916 seconds)
  done (took 22.229438627 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477274575 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383635842 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382360562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390583851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383364835 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22963506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408227939 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150467324 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.41166988 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659164304 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392761234 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479323003 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640796394 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388439215 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390098183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368550422 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613562271 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936897503 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386244796 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383374593 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416959662 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393438398 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388380516 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662084196 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41051281 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383917956 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647687422 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385602212 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71936526 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401094483 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395346578 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386389531 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660366949 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116147238 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510234118 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639708008 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428378882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385711198 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.380912511 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.385542582 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387522176 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407513999 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395329812 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386032111 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385047489 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394948164 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166506325 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416263754 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.385345307 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387116914 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694008457 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483738874 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390682089 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385122088 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418566435 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386014919 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.391671904 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52751095 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989460485 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389049284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399423816 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.392099034 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3828854 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386804267 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075082768 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.41384328 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.391163934 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391344478 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385317925 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386940298 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405750812 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386485227 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.413062585 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387141636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272734511 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425862498 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389111205 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000935989 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394390461 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.393791398 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619290357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38822864 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388416892 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.386270419 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388031034 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179005237 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396115557 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.374280666 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434065523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182603012 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668143923 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438213286 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419768998 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612021422 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.374768329 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388759247 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.396358101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390527243 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409663638 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162038178 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411325557 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394398591 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646489069 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599139887 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399348947 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.381387582 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926652364 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418890836 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410733588 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401053878 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651989537 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.099099048 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430482014 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391076383 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405182147 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388993272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21322734 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399091275 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.497825134 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39097733 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695697547 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.271757332 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390699266 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458780027 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3944417 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390308607 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390957164 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392944175 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390655002 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.639180847 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431445375 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406758235 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.390722415 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391751244 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.399946528 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398362079 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.392930775 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616241227 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401330192 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674865948 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391965334 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393311315 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392705651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.615428444 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.392952278 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.753446825 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65729001 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406438097 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412095888 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409423317 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411388923 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496725996 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414652285 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.407906105 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654403288 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398221344 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.399440609 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394962512 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395402749 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396624698 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40190735 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415142292 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088467045 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401004254 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284505306 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410256716 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460277945 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400932452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651266007 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.421068372 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389006503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399960458 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.405516465 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618789844 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404223667 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.396097811 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471927446 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.929949544 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100761953 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43641603 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.394662069 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.394024946 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.394123704 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393510484 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394523904 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395373072 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651916316 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437855929 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391489591 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088208151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422529049 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397384998 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403100693 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407664259 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403044683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395213239 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396268205 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397899975 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413186526 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410691743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539700136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412035828 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396973699 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915361706 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403178974 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39594869 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396396962 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428862041 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398302815 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282149062 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681954813 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399773147 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709935775 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402231158 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414136191 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.396832283 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40668565 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414320459 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.412394584 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426279351 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407985687 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402240153 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398218926 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972091053 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284084195 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033158323 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425105455 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.413380396 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401937048 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178359062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419788796 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397097782 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670710763 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201427775 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421964209 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940630607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.420950088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299702679 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715402374 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636843264 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399541571 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.412633723 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71696579 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61584615 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432888421 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413927211 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403896098 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.385703474 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027534494 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421239726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479746529 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184347054 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426695692 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401464771 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.431973256 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398525111 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885752513 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426624969 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399429174 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414859376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414819176 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288107078 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42903119 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400473935 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094758861 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429310439 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945696535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423428856 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661426999 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.438686306 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.404522979 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.401207774 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.434082701 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.658301726 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717111236 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406725186 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403554736 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040556519 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.352468641 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408876489 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400831454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229680402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413560262 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748713073 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.420961879 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.408530302 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402875465 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401751937 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401398438 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.401803945 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406077232 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384374921 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962838111 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.401312972 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433375071 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41582149 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407207657 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658213261 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417697363 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095843325 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658988835 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407120947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42631723 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407767983 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401564609 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.390779095 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403801263 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402819455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451227456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624660898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407532128 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.389800387 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434082883 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613580524 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405033149 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407265962 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694655422 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.431259003 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.42076824 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283573857 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457572717 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41467717 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406514694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399778514 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445544657 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495526255 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664536472 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.441666052 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413308558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893160758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430975884 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429794575 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420460989 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501096695 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421016867 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.41068144 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179714299 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110862038 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336329214 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108329145 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748550945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41067871 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414445843 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406114574 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568296503 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405857043 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681896666 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406450007 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.407336103 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488390736 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406952374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417047603 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620289254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684123988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40848138 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417007445 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41122249 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.405951817 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416407896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616041563 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967145201 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028247482 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408499513 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416299029 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.195491766 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703346678 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407538635 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406540793 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407030815 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.426414495 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.429715984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415230324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424425495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550736798 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724226392 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137966263 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.439816931 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.437405799 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.927551735 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417587446 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665581981 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408649166 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670761817 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133338999 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272380787 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680802568 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478789792 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672062549 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.436314208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571990263 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.423865002 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414408934 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409942565 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40796243 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.408693146 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417904828 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113645886 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703272734 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.415914956 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.416370214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443315073 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.418868018 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633042227 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212952387 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63445299 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421195646 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419412991 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409075889 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111036382 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.756851865 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415454715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415983524 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700298701 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438685303 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436250959 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.929147339 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.410881744 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029265681 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.384261961 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432139473 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416444587 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25358085 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116246609 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438701223 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978962374 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414670992 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421008155 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692957124 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.419507961 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41799841 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694497434 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.418332514 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417023659 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679832178 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.135592609 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.350382206 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.432708248 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449794681 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.415712457 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413498678 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44224348 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413299592 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413891031 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.913641177 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441209033 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412850987 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424885726 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.419091169 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421761009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.418037697 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413558982 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421951692 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.423463772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.415612631 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419467281 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552048665 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048708211 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437990725 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.093138951 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.742283122 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670802239 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416796548 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404886542 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420480122 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413812239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413753264 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414903127 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430168244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034625195 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.416111548 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.428155328 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419945667 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.416822645 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626604746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430126733 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678228994 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443262415 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43600594 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.400517577 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414379458 seconds)
  done (took 996.518037987 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.470239063 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.472763053 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.430737724 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.438554393 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465909323 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.573708555 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.475535005 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.515574802 seconds)
  done (took 21.154703598 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416085254 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.424113929 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.410671672 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.423489358 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.41857077 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.983022834 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.453829072 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.42427021 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.435888199 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.423197665 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.42390463 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.405868044 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.447025225 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.431003236 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.42676961 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.421954774 seconds)
  done (took 33.691580398 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.808090724 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.735108214 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.139328367 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.44724448 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.467098105 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.414762737 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.866770689 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.432255283 seconds)
  done (took 28.62471552 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422760178 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420779198 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423535805 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424127491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422548135 seconds)
  done (took 8.429178098 seconds)
done (took 1266.333359673 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423992281 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.423577626 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424007851 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.424344702 seconds)
  done (took 7.012187393 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.404259154 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.405763221 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.40634166 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.417930598 seconds)
  done (took 9.94874479 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.286146065 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166874923 seconds)
  done (took 5.768708568 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.938793104 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.953996579 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.937359345 seconds)
  done (took 7.146469982 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.714777554 seconds)
  done (took 3.030589632 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.35238119 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.414172174 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.115515365 seconds)
  done (took 8.198238558 seconds)
done (took 42.418334856 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420431529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.667007105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.57112174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.41369672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597956149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.569464405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.176584496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415429649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419610291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417943086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424946592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.574641339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.152864632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.668329621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.153927986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.762842711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.585363716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432327238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414621032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.441865954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.1757491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414887205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415657589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41502524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.580515659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561633286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415399641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.76404112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414905507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420985316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.564201126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422911038 seconds)
  done (took 84.164770031 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419961611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.415476118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.436939134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.436672526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.43754137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42219141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.449135068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419999536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.433243275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425441847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414707552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.442202397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.435454681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415938989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415758057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.440058657 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416944356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429416787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416076648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418228209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.433507649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415549818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429167088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418093282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417328021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418289282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.438614391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.432655974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417881048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418892376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417475418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.449393412 seconds)
  done (took 78.968425599 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428990272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419194383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418983433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.440466809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.419732619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.438508494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418197467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427885533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419724415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421745451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419815156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.440767372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420915059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430382165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422545096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.425085494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418390309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434475098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419097905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.436980834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.421563135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420589075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431081447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419366574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419215285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.429371043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419971788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419555446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.453167112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422555692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.431599436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420026106 seconds)
  done (took 78.950668174 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.703122452 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433607731 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.433319789 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.426330146 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.432146826 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430601893 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426269013 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.711247197 seconds)
  done (took 15.317913481 seconds)
done (took 258.717277776 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.426814554 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.003787801 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.474419348 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.424136642 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451032972 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.454060632 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.680081181 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.474338279 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.683751071 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.451538051 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.450899395 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.427382581 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.375754054 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587760259 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.342617297 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.427280717 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.46178299 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.42081363 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.081535668 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.740155135 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452121045 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.422764707 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.335987888 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.447972246 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.425815514 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.52156504 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.543170387 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.672181131 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.603136047 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.518563505 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.020807203 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.429647672 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.428433217 seconds)
  done (took 66.984457836 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.428602231 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.559132804 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.432792937 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.433830486 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.56099435 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.457492723 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.429306211 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.433347653 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.434121974 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.433381272 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.433678768 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.434660651 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.434891975 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.484163169 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.564596464 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.452047748 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.429838818 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.556727329 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.430110979 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.426968622 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.483310146 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.435035815 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.436936571 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.482831502 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.433928752 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.438168322 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.559866189 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.458597964 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.435055103 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.553807579 seconds)
  done (took 45.294262358 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435404344 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.116412611 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.284504062 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438150791 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.431842705 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435931478 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.778602829 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.436108738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435352039 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434819357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.002040984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.459557799 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471182069 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.319407954 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.433925863 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.436961504 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437778672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43285674 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.12889338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442885977 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.804608472 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43808474 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.781904687 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443082205 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.459830907 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433517652 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438545281 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342803681 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45941819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005610272 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.433245873 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.783447054 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.265363662 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.322197743 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.411781488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.444833195 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439334492 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011596054 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45664075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433768932 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.781749793 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434006199 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.298762758 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.165230909 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.456311502 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439553946 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.36355448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.028817297 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.751394861 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442260353 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.32769051 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437934101 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.43929003 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434984042 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.731261088 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.437220978 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437277138 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.401595774 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.465161622 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.78401331 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440932957 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437033215 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129801581 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437296097 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.128167174 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438562452 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443383891 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.461056154 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.305195623 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439262649 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.182925237 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.459414393 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.439676303 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.009442353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.143228023 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.43133283 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.438230556 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130530497 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.2958964 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.806947756 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441859682 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.322094613 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.809885071 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441789073 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.444992743 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.444644894 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.443098623 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.517437691 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.784114635 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.11530094 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.178356266 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.425215827 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.81268771 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.445003906 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437412158 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.403220562 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467044571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442325669 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.295779886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.183382826 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460264097 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445198417 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.194263698 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.46229509 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.789099524 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.443868414 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.308366443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439453325 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516713251 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442741678 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446823924 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.466947444 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.788220984 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.444090226 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442995167 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.16898614 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.043171038 seconds)
  done (took 204.949692472 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.446075526 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.432877935 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.4412274 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.434869325 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.435100674 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440385384 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.433650244 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.434435859 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439483313 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.434048938 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.434837945 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442354279 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4402786 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.434281562 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.435258829 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.435063799 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.434107829 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.458033016 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.434669519 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.432940629 seconds)
  done (took 46.088461339 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446747106 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.11484213 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.109545527 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445605146 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.445622076 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441916935 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.508623169 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.468103802 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.446497649 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.801363119 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.654055854 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468087306 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446417344 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.446658891 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.09084494 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437591736 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.802182147 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.115065142 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.446282719 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.117054481 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.438694379 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.446624626 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440450688 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.116243521 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.835244405 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.791313997 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.511156008 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.138392342 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.467395683 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.448118471 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.115984104 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.448501923 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443719279 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.117504923 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.469144895 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46156607 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.447344192 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.512727906 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.534028988 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.826871451 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.21053813 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.819576864 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458558881 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.631021866 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.448527755 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43759963 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.124189353 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.469893026 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.43846086 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450790931 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455675894 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.102608292 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466087445 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.10141506 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.470882769 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450090556 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.121788048 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.101566703 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.117707532 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.653400335 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.466107716 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.792795991 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.449812613 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.128448426 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.472229681 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.44999357 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.450973496 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.657256612 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.144772095 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.795106322 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.807663736 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.808953228 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450720642 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.522170226 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.472666708 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.884138687 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.521366614 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.878798717 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.81007126 seconds)
  done (took 134.096447083 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.760793361 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575601485 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.915791827 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.124543528 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.44603604 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596184266 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.573959918 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.733085685 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.457257977 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523184414 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.207681675 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.576483264 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.303398628 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.548262807 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.585097339 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.605662145 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.921956433 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.441366167 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.2175959 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.185851004 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.449725718 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.589432295 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.022120485 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.676535058 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.44496742 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.077692588 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.46414795 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.206033867 seconds)
  done (took 56.570971991 seconds)
done (took 555.304401639 seconds)
SAVING RESULT...
DONE!
