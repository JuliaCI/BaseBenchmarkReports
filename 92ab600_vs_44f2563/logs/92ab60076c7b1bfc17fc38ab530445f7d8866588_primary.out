cset: moving following pidspec: 6759
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.233921922 seconds)
loading group "string"... done (took 0.462220584 seconds)
loading group "linalg"... done (took 7.551352498 seconds)
loading group "parallel"... done (took 0.172850904 seconds)
loading group "find"... done (took 1.182793497 seconds)
loading group "tuple"... done (took 2.108745993 seconds)
loading group "dates"... done (took 1.332078586 seconds)
loading group "micro"... done (took 0.246761412 seconds)
loading group "io"... done (took 0.690511114 seconds)
loading group "scalar"... done (took 41.890092007 seconds)
loading group "sparse"... done (took 12.995123679 seconds)
loading group "broadcast"... done (took 1.108698011 seconds)
loading group "union"... done (took 13.941839314 seconds)
loading group "simd"... done (took 4.79805185 seconds)
loading group "random"... done (took 9.612380557 seconds)
loading group "problem"... done (took 1.965254261 seconds)
loading group "array"... done (took 22.274517653 seconds)
loading group "misc"... done (took 1.409999459 seconds)
loading group "sort"... done (took 3.557181101 seconds)
loading group "collection"... done (took 19.312984898 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.512114738 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137022565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132275009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146558326 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202796923 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141757679 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157844344 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114557899 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.946237675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186367774 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152469163 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509050242 seconds)
done (took 5.090698862 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224598803 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094328875 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102532888 seconds)
  done (took 0.869568046 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076655123 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145910134 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094595661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07784488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094136579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077034928 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094491152 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07706571 seconds)
  done (took 1.337290366 seconds)
done (took 3.196088473 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730746381 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280648039 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201391322 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459438279 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193171054 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212982564 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6752344 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.368875511 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255836589 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099123401 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142624558 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385823118 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134654525 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680086902 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089368829 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122514067 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177693854 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.486112686 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083833042 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111133981 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117472562 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14111565 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129618731 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094582719 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185949399 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081666938 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192103734 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10729467 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079979034 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287809538 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20013906 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682113594 seconds)
  done (took 10.910048778 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112430399 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134328225 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096935795 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137414774 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135262506 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098303787 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085695356 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095107344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119259076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175147587 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113271582 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135713565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093930717 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08126913 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113552978 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242632891 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118883648 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103759215 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100269394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102173325 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121070467 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112832252 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107325362 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091750192 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166115341 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223261164 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111010523 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125433679 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098847065 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111884404 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14286108 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145383568 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095392502 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080558926 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172096997 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126298622 seconds)
  done (took 5.124440521 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.151973026 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186049404 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119003908 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166365673 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162332236 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138768878 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159624623 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112835562 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243170256 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181199482 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162422792 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139171338 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115323129 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079677615 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097706448 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0952238 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.65566954 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161199493 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114688402 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114380449 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102051609 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083400783 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363301593 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101683714 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078836167 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097455097 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064303583 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157521957 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097888952 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.133781491 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119633701 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081646948 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133275227 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210431613 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10837164 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133689697 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094990958 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079311146 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176159324 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104247298 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077311746 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096386616 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101526773 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135566225 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132125638 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096971807 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095214034 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203449682 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082074901 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112547905 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937269656 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180824513 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105035665 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097045874 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326525471 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099890773 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098552542 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078297718 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262728799 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184193845 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099668129 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080460008 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097878869 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081620357 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399720467 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08182007 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717683981 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083411161 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.113507357 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083348804 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097943336 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105166319 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089181489 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116571466 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080509367 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099699783 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080308909 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098525409 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082862117 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111017583 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104238426 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080714759 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165607647 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080801912 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115789505 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128495025 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085923554 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096409575 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132561849 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084671161 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098986802 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135385213 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081673692 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111797874 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100748219 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143644248 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082404197 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169046243 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079723966 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094681753 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110697439 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10451373 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130663385 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11582609 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099448365 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086577989 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096408349 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07840459 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164497797 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080752094 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098435822 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081928241 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096762156 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110808747 seconds)
  done (took 22.639370842 seconds)
done (took 39.356192944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323536175 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10129913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10123868 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100978921 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099272925 seconds)
  done (took 1.482444157 seconds)
done (took 2.21132996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285244482 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210607341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076052796 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166104714 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093098749 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170070914 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1576411 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110343504 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21652992 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07630603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177482272 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076315976 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092847788 seconds)
  done (took 2.665733959 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096233823 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116127751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082972817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112695183 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076405523 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112964123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093060516 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118842616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110212382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085568594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095110324 seconds)
  done (took 1.81995659 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09458781 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114132365 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082600164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111992293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076359496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111628028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09327233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116854925 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111218311 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085942967 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094797544 seconds)
  done (took 1.821147857 seconds)
done (took 7.024759778 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09203419 seconds)
  done (took 0.815647806 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.923600743 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.723998156 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112930514 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147877102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314883429 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171588352 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469016327 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124099586 seconds)
  done (took 10.921770914 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145259328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087217742 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105186672 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086483234 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10220159 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084164735 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104165917 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103243856 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083304677 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101217611 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085309927 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099461698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101019495 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085449669 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102052638 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084894091 seconds)
  done (took 2.34864657 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118031014 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117172378 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104808623 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108087738 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087129134 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105798801 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107267573 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090165639 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103039251 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10460667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091440207 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105752348 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104333889 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080937962 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107867015 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108389887 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086119625 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107297887 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108114018 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090750051 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107854013 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096815046 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087457819 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106836418 seconds)
  done (took 3.275213059 seconds)
done (took 18.089743193 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161424418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111773753 seconds)
  done (took 1.004870366 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097197675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114571466 seconds)
  done (took 0.948436692 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099282532 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097019147 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122670005 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11200829 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081001664 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097633279 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120069159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0816201 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098384821 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081786194 seconds)
  done (took 1.730588499 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083195614 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111247752 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102500649 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095404656 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106336975 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096465139 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089081131 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100270109 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111191298 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078103641 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103815363 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116074903 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086744211 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117454833 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106106924 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084496519 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103357108 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099616317 seconds)
  done (took 2.532054779 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080736551 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09888711 seconds)
  done (took 0.919104027 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082279096 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095223773 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082646672 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098488537 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095285146 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076925354 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096563813 seconds)
  done (took 1.366993308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483892598 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137799727 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25710972 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086066529 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122110929 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306433194 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099729738 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086641745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104550211 seconds)
  done (took 2.484064827 seconds)
done (took 11.722417908 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093617341 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119424532 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113575626 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.474926098 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107852579 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099165518 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162179952 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252196267 seconds)
done (took 2.165330635 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150170055 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330652523 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114988046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067773311 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097077115 seconds)
  done (took 1.355808979 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080867938 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101310198 seconds)
  done (took 0.92544359 seconds)
done (took 3.179620657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08164305 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132782672 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080322845 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098194965 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081099671 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098008667 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07903007 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097413387 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081470686 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097833421 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097813516 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078594214 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098086396 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080974781 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095129789 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078082388 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097809382 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080244358 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095686514 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077879495 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096160815 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080977791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095686911 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078929194 seconds)
  done (took 2.941991652 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100267635 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099588426 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105252667 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086174632 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10240889 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087695195 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103151574 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098560898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086750124 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100469475 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101906333 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085224161 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101443368 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08575054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100745411 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103165897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087412309 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098978952 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084378824 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102890341 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103718101 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081843474 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102072317 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086716425 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102338592 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102254127 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083990083 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099418358 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103872001 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084962949 seconds)
  done (took 3.621830113 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086404089 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09547576 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078414083 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103892008 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07858811 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098608772 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078589418 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096765633 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080159536 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096006794 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081145054 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096862733 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078852886 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097679747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080452605 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100130919 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109235059 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078856046 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096620164 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079204063 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099951262 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078781733 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096520203 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079169916 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095891514 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079042192 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096505979 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079099129 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097502502 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078270826 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099876925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083211599 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095831052 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087856591 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099480236 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078856685 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100270807 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078937193 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097432967 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096271761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077975817 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097451016 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078456439 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103386543 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079285852 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099214469 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07947614 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098738971 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079742412 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099829635 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07936489 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096276606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080562621 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096906476 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101251868 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078114542 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097924995 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078266706 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09796608 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078874616 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096378409 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079260428 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098663756 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080120942 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112165394 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085883588 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096743273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080989717 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09754565 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081571476 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097428004 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110851604 seconds)
  done (took 7.239418736 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084504965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107063046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081739849 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099157845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077513998 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097301977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102290431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080818139 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09857332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086740679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097463306 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081753019 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098911654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109192109 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080840436 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098815403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08613299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094720788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079630013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100928422 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081112287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101149721 seconds)
  done (took 2.779945297 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210080153 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106227558 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144255431 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108746556 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083928781 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108702125 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103862882 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088100789 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10439869 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084906818 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101882706 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104114144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084395129 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102557264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102449781 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086213611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103841506 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086100543 seconds)
  done (took 2.670676878 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094471287 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100756205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105016661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099482946 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098946746 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083741515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104715707 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110612774 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085663158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101217922 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092641681 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102543946 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103775219 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08258123 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102939902 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083237199 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102716181 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082961683 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110097815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106613736 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10652722 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092041236 seconds)
  done (took 2.911483505 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10013104 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102502979 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120698891 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085387315 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096785765 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081330643 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107185072 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080387658 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106678803 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099287858 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080903544 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096487556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086757369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096872967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103241983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081220043 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100002372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080723955 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099935509 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077916131 seconds)
  done (took 2.64352111 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104463996 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101886329 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102077541 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093286399 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102384948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084718783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11196052 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101954642 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08389308 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126116346 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10099458 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082246539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107591142 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1053254 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099088726 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091316701 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108352623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107786203 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081778507 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09948826 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12437264 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082567292 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107538178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099440438 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082116308 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100879459 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.212702413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088201502 seconds)
  done (took 3.655318551 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082603838 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100494433 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08041939 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098547006 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079946577 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098666594 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078721592 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097792573 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081548909 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096451613 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081791928 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100153159 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082627174 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100688744 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085133823 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10012576 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082498908 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096413261 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08020203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097834021 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082933278 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100474903 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083410482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096602708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079602939 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098283748 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078739593 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095182768 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081111732 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095173871 seconds)
  done (took 3.453651808 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093701266 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108421359 seconds)
  done (took 0.965693209 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080854457 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115188912 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077718596 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102084205 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103237364 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081598843 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107339807 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08634345 seconds)
  done (took 1.517521772 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099096444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112199055 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085118443 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115069364 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111846467 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096790924 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16409831 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102715999 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089368205 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099688662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09707505 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100383659 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108089681 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082885658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106664694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089568409 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099044677 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089362969 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10444458 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100081535 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08599844 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112376964 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085574836 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098674455 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084253106 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10938773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108263406 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083346121 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101874836 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10804905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087140822 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093079852 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081040065 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100046442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079779025 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107619933 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111477975 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084092171 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107297678 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083623565 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112714804 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096179784 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086649167 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106667835 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094462752 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102890045 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083978467 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094837274 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09637831 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083799732 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094292874 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081877781 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093140492 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088620567 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103001368 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11217622 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080263827 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10098938 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084526814 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102358326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087570941 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101213972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083832016 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097672143 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106223356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084803083 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106085233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077570461 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093010512 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079859103 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106914364 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121503474 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088830579 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099857082 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082753103 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097465326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102026842 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082631226 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106376922 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089348025 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099817561 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105815182 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089269826 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099510042 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08482209 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106774098 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096964128 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083357706 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096771088 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095511679 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098038189 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082187933 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099453794 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110888749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087335801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102259396 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081979777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109161531 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078479916 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103819613 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089062386 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103266787 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111122873 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091506923 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108234643 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108452678 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088670124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099932773 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084716881 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097834816 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085941467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104245913 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088693467 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093254895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102122375 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083212316 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100547938 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088950898 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097808464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082134249 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106895481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106038601 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080294241 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095861782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084545051 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099168527 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085649531 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106462483 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097851294 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077688139 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095624731 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086505597 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099165974 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087003749 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105902464 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104489455 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077590611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10052775 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089489061 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10948787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103251354 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084242395 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107829991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084673065 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102118652 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09040608 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105395155 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082610768 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106761802 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103998059 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079339686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106419217 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087152085 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101769001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088624172 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105983776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105913631 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084439175 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100920552 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089686127 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103902577 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083359727 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10244775 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083478516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111610835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104333329 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079629552 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099360943 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092438387 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100913885 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084216495 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101692291 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105246843 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085751301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101006705 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083469086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103910062 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096487425 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107671498 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10349384 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089586605 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112934755 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083660764 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104076842 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10266112 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085671837 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103936906 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091025342 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108446237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108770223 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087066627 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09975661 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090237644 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110496427 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083705663 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.10094511 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082569772 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106928995 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109578983 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088762198 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104581352 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082845092 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10345368 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106560864 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087233086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102736167 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083779895 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108869612 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083422982 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111219979 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104447359 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09437493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106091718 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079744977 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106977045 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084034818 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109661064 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098297229 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082105041 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102015639 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086061838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102076673 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087684314 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097096974 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092284616 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110935549 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104229001 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084393202 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103382828 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094998227 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10523475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088386587 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106666035 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108439988 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096999918 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102229878 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087747361 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112085881 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103881292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07816528 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108603686 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083376381 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103154856 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083724986 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100947268 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087588685 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113282158 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10807613 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078303367 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106233168 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083175731 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101757445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079500774 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109885536 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106872312 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0862851 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112436141 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085796562 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105123591 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08841353 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103211657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105155712 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085416364 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106377494 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085663074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106146975 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083675728 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105337903 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083095843 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10229936 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105257717 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08727197 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103622449 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090904494 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102640523 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085127064 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106361754 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085865582 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104518745 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104254721 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083529124 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107519632 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086139076 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103234699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087315625 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09904333 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092131907 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104420088 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111942507 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086312584 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100291607 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090327447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10705299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108845561 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086240813 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105531697 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086879584 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103197402 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087406015 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113011692 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082262448 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11390799 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109812631 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085897402 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106536825 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085941795 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104933446 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083842236 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105034311 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105162113 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086515407 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102657778 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089677 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106339051 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085322257 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105608035 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086080068 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105123051 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105366354 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079094757 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104061903 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084159199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10382689 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092659312 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104840602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088197684 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102920704 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105187717 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084307031 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100704276 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09368508 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114645917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10486562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094346904 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103798399 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087004118 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114125761 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098598474 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083808217 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102172923 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082994103 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112484807 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086326899 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113123537 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085828119 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103678628 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082117612 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105644596 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102503737 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079062011 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101782396 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088789043 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106702543 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083962814 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104419632 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088245767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105468404 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111720298 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082230927 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103763572 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086335187 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100881813 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084102272 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103203761 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088730778 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105396154 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082692544 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10206726 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104318934 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087381934 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104638436 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085155816 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106019335 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101434476 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104238029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088464945 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109718837 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098746469 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088779668 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104366629 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085701325 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103132247 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088324887 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108132608 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105242333 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092531066 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103851171 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086231542 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104876097 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08374921 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1047431 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104334682 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085430832 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10436019 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087104079 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113167772 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084432738 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107224292 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085631013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105498209 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109440087 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087301038 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106188347 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093369627 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10768706 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087123626 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111706551 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108563963 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088547153 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106525038 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087315681 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110960429 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103613154 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094730148 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104399666 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086935106 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105834894 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083375688 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104086694 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084790201 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104105336 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109690592 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087192787 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104093671 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085142444 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102415431 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087489201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109060692 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112809731 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08769216 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108103184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080700026 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101655577 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086690811 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101832823 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087472744 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107703136 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110837692 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088703493 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105531912 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085155064 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11185303 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091578802 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10946695 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08333752 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109918232 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106142518 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088755463 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105715334 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085528907 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106903669 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090980826 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106826332 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103555532 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092364606 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105143575 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084345 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102473044 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08388778 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101770522 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078525186 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102787326 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103267104 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089631587 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104008381 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085501807 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113383268 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101606087 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084111672 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107826283 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083101842 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108418483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079475435 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102166506 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102378847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084103818 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096684517 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082628705 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099018962 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085283472 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100529606 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078228498 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110523831 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10864482 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084507374 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099963906 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08193367 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097073047 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077929661 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101016744 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084277668 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103818797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110810244 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082295 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100524071 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077752541 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101527636 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086801868 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104458587 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081241258 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097667757 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081117573 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103401073 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107789842 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08160569 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101398907 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086874009 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106259117 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084599886 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108952197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081807815 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109726118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116479243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087221123 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106157605 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092084416 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115051244 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105202784 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078432165 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10205717 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085567323 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101819974 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084595056 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103593606 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115186183 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08665785 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101286931 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082149421 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105123421 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082146587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109370573 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103336682 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083378554 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106910537 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084709395 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111955565 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104016254 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089017424 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103524959 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084868191 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10140564 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082890783 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099615292 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081610022 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103597219 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102623756 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087843532 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109426044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082363595 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111511727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109556739 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088815288 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098240001 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08234276 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101604285 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07879564 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103464461 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081421803 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100452202 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080767634 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101404926 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102793335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089082461 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103678386 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084584879 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101702553 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07773809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10337285 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086107549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105400871 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09775585 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083200858 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102028196 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088987873 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106334667 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084122788 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103986126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084638273 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103142337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097903474 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0889594 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100969549 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085954953 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100854898 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083875152 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103706913 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086714827 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107998475 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102830061 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084970456 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114021005 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085647868 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100356178 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098693422 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088469294 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099748563 seconds)
  done (took 58.388400922 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14815532 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080783394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097552309 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079025437 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112373972 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098718554 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079121169 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098268652 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080594423 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101151494 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078960404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09829335 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107665652 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122510689 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0927582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103058241 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07834604 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098862399 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097434713 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079803994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108134763 seconds)
  done (took 2.851610002 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1067699 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115925705 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114223052 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118261972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088995729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113523504 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113164733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113946955 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098330429 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110640035 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117447348 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114125102 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090714085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110347385 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110576687 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093176953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118152141 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107652296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11485308 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094077354 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111902736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112647863 seconds)
  done (took 3.200223245 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085462282 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102277604 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0843337 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096817413 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084260973 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097474337 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087476309 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100286793 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086559043 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101421153 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082513734 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102300833 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103945501 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078543217 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10137107 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081905729 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15056104 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10618002 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082458938 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10445818 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100050942 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08870551 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101798071 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082242255 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105391962 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091269921 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107407815 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084936505 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107228572 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085436703 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106786453 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08360674 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10842251 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105077461 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08250732 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101433908 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083484896 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10183357 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079479959 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100847575 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083635344 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097832408 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083864354 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103951146 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081404084 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101503098 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084920013 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10286837 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097573591 seconds)
  done (took 5.479614245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106681272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160110491 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085782775 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143328885 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1200149 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111513274 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087583844 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141065131 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101541576 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082107344 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12146238 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119464133 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103030391 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090788727 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112514726 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105717687 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085613073 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101647933 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107747789 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083302719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107296258 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090917002 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118306211 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117367717 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107442191 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082947845 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102604556 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108161654 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096700106 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109222797 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107892212 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090543359 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120399389 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107681933 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102204308 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086456771 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120961237 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102622508 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087361903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10118156 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085875603 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109334239 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109563922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120675003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084102407 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108226173 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0844671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104181286 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12012607 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089775296 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116756111 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122900959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111963559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08839146 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112222535 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123928486 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087764979 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106390708 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090899439 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121000676 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104707506 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091340788 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121389561 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105172784 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114495435 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099840165 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109946849 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111830726 seconds)
  done (took 8.150635349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096281568 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114850111 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123634539 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12452942 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094027254 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115207067 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113800747 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094334008 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115124016 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120545513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114842391 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139487774 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089302372 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118715365 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115048704 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095204674 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116016097 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114850087 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094135736 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113625651 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113154208 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121069552 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092369245 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119467522 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14166775 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105663601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090288536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110577667 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119904478 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11012729 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123321022 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091344901 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111050557 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119109246 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12267401 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090636136 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103101716 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109333724 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090805344 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110176993 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104450484 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099462038 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110615481 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105035612 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091001918 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110704854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118896814 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123071999 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11333266 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096898686 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110474256 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120191103 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110039104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09133662 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119540498 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14775252 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11986455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119848181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110206793 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100170961 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119661058 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127342634 seconds)
  done (took 7.715486596 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110386017 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115621075 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116594177 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09997754 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082187272 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108038117 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082292908 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102515281 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11272443 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09461858 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115241379 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107411246 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091931346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117356395 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108049127 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112000925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088597486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10801653 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113335833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107881602 seconds)
  done (took 2.920429746 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096615111 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12375664 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084446999 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110851096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108164179 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09172163 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106859917 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107455451 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08515376 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106922412 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097402465 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115836586 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104535958 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09186262 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114905587 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110025831 seconds)
  done (took 2.483567061 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098788373 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117584304 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119240763 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084377068 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103384795 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080997902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104546817 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100296668 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08053749 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119593223 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084312128 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108098687 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103331689 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085092152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101456775 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086816832 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100536352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081864024 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104487034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117872985 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094635162 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103678375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104969781 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086801461 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104311716 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089583064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105799051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101787766 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083876842 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10515312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084836258 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112765919 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100693511 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083657139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102475799 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082204297 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104335886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085322211 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108262574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104547835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084064656 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103869572 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084741072 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106649265 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080296296 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104982172 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100161676 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091838982 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101601986 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085291846 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104842754 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106622837 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08537426 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115901277 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088537458 seconds)
  done (took 6.210375777 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102933705 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109382549 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080405206 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1023363 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088207475 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107054554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107780635 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08727532 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106113057 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083159926 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107456423 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088867437 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107106563 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109023831 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086871292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108844898 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081811717 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107997739 seconds)
  done (took 2.609492536 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090109068 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104297536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091710432 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104859285 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084659299 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107549304 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079968055 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104404479 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102355521 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084363965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104452613 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087171359 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102821784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087103121 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105314335 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084463137 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108307739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103231656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084883448 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099717815 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087111208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102833495 seconds)
  done (took 2.947359105 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121523467 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125778363 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091877706 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227830859 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104602464 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13100429 seconds)
  done (took 1.639900825 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112181179 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119224298 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10555106 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105905418 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115069955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106239528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087123512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107177925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117367892 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101423831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106423882 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117078764 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116937498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095281116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113637258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113530663 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106771694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087793586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105197287 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127288095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087201491 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117843724 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106546524 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087251322 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107605685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117376234 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116584238 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121562835 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087240097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11750558 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113190859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087400999 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117409474 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122281305 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108591659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09682853 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107382335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127614724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11377468 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096199414 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108173191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114212407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097043516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113849706 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117027019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107692288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093106716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107369447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107544374 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134225003 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093977211 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117388932 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113614732 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11760041 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117223701 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134303619 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102577453 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117036445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113619986 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121950074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11589703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093759232 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116621265 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121793065 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114362121 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116340263 seconds)
  done (took 8.08811545 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104910454 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125858809 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107752409 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122282574 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096575737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107160949 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10692333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087126681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106979885 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106365508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151183285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088108911 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116851553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118200317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107137838 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088703448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107433886 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116933563 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086280362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134505874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108284272 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116541236 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117386959 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096255466 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121585887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114035463 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107438775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08737461 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106723641 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107008026 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09289571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108179146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11660579 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085975191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118215032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10827373 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087455259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113672878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107601928 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113606528 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097154191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127755041 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107998337 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107595839 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101624709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108254108 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107664162 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086155715 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108110606 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107074337 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102052465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122579915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122398093 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117299994 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108645403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087045333 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108483424 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107876123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087387468 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114068556 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115978165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107894621 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134777664 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087177825 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108273904 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117473089 seconds)
  done (took 7.969841898 seconds)
done (took 155.800338844 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099070226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13526584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095921875 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167965686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106238979 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118305276 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137036126 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097692059 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105833821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08558616 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106141117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086464799 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170979394 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085417111 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105726441 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10704871 seconds)
  done (took 2.652224556 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19944609 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253920937 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101657179 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105151286 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088508994 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109987177 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104496246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09016065 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108908748 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08507124 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108029491 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086528715 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104826792 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085862521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109702309 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088118282 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105317408 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088014865 seconds)
  done (took 2.867659314 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111896922 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145262715 seconds)
  done (took 1.10836225 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120439662 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179395697 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315408681 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154811197 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105500459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126016327 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155791229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129931635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196406707 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121967953 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121998668 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097202154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13992573 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114955321 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093350176 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118016499 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140997204 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092116482 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11494865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114489492 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116064209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105894475 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115628747 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092185225 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180936253 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118856504 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084703601 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106058002 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11628082 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09423616 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113189449 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124213515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098122334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174709167 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101945677 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17542181 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097281229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114244124 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114140976 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090356863 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117823551 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117676976 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104103333 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116914288 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084133465 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118890818 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106067086 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08575324 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113907524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097447985 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114742622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112791377 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15314574 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117343457 seconds)
  done (took 7.492675401 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795317049 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162777858 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090532565 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878777071 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138031094 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103286146 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77767953 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133059444 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234355247 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756497406 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133180866 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120945003 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227101803 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235408265 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950157568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309483342 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669040511 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101506175 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14867674 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15257435 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119129199 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13715017 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130352559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429033525 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095433218 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111514613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116641019 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09900535 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158490154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125397798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113600343 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177630943 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246989181 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204460836 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115593345 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089161997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11123174 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169643243 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265099647 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211885078 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179170883 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086347983 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110373585 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121266534 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11039 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108472711 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162854688 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172469807 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191668229 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091840723 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119685334 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119441583 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119289531 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163669019 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120106064 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297093816 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308595143 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111322676 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119524659 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105342325 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263855372 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121514387 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221862485 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116416235 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211230998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110444845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779348928 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188426132 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089807751 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117615318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118512396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094205051 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121218495 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167353073 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406663432 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124014703 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092388318 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11097801 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203798123 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124112652 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110219551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162613993 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115394123 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099296383 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125142533 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12163593 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168698619 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23415033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12324632 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11933114 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093423727 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124843682 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116003915 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214427231 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217472753 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160392866 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210299357 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12205872 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16322594 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187949559 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097389498 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192691984 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09655887 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124982146 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121765904 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214697676 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144937418 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101135925 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114987492 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11743176 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149114264 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127137869 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096905626 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168574329 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477091262 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166735727 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107868756 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127299903 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098191128 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159807321 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117181404 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260023465 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120689978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168504957 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118278209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088584317 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119345951 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164268579 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122480477 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120410135 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101194219 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117576104 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233897988 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215368464 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121703214 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218162501 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182638552 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118032586 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170616341 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12076775 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166654617 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119289087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120596044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094222236 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793760191 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122964493 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09783717 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116061578 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187178662 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110028653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102510879 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124402937 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107592832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787609111 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126619159 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119995061 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102135625 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117852439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11938883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096012273 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11526739 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161583014 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226583048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120743169 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118760248 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102224115 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181183236 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094840687 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124754745 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124462713 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124390126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1005878 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114833613 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124169759 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16995017 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161703987 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219314143 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588474344 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090469353 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123850649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226836162 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089595646 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285757446 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119317534 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223156594 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164890855 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120405157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305575857 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165135453 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187994615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125508216 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172734045 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086310814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118702979 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167562616 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11161543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116647968 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162260231 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124416869 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101280464 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956602606 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11259802 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228189043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108182599 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171025983 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093462378 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120161388 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294803943 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111075908 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106738141 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185423601 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092955295 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124343388 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.871467786 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103016254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121666287 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117452982 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222449897 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165101679 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118110921 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097781248 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121016971 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161773035 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209538124 seconds)
  done (took 44.012865498 seconds)
done (took 58.97663426 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272876693 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213301274 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256766059 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166975868 seconds)
  done (took 1.860878447 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169917466 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147501419 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.1196337 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106673524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149269267 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084518515 seconds)
  done (took 1.650012844 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351725827 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268501641 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237761487 seconds)
  done (took 1.737637901 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288912039 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251128617 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354302375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417708499 seconds)
  done (took 2.309570562 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211419632 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131732922 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111315638 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104021483 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195369482 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24812504 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140424777 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201350978 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121223837 seconds)
  done (took 2.393734916 seconds)
done (took 10.835702871 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.165362329 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.30118271 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.161445611 seconds)
    (4/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233062832 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.223746707 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.18345447 seconds)
    (7/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.185524463 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150396992 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103033745 seconds)
    (10/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.133070961 seconds)
    (11/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119422123 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098424216 seconds)
    (13/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.231036819 seconds)
    (14/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231980723 seconds)
    (15/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.233708139 seconds)
    (16/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.231931313 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117452485 seconds)
    (18/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.194538836 seconds)
    (19/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09839983 seconds)
    (20/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121690838 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145968384 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097514306 seconds)
    (23/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.122374979 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09585034 seconds)
    (25/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115719643 seconds)
    (26/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098945941 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.136368981 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135247559 seconds)
    (29/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111716096 seconds)
    (30/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114814516 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119448614 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.223934587 seconds)
    (33/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.180731424 seconds)
    (34/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.10128603 seconds)
    (35/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09225254 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.219737329 seconds)
    (37/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11643115 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093474058 seconds)
    (39/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.109343381 seconds)
    (40/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.203889978 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110695279 seconds)
    (42/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112889146 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14631178 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092354343 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127549591 seconds)
    (46/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.127763136 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134244568 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194402302 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115199475 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093402375 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113786895 seconds)
    (52/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.157745217 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.184475178 seconds)
    (54/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.139532229 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.147978394 seconds)
    (56/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.088645414 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086450146 seconds)
    (58/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.189017693 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087049818 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139005627 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169768849 seconds)
    (62/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.185568807 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097127737 seconds)
    (64/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.150787343 seconds)
    (65/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144064373 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088118663 seconds)
    (67/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09372686 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.088332487 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.224897631 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115776469 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135500494 seconds)
    (72/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.148998342 seconds)
    (73/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091769866 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122065442 seconds)
    (75/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.146746638 seconds)
    (76/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18348875 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.088746774 seconds)
    (78/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.163710686 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.186463809 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115110163 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.087228464 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067164404 seconds)
    (83/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189623658 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119545805 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.220320976 seconds)
    (86/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166400622 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134802578 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139251262 seconds)
    (89/286) benchmarking ("sort", Int8, true)...
    done (took 0.222099348 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171642085 seconds)
    (91/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087852871 seconds)
    (92/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110129379 seconds)
    (93/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098731132 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090393491 seconds)
    (95/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097765202 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117286827 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086164475 seconds)
    (98/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122066328 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15808198 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.16004403 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116935537 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075303601 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127008002 seconds)
    (104/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.183002252 seconds)
    (105/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.12350775 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161410341 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117856224 seconds)
    (108/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066861293 seconds)
    (109/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.089592605 seconds)
    (110/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.160173321 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.198334411 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.155778894 seconds)
    (113/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095817548 seconds)
    (114/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092927428 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087368135 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.180343776 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118587893 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123319456 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117265839 seconds)
    (120/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118847441 seconds)
    (121/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082252574 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065809678 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114818106 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09364439 seconds)
    (125/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11291481 seconds)
    (126/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139504954 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185705494 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116714008 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066776411 seconds)
    (130/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101025801 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085932802 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14524414 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.160245089 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108944775 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116738996 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085900009 seconds)
    (137/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069659084 seconds)
    (138/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116036035 seconds)
    (139/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067295637 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091000978 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066897993 seconds)
    (142/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078583488 seconds)
    (143/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089097764 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085966848 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116095792 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10064065 seconds)
    (147/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117008337 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088097951 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11161895 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09455478 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 0.171438159 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108478686 seconds)
    (153/286) benchmarking ("sort", Float64, true)...
    done (took 0.232109374 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066522095 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220930006 seconds)
    (156/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124834796 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085981807 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111938253 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086609701 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089609442 seconds)
    (161/286) benchmarking ("sort", Int8, false)...
    done (took 0.187101661 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067579453 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124062916 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06726228 seconds)
    (165/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.066315725 seconds)
    (166/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135145915 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18656914 seconds)
    (168/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076811944 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13704473 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092310761 seconds)
    (171/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093299214 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086839637 seconds)
    (173/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115089984 seconds)
    (174/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077151838 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118264712 seconds)
    (176/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093463633 seconds)
    (177/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117735643 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086266295 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123827846 seconds)
    (180/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066338912 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111345549 seconds)
    (182/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17278785 seconds)
    (183/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090982608 seconds)
    (184/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067201316 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.222849245 seconds)
    (186/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09075597 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094465039 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108239095 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165628317 seconds)
    (190/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.120254979 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110024368 seconds)
    (192/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067051741 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066746832 seconds)
    (194/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090286967 seconds)
    (195/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.096582243 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110102931 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199596822 seconds)
    (198/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094645774 seconds)
    (199/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119376827 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086722462 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117618996 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095163129 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172208114 seconds)
    (204/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090842373 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086027103 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173463478 seconds)
    (207/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066292519 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115021414 seconds)
    (209/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066606667 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085436938 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113048232 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108853804 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066991158 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068222604 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091188243 seconds)
    (216/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.117009873 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110318565 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089538608 seconds)
    (219/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114667512 seconds)
    (220/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.372248532 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090346019 seconds)
    (222/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113650778 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089527219 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095889397 seconds)
    (225/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113661271 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066851283 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119413552 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086035065 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117427397 seconds)
    (230/286) benchmarking ("sort", Float32, true)...
    done (took 0.234278801 seconds)
    (231/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077220243 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181551735 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109919281 seconds)
    (234/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08585548 seconds)
    (235/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067027245 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122609052 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109884607 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092149383 seconds)
    (239/286) benchmarking ("sort", Float32, false)...
    done (took 0.173284344 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066990086 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117896973 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068425984 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133729545 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06704298 seconds)
    (245/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108272563 seconds)
    (246/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087804171 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136038844 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066967716 seconds)
    (249/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090011728 seconds)
    (250/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086898441 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090252368 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085305271 seconds)
    (253/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075938133 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134426969 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109032805 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085914466 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.172991333 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094355745 seconds)
    (259/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088890581 seconds)
    (260/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066808856 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084237418 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108913487 seconds)
    (263/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.188807885 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09146827 seconds)
    (265/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115633674 seconds)
    (266/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088070849 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109261629 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095087957 seconds)
    (269/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116029046 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161372483 seconds)
    (271/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066974718 seconds)
    (272/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181678718 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091598799 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076927782 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115742487 seconds)
    (276/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067597525 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110495522 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135833442 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086644566 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066413602 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115158108 seconds)
    (282/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068747175 seconds)
    (283/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099205459 seconds)
    (284/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066970194 seconds)
    (285/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067492618 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11019842 seconds)
  done (took 35.833728963 seconds)
done (took 36.71846082 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104588163 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146437531 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096080448 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134683431 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122523238 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090801879 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116692003 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097141151 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122663361 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12400253 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097576032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091952457 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096568552 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119805591 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096724595 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138024726 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122499753 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092781756 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118324113 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085152101 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117308897 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088712417 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111325991 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06930417 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121030736 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093786441 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115391014 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119030946 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086116439 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109099338 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089847494 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115946294 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086532357 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122745561 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092508596 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118345503 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095845993 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11886744 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110658303 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086660535 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118121326 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085762659 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.1164869 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094392874 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11426626 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091544357 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117476698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099562398 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137792092 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114020033 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09424565 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119835657 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09526328 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117139601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090365138 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119486883 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091204428 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138616791 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118344674 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091842934 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117724057 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09411751 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115943169 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094277653 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117212522 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11992479 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098090673 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115125011 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096373464 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114431381 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085978603 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117679896 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090002384 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109201047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095159463 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120268131 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108456043 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091826078 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116397402 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090318595 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108626846 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089256104 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110343622 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092452508 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111549211 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069844924 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115238333 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092199765 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109839069 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094634876 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115299192 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094054309 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111785416 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097748436 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109277956 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091139135 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110154203 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086455599 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112194155 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090937705 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109256661 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089724169 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119465991 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08839673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115678812 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121949489 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086005763 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116450379 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086662225 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109009754 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102149884 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120262171 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085960459 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115562416 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08560671 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117235199 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085830868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108992833 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086223574 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109512263 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092283878 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110089365 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112377297 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093272261 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124655522 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086266961 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112552472 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089182623 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11026234 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091952644 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110254628 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08701199 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112046094 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076992186 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112206925 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086387474 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117227805 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089934601 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119407595 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088374726 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119439479 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091129407 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.1169108 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091628416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10953748 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074221968 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116016308 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089970381 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112594685 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086455078 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111907108 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086195303 seconds)
done (took 16.791764208 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09239191 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183775336 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150077506 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141106667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105757991 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111610588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121205552 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117325729 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112952247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1413927 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109707595 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130346871 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146422429 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085771105 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111468136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091705662 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111842737 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101414769 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14468191 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132400369 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162533151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0860228 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146257227 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134224408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120096261 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104678841 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111728607 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091618941 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113818902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112040024 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131267729 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113924321 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086810561 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132883653 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104625711 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118745954 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086799696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118441517 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087342377 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110989358 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138257222 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13313368 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092149883 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116742539 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090112501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113603915 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089412298 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119532868 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097519952 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115244698 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125911434 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156044074 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090537731 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121054316 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085649283 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121867618 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121018635 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089257955 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111522049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089900148 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110315021 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090998504 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126095106 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140337576 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091030524 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1206973 seconds)
  done (took 8.547830521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109511708 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144390519 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103739733 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129684971 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111283883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088241706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111760788 seconds)
  done (took 1.743371513 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094062755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137485029 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110457722 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135150933 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131421117 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111961093 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12245729 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087979939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131503238 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088906316 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133052076 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148961869 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089541609 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120255942 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136975396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088258328 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136607502 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088762684 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115920405 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111557943 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11533251 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133979815 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089914184 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11231342 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102280042 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113057963 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161279098 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092706334 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113777053 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091779608 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110746526 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150786822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101943859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124484997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08843895 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128486209 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127604331 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085930159 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125682318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093196432 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126765459 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089392567 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114266408 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086946864 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117835975 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099182786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116783701 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088933941 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115455823 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133231201 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.10568671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125940922 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087962765 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116523568 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089493877 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118327945 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097911744 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113913055 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132374251 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090067719 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130296458 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104890808 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12729224 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129296665 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090179897 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126147283 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101971383 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11624932 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090524953 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116891195 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104489751 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110628381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089555241 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123478852 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114948013 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111550045 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13611122 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08989091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123653267 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0879579 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114279883 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113612183 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111141847 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117141159 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088599825 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117568619 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091791626 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111292411 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08806501 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11607082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086949467 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115109138 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093799603 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11364324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091256032 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129483681 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113829225 seconds)
  done (took 11.740216908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094000257 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113845301 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091507194 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113656574 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089696267 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114265871 seconds)
  done (took 1.572370807 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118049579 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115879244 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103464647 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119098002 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154710556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102574486 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129489999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1222205 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106905564 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126579639 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129032944 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104843886 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135628402 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120445104 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103174874 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120801994 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128628892 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09983041 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125919286 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096476173 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13517596 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119417661 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096438008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130330166 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117705937 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095232507 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124881139 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102149925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126105589 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122465219 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095466149 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118380073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096369436 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122336746 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128348719 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095694771 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119834869 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11834387 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099115346 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116816886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104440652 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120594524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125496612 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093590289 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123035151 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119537636 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092925306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124073232 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102864452 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118075052 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118743345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095831067 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11695855 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09355686 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120965272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122921945 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.092963156 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130905471 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122052086 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095456078 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12009555 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092565897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123365666 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117625911 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104148074 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117703742 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120589665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096214125 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121503682 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094727561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11877783 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092321997 seconds)
  done (took 9.157201071 seconds)
done (took 33.700728885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692746641 seconds)
  done (took 1.648019296 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816405181 seconds)
  done (took 1.773554956 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.66514041 seconds)
  done (took 17.652160426 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493773478 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.389979117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994794452 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180095115 seconds)
  done (took 6.012912181 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950658548 seconds)
  done (took 1.927414966 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287310525 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234613329 seconds)
  done (took 1.48279573 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771967777 seconds)
  done (took 1.743382189 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.364286216 seconds)
  done (took 2.326843974 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331160796 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182820351 seconds)
  done (took 1.484567357 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.556662359 seconds)
  done (took 1.524680054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.1013198 seconds)
  done (took 11.08020015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270948656 seconds)
  done (took 1.252915115 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305376768 seconds)
  done (took 1.278700993 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.466800472 seconds)
  done (took 4.442492745 seconds)
done (took 56.598217267 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105019935 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125882888 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10092184 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123540159 seconds)
  done (took 1.424659455 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106878562 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124191912 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09955553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120144494 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125699361 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.094964062 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122326305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100383496 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120622881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096187723 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119385721 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119410507 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098644508 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12242649 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092980961 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123260584 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098362345 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120492918 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12351314 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096312053 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11794485 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097516935 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125086317 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093598565 seconds)
  done (took 3.640093879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106509913 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120813287 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096728732 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118564641 seconds)
  done (took 1.429575377 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105320311 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136695797 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105225321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124535115 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13127636 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104610071 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116794698 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092836434 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118812798 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099075792 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115989091 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138439164 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10646443 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12505497 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101624755 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114046716 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090612983 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130977328 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123959806 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099946344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117204843 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098937131 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115223683 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108890975 seconds)
  done (took 3.701983526 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175961211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127554724 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138159062 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09431218 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159560115 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139773488 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087696773 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141708085 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087395539 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130522261 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117908025 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132436884 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129243765 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087397958 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113417996 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087164778 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128103324 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128401893 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090445297 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126940789 seconds)
  done (took 3.41093767 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103258119 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117227116 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08826911 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115622932 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098902975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120324873 seconds)
  done (took 1.630006495 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096841273 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119322067 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088885057 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114163201 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093508833 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114498679 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088255763 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114437989 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090042753 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114354541 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088434606 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113701685 seconds)
  done (took 2.222138501 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507533951 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119338109 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119060043 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088169928 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124035815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088893884 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129506413 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091882709 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139961627 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088204627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11564105 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091070589 seconds)
  done (took 2.683328077 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240141754 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125244495 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282352665 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364814399 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155598815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16401943 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275677956 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161496099 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196637024 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148622956 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228624697 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193626345 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151135648 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191428646 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136694927 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1445444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187305957 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248894347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152297194 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210471418 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204905078 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165578665 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179120766 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149631254 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110654475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191580818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094595622 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128711199 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205243527 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204675229 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188311318 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160098542 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144879797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235668528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246903904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19424937 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276095556 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133801117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163995187 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141809749 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2619365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138072248 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230946259 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155076569 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103832807 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218823528 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165739878 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175230649 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144112336 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137844407 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197178347 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238834488 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191784884 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137394203 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298356851 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151598839 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15576682 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188671253 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250689764 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224390843 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188053717 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120689143 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18773417 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189929521 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210240453 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.124599082 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208877697 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147271711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18184649 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188735719 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165008697 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203510012 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179070277 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138023118 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169875223 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171616143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171599159 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257389529 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184583903 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121705433 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167847533 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148069236 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10386656 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194119797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124679497 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21370698 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142540765 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162289196 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208146614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158858812 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160758098 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218032588 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183642321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146569385 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083087338 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152578931 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154889111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174493977 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139535011 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158178415 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156203993 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129463073 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167804438 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097291813 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182745552 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118022188 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171959868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182558687 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126768723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16183792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152791937 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148983562 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176583633 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199804939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13924521 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132803151 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20848747 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176086561 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140831274 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176985078 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227112301 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116716321 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148468024 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225318159 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215381949 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139392265 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227978021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126043343 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134691666 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13274639 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179278463 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155792565 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16115184 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131054144 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183093644 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205183158 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125399768 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138417046 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194791844 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133055639 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130487885 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152757308 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120163696 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136905066 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142410647 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144760426 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175205465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177774303 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153669784 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166396179 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148567634 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247181055 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139063685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149128834 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121535812 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120838296 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191325633 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223674541 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103284672 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229758604 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170939454 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198134595 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194524896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10722685 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176614693 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129242879 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092604712 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220225014 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168080144 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162025389 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195957602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221513136 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179365204 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180731574 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164378337 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199930017 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137454984 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155801856 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137402531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159319054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157523855 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122007485 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110658814 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133499877 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1502486 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142047411 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106000705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224478209 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169551775 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213984905 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158738175 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121418459 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179765175 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128552003 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174646591 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203512873 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118790304 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224698108 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193608804 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185375807 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143287041 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22660021 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093548788 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12520483 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14105745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170115859 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105590804 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134434309 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160351308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179707573 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2051983 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169621032 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205301553 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199764403 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188787967 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094396365 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168177593 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18252639 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176143815 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178810809 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140319891 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150878377 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175830199 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155090403 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253010659 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169242476 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175949106 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203533345 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149946102 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13063126 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150470293 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177151728 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152973609 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175029849 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147161229 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137749021 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158393166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10177693 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158547948 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211635438 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162509767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186571038 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149311533 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184599143 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127693584 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161544288 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159547461 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16501909 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080773707 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201253627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20253497 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146402338 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1659271 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18747538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130997621 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306490488 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234302578 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194185747 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137463615 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154307322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160475585 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161094665 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170169227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178765725 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159643106 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186816786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158029556 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134970707 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110755505 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148787496 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152392211 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131817887 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14734597 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176270337 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137300234 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187910759 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153561803 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159051957 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172767418 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148977044 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116554134 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149358077 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239769376 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18240408 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238553854 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.121955558 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203519096 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204700563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125738873 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103216383 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133348672 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177800846 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135273141 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190480944 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.211652528 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199466699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17947867 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203953033 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111836857 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11952993 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156526024 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167933744 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202637238 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147672047 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146855423 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229159439 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108599697 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130820423 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16525214 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287586299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14471357 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194180439 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106870163 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274705982 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099954918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131250335 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161795216 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232227828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107566138 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177007252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169998652 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160814438 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162346442 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149174359 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190617539 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235860705 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198750037 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208883006 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105184608 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156018529 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17421949 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218431673 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155595166 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109763337 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229605363 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193921613 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193883938 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14214936 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166401599 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167691181 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157758206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210670063 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106850513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233511619 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105356955 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218758783 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15256163 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136799224 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175891427 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187035693 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140871039 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185397573 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207962151 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106601704 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133500937 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165115273 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176591138 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153163088 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127246219 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181191683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124561562 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19535303 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258885473 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131948093 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12761141 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145380826 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13509356 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15391342 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156342659 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138157234 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138875561 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226234343 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13340251 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191381484 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199472017 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196809947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172362318 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145797096 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691641854 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102639924 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220909484 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119648423 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232937724 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150871486 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172715292 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158011326 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167214744 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192961853 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159415286 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230146305 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218431593 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178632397 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131252761 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157017876 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154979554 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11552253 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15283434 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167987982 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158666945 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145410148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17669951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190337772 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107059148 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140449548 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198430485 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147632529 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183608018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18004829 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139124874 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171695712 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212741414 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105760605 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206501954 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207498699 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141958453 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149072795 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132315837 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120533791 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259977288 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124577526 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188041191 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183903253 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15839742 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167173631 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146588546 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220691492 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156853575 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184790559 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142212891 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158519653 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155522819 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136542388 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102790215 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15547877 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166138 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149823352 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159942409 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162778712 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194798177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09424155 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143428089 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305883206 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175890173 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213956244 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136388223 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135059926 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161262986 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12107868 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202628002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178125662 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134824764 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106978808 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136341655 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.128184374 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135098715 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154115767 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192454589 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164905421 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205163245 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136915638 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280770112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139565242 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154286478 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088655089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131834837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148949606 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116696149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15507282 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218921465 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260229907 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120650392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133371862 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148393143 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096614796 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136065752 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164060378 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164992366 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175955072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14567875 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107598583 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155117897 seconds)
  done (took 81.883875828 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174364939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153048056 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158031956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201698554 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17457893 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270720299 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208654411 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252739898 seconds)
  done (took 2.668742214 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096360659 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144344101 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156709248 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131940319 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090318593 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119231037 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341352259 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133207684 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115371683 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119825085 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171811532 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093255608 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.544901753 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089753065 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118888398 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106614304 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091306683 seconds)
  done (took 3.730538233 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.406204677 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.596599077 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.083948248 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195097628 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.827511688 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.102285704 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717690205 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.167362669 seconds)
  done (took 61.171964605 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118818184 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13500706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122653388 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151478649 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140052163 seconds)
  done (took 1.736069239 seconds)
done (took 172.307218985 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100153441 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126888719 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096892348 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129064714 seconds)
  done (took 1.520725095 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096882904 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077805969 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106511153 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07417048 seconds)
  done (took 1.433918546 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187172988 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170698231 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407445439 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070524014 seconds)
  done (took 1.589148692 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120460148 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131232594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103922761 seconds)
  done (took 1.443511147 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107115469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128927893 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10209086 seconds)
  done (took 1.419111679 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108371429 seconds)
  done (took 1.189717318 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108865691 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136892597 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108648857 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135331748 seconds)
  done (took 1.575455561 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102732219 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126031212 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108217811 seconds)
  done (took 1.421516366 seconds)
done (took 13.030827 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10831281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511664865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384114335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143379096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379110891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034621919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144852163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164745583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092548619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138433948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671956412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.066140229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472632913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020392428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377405434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674369172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120239789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119068812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092981272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018209648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090785218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121242246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091853228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701404285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423854189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094523195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370290379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091576049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124667984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381280125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121671268 seconds)
  done (took 17.145080823 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098834636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17176938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097648943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135941668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122161295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093478923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125986737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092298371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17884523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12215173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10914924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120618752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125041526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09384658 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140758591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091948012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128728845 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091629626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121095354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120832742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111078398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119886947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093346879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12055583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093051872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135296977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121777134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092160346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119586964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098217006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12605124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094162737 seconds)
  done (took 4.787692462 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141238501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182929366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127251852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12604443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167788391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122553256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198566183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11760767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181316778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123051563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138285554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091888117 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155653287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092995605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142186438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120424096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09559851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120750114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091853203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122902716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13861693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092905356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120822271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092671557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122147395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106849941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123601499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11988532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092526972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125143134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099678465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12291391 seconds)
  done (took 5.113879016 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09834937 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125270398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108025653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138025737 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094720149 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124632528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096125838 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123655953 seconds)
  done (took 1.997797778 seconds)
done (took 30.130703527 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111861404 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125746436 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10617571 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133737421 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102087851 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130822127 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090608304 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132518495 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133356752 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.100586678 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136146599 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092000119 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121185386 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090462838 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134206206 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096990515 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131354075 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101269881 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132702571 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130155074 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09359872 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131876155 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102253413 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132072263 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102859356 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13211936 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136021159 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099122824 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121555836 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093436206 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123181985 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102582586 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122988968 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104474621 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126000105 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096742934 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123365206 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093018782 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132497075 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131902628 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099492391 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132691047 seconds)
  done (took 5.950857004 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108470714 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138474598 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103529766 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080073298 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115610067 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079407051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136565751 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07853853 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109041973 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106709517 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073657938 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105185204 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077792334 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100815779 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076427735 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074205601 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107275006 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074688771 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075784669 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104864976 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079069533 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071944284 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107872885 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077683043 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07409253 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108995939 seconds)
  done (took 3.540219503 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104712434 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13333704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112107029 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183070391 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159236886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098854264 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131150517 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13835371 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108269563 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118732822 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09532551 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148527645 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109105525 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129350975 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091068956 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136112748 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135280197 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093399736 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12716681 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111178799 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137409949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10164488 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139604876 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131769155 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090882454 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122277803 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096528043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133702861 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097195861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13054477 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095468857 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124606736 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122255221 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103693586 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124642791 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092976242 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141561781 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101140796 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129045611 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091932103 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128873096 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121161817 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112243402 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160439994 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090888378 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128686973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094376011 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130928102 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120375659 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11046193 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130147702 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091352286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124198845 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090641963 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120975939 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1060799 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123666089 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093750401 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130373152 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125972831 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106098848 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124537694 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108045321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120943717 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099425264 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120631735 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092141708 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12102935 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143143339 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093518597 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16075302 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093120391 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123076911 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100692717 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129204215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12765395 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092552271 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136247882 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10144205 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124544632 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101014047 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1258709 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09419526 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139272314 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123848852 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094030631 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12092439 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099837499 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123602535 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093691266 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135227712 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091490578 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123932948 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110621516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120781385 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093743356 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128170796 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125889665 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092785106 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134047211 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097530094 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12283029 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102128393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122052374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124551633 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1026354 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125319998 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092349775 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126063068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098383383 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121860049 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092727415 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124643834 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09375942 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131210911 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098230237 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125704813 seconds)
  done (took 14.708806636 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.2273948 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212894959 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204013212 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290221801 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134162532 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113521695 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211815561 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154185165 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12289972 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158480736 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172873233 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179227374 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168269433 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180488031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169290513 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091959521 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141422626 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133801679 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2432171 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255651427 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142858161 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100930475 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159528115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158318081 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13606741 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130807511 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10963831 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132842393 seconds)
  done (took 5.750878164 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114766954 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154549554 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097562431 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143480807 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147195795 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091992662 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126949896 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09424724 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13390642 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134661072 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091733133 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12815065 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099443982 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130672734 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121340736 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102293613 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13105847 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094361095 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124366671 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096572639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132727377 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100170853 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126542698 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120859519 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101632697 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120607402 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085575733 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141918371 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120744254 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114191772 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119686238 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101005639 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135027945 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092735774 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121369374 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094864568 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124239549 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094246883 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124047851 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090502702 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121113892 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076661547 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120901445 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134944252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099684123 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079337369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12843501 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127211025 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093820948 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119341565 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095817645 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124144299 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096323792 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130217448 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095245183 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123705354 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09614071 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11444963 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099050033 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123997612 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083823278 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120595885 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097570277 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116430469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10135468 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126522611 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091619277 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124551672 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096466738 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128649074 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094168466 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128508311 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090161086 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125409106 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094468988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127368503 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095072919 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121605736 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1211896 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093494102 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073879247 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122362669 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073916272 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12492937 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091352197 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.1212287 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09515452 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128836748 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137068738 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094684362 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130334691 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09368496 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121836155 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09619875 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112646187 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095941434 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138696809 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140057752 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093636457 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120345049 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107182137 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124514769 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091878217 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105580397 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101660704 seconds)
  done (took 12.856496496 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133696795 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151949272 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09441161 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140657693 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154917932 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156586355 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099931184 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129830913 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093915683 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140797836 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092329567 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130224576 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092623756 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136822775 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156234744 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102715339 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123848262 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107218185 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125953222 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16738703 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110420571 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141020735 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109542588 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122800658 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098442536 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139578549 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16070479 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106327206 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135420143 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141202482 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106901343 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15854991 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111510399 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127068669 seconds)
  done (took 5.424928399 seconds)
done (took 49.320968701 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210061852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419353257 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192299381 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.124893618 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220441683 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.222368887 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224697372 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185648621 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.783441641 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.190734681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.431373033 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.702536233 seconds)
done (took 60.026300397 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.218867492 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347429597 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468376513 seconds)
  done (took 3.9335024 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.726306251 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15004996 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451614883 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191199438 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191004384 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.477290811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.868347402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.548522756 seconds)
  done (took 27.994324452 seconds)
done (took 41.993196303 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.207419655 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.233205129 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.19065132 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166676374 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296929694 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223094053 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.681288234 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.307852128 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207309635 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.174058052 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.208715166 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209516636 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200005117 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.607499402 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189711513 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192663227 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.206614008 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.822004424 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617214012 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.189977801 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.190840023 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244231469 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.203883927 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206509443 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.234326174 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190474708 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18964378 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.225430082 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.782393232 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194691646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206583858 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764123037 seconds)
  done (took 190.882673899 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194233053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.220609389 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.348973966 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.219593079 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.471720637 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39073161 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342506171 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.725854902 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211801121 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.202084341 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417931079 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194987366 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.517568021 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.162103246 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22943291 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.258155922 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.410495929 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.509389313 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244318532 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.349689788 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.215456983 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.440173981 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.343168556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.361677203 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.195739471 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.208600803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.204483288 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.2178378 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386699651 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.30818422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.208007272 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.247845345 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815060839 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.045710619 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.200083842 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.236770156 seconds)
  done (took 149.378972362 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193992782 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191609249 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194037293 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195198334 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229324713 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198333439 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776460888 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777476613 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.70712524 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.610963685 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.611279101 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506050565 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193781832 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290819247 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206852954 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194119516 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211184407 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238020065 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195461046 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19360718 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781863906 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20987921 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.287725451 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373015791 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210408326 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229766625 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582535139 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193305517 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228846324 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528797469 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23978149 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195194094 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601852695 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.805797389 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306926266 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196545209 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232530421 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.19642876 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476556533 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199522174 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19795252 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197084543 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202242132 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905743341 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202041337 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78327272 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199455417 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171858245 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196509508 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196355376 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.447625805 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.836612805 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210111539 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195715547 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199363697 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195132696 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198419794 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231559861 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.401185014 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292136456 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216295756 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203061629 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227632077 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194155382 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.475922816 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212452224 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.276575094 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270578487 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.411942598 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778991752 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201351062 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298171818 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317415853 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19704063 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196732272 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201429885 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196109995 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310294739 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195174937 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.609161681 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373673115 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211382708 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.621954558 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298131029 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195437476 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617438669 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201809563 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199407814 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962562135 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291849827 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197736943 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196949018 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197569111 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.615935129 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786165849 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.495597915 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198411298 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.480393535 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.199431186 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196115172 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.62155868 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747670545 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891827527 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201738477 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312460719 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365927354 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210884481 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196895611 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.589956968 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199225129 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253450771 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191658875 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195068242 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594014825 seconds)
  done (took 365.680790664 seconds)
done (took 707.061916753 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.791437417 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.780311579 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.88939736 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.776170799 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.742165075 seconds)
  done (took 10.104025608 seconds)
done (took 11.228713731 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38498013 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378896249 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254303976 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381366551 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230661757 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397123172 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360383164 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217753514 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298160819 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277787906 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29536818 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2459982 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234778921 seconds)
  done (took 18.079531209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509399277 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507336378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258274031 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519080496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234653428 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50746852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393814308 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411442791 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407721146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227195164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208838857 seconds)
  done (took 16.308617891 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515565212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517184023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265981064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516017163 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239490914 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522375396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422680796 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414855154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413552526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228121056 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20842566 seconds)
  done (took 16.386986167 seconds)
done (took 51.90066474 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209002754 seconds)
  done (took 2.332068304 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24385384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406635548 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224655269 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214609546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208727303 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211667489 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214919851 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212783949 seconds)
  done (took 11.063369838 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208623733 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207953737 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20778828 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.207157445 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204917247 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206957864 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206730781 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207039283 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204825044 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204052873 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.205973912 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205162631 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205891594 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207941394 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207891752 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206522344 seconds)
  done (took 20.430339157 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20782235 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206543438 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20641026 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205604801 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205706217 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207617557 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206931991 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206260218 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206191069 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.206498994 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208319156 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206102879 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.206378874 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207491401 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205725368 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.207891987 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20711434 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206042503 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212080426 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205243278 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208027103 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207327693 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.206762603 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208346916 seconds)
  done (took 30.094888103 seconds)
done (took 65.045740627 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.830797534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.872383504 seconds)
  done (took 6.830623372 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210887757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209672516 seconds)
  done (took 3.550601645 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210504699 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210055793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210421505 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210466216 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210320452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208345365 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210266958 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210932111 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210027361 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210944613 seconds)
  done (took 13.229060073 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210405315 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21130096 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207669053 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211317951 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210305705 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208467278 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211765315 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212315813 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.209823492 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208956997 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210433887 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209413107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211525165 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209255949 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212570232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210659962 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209053139 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208600802 seconds)
  done (took 22.910486254 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.212263957 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210789854 seconds)
  done (took 3.551601556 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210315295 seconds)
    (2/7) benchmarking "second"...
    done (took 1.210743437 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210528564 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210511659 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209229627 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208891347 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209789008 seconds)
  done (took 9.597426862 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213110225 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381942816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.470056491 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.801831546 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214336907 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216646623 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.072786846 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215326467 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21839143 seconds)
  done (took 13.93306338 seconds)
done (took 74.728126662 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.234119894 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.218921403 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.451472692 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226672668 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221995044 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.549421937 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.234860115 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.327956406 seconds)
done (took 37.595779551 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.21171263 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.198941459 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.970584411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.196212536 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284023977 seconds)
  done (took 18.777904997 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.24823832 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543535733 seconds)
  done (took 4.919504609 seconds)
done (took 31.040374714 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213286246 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212612225 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212009599 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.211878067 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213372841 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.210163579 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214305733 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212719306 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212870331 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214729746 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.215218267 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211635006 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.213753324 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214730276 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212292502 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21160741 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213405735 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215168414 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21112747 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212658869 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210120862 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215667653 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212880636 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211021973 seconds)
  done (took 30.237373007 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213678086 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211091647 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214770354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212175751 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212526594 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211958652 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215586405 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209351962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21400781 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210893088 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211475167 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.2112441 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216359199 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210710118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215701968 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.20907403 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214008337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210065704 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210486465 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208518126 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213360358 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209286333 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212994033 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211364714 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210365208 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211138164 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212481065 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212030761 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213706286 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213522655 seconds)
  done (took 37.493041229 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220132629 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223263411 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213738964 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213779712 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215711782 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214742946 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213263923 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213998306 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218264225 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213597969 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21450498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213150989 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214231277 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212884803 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214637817 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215938835 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216972564 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213911505 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214574629 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215958309 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214340564 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216309622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215024937 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215731969 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217504405 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216408415 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214245216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214502527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215672637 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217738694 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216245273 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216067471 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216352502 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217565012 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217849975 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217152626 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223074528 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225068999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217596121 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218705713 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216571618 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216330328 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216478669 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21487275 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216535092 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218141864 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216872011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216346562 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217013168 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.219585368 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216491023 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217740862 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218904495 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216772451 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217796437 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217640511 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21565111 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218497278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21652946 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216089442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217352516 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218057079 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217025322 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219348677 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218013559 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21972791 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218190863 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216910187 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219350228 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217796857 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217358989 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217833669 seconds)
  done (took 88.738950883 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220969816 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218165011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217125456 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213851108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211976826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218367828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215134797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219252936 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215750003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217800102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218192191 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213550104 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21284638 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218410651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21557374 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215748934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218291607 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216378005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218007422 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217786121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218542118 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216487475 seconds)
  done (took 27.901612536 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21926705 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222523221 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218684106 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217527639 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215775026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219682181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217698456 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219082896 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218007501 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215067542 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216962483 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223029528 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213582273 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214896455 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216195865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218445067 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219399605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217423996 seconds)
  done (took 23.055466258 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215465626 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213382013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217526807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21585664 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215967517 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217422551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214133166 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217887057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219103298 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214643038 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21747772 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218563519 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217414885 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215174339 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21719957 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21415124 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217861247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214949791 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218033007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215883381 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215375065 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218187958 seconds)
  done (took 27.89348434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220841626 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217562221 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21552147 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214457171 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214753795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219059645 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218787351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215543217 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218751122 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.215930675 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216576269 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216821166 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.216553138 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215250032 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215129273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214884963 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218413772 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217928755 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218040318 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21751933 seconds)
  done (took 25.470499875 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22019201 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222584199 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219437123 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218209663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21933414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222039669 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220853963 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221258996 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221919958 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222394536 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220529344 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220447002 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220385578 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221263842 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225215872 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219905535 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221874808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221296458 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220980688 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223053317 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2237994 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223152211 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223114946 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223858943 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22354403 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220690069 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220640716 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222288629 seconds)
  done (took 35.33916437 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221550601 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220052019 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217534175 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.217293219 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219233091 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.21747518 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220076236 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.218351316 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219866223 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220560625 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222117102 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221248133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221805968 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220411943 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22021895 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2214651 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221406268 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219207316 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219557144 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220333393 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22124885 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222199445 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223526255 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218609896 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218915922 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222819983 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222642496 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21921426 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222748377 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219260682 seconds)
  done (took 37.746514272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243459507 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240957994 seconds)
  done (took 3.621295607 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222572517 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220480994 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.219251406 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2174396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217314449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220870571 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222093055 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217310651 seconds)
  done (took 10.894359167 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222691864 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222499906 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.220294534 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.220332867 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222478798 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222918127 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228351118 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240918618 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.22054537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224002603 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.226566172 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.227477561 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222864118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220538231 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.221975995 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224608203 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.221350341 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.220650697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.220047088 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223591145 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220365815 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224198785 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225144419 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.220138982 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225820545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.232574938 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242863005 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.221027982 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221287503 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225455332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.220464273 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219104038 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22467322 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22312448 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.223782876 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222070031 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233636042 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240119092 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227988532 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240287368 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226071613 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.216838595 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221020043 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.221291561 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222672324 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222390741 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.222904568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.216467847 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224996469 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223826662 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225610147 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219865953 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.217803593 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22247338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224217625 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228531548 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240675306 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.224645798 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231211456 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233713036 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250071419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244359174 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224495463 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.220673604 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232702828 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242525372 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227515971 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.236121807 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.219428255 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.222052202 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.225750016 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251143187 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.246166423 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.221967883 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223220045 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.222417667 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222114729 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222236427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22800927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.241561305 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220437007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225024506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230442969 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240935676 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220853971 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.221519806 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.225947685 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.223687138 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221935629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233769039 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.236964591 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.223683396 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.220099896 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.219661322 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.221547617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222511425 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221321884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224484386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218185098 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.218444959 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220880943 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225039805 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228479306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220710812 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222586661 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226134291 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.234389818 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217514662 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.221871336 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.214121629 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220164611 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.22264115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.222054922 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.217628187 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.21944525 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.224158734 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.221744296 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.22065055 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218717368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.219617688 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228544216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.240599496 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.219819636 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221396715 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.224875963 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.228193073 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221874881 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.224052922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.222394538 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.218591305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.219244303 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.221646214 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.21512 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.219237088 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215664137 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2214118 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.217302393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.218336367 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.219292323 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.219925128 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.215524702 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210684432 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.211364809 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216224244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214280695 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.212635388 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.222088246 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.230090738 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.213909849 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.210608056 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.21058377 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.210588992 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.213847875 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.216174071 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.213726139 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215959244 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.213775152 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.210579784 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213618605 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.214203108 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2176971 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2141949 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217176638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.212805827 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.214233565 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214240362 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.20738277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.212891124 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.212662093 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.2126327 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.214570975 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.21047748 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.213143113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.216914625 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212169439 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.211439722 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.215149765 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21152772 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211902031 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216400282 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.214773416 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.217140197 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.215208444 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.219545877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.230577457 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216107264 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.215697208 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.214985795 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.21285124 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214590457 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.213895007 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.220481213 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.224762643 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230479724 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.211762335 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.216339487 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.220183377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.223118291 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.219581634 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216732025 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.216659614 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219191519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21830946 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216372695 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.222405258 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218369318 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218842604 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.219585514 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.217136544 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.217372429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.216347591 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.220947824 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217549157 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.21455049 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.216560052 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216634298 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219552055 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215055091 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.212747973 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.219593213 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.22243267 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.219162274 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.223409292 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.21959784 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217697903 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220667115 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.217768289 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.217559141 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.220556121 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220740478 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.221192386 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228004433 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.232591996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.223360697 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228905599 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.236896286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.217508846 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.224895932 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.219978467 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.215976781 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.222782502 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.228816869 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.220629006 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.221536207 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.222194108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222123743 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220574574 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.22765248 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.236207377 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.220739327 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.219655636 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.224441029 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.215076034 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.220521738 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221864624 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.224170397 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226203664 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222562557 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.22090138 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.222072401 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.224203218 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.227059989 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.224806738 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222630398 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.231486844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.227583231 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.223424856 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.223625056 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.224912923 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.227597056 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.219802685 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.218653438 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.222730231 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231613601 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.243952226 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229715358 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.236653259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.224657998 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230357926 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240548863 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.224976067 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227158098 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224342837 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.220054335 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.224110707 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.223318559 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222814957 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225028971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224346159 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.220105078 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.22865101 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.221618824 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.222247444 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.227023739 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.222913549 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225804711 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.226510805 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.227298589 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.224651514 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227760131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224651709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.225765527 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232436998 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244092243 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.227969927 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.226760095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.224078822 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.22582238 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.227217509 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.230137448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232056556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.230955025 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.230643016 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.229820889 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.22590639 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232808237 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.227747837 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.229354878 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.23600324 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.224547854 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.223624657 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.226539445 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.22880266 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23198405 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.243771747 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.226614702 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.228148114 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228490414 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228898713 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231383627 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230974616 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223818506 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.229949247 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237857648 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.245131411 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.228590628 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226814245 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.225141215 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.227529281 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.227610996 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.224616852 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232322106 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.226145971 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.231351233 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.228197831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.229144439 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.229197334 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.23179909 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.230363156 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.226952513 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.229346406 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23524883 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.246122216 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23229064 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.226945952 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.232500066 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246316736 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232857824 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.246406129 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.226839814 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229851331 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.226884256 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.227605923 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.226277009 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23017868 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.229036821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.22597346 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.233737664 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227150341 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.230147576 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.228088041 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.230405699 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.224934918 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234233952 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247490571 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.229707989 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230578537 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.229083376 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229015436 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.231956513 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.233297722 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.232605232 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.231201493 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240057586 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2345842 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.232197722 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.233345965 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23004656 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231547819 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.23480921 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235736925 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235207793 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231965062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.232038501 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230496769 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237108636 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.231602177 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.234067998 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230710641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.230049708 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.240340119 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.245415323 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229201017 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232494669 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.230339862 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.228534954 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.230928999 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.228748286 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22714978 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226657295 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.230561686 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236584815 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.236701312 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.228889569 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.229361345 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232503603 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.229105559 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230328998 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235953185 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.231513815 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232049744 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.231473292 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.232846494 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.235612716 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.229053277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.229401704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.229634239 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230716658 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231412965 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.237792718 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229984124 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.231398613 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.229490835 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229163826 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231627303 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230062282 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.234942379 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244245802 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.235399276 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.234835365 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.236161384 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.229573348 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233248285 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.234613337 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.226781788 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232790746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.229297718 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234317038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.232432363 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.238964469 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23211493 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.234658418 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.243904468 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.230534348 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239047253 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.24874525 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235792884 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.229551041 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.232940914 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.22979737 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.227855812 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.230531358 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.228781509 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236039465 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.249847798 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229356293 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231836906 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.229372721 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236270627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233066093 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229921665 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.231605956 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.230730158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.230096895 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230849905 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231439198 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.227825795 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.229942517 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233400874 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234669451 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.236042844 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229858314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231721879 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.231210471 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.231860179 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236206312 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231778494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.230749125 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.228431719 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.23243822 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232199377 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.23149327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.235660762 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.23151431 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236669194 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.232184531 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235562685 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2342953 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.24149146 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.238124202 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.231912172 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.233029672 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.237634437 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239558152 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230906361 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.232687236 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231581116 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.234039573 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.233106715 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23320879 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.236757079 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.235336573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247245973 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.251135752 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232270541 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.234813728 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235562825 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.233309341 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.232732262 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.234493989 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.234981134 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.237225763 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.244376169 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.234089857 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240594733 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252081686 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.235412572 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.242038908 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.238146267 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.240342073 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.235636733 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232794766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235736257 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.238660736 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.247515421 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236660953 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242844885 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265549743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.245762779 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.23223616 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.229463629 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229255939 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.232813784 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.231684845 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.229261297 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.233014819 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221777595 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.223694946 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.22436301 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229051878 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.225815702 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.225397394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.225338194 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.223972523 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.21740447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.21687658 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.215896162 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.216950471 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.216290654 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.217140553 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.217457282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.220752712 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223624982 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.235017597 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.212159211 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.212060808 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.20864083 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.215111103 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.2137155 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219569122 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.217046349 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.208726678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.208950987 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.209770944 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209131301 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.207773779 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.209711167 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.209066973 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208266626 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.20610375 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.219461691 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232440846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21378408 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.209372093 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209712043 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.209125189 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.210773081 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210585562 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.209599837 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.211842864 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.211843572 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212451189 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.209368891 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.209707984 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.213129327 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.217108916 seconds)
  done (took 731.970806611 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.208375328 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208763348 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207562557 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20936686 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208715886 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208295458 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208083639 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207829602 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208824977 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208608678 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.208796504 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208885341 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.207906882 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.208949972 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209439855 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208790713 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208762229 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208417123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.209191394 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208197872 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209401628 seconds)
  done (took 26.510398548 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.211474773 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.208968694 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210121588 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212812457 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209463636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.213657925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210453441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213090028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213234746 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209531798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214027557 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212910569 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.211022993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.210441911 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210440514 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213260191 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212895112 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211244803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.213193949 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21120074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21302984 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.210605638 seconds)
  done (took 27.787239474 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.213060966 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.21299576 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.213042079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.210964887 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.213569749 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.2112654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.213628125 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.213684166 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.213571941 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.215245889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.213322339 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.215127765 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.219736818 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.216882769 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.215771321 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.214475966 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.358952553 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.214029202 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.214052288 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.213093742 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.211473001 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.218625643 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.231711895 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.21219307 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.213350893 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.21465182 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.213922038 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.213689122 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.214914834 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.216295537 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.217218596 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.214425832 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.215268982 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.217726196 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.214366766 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.216806737 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.218441852 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.215044167 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.213037479 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.216936649 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.224193081 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.231597185 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.215463972 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.222212364 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.23441839 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.215622738 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.217282719 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.220566344 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.213081976 seconds)
  done (took 60.873872416 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.215625438 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.216701646 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.213162538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.217195594 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.216642941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.217300037 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.217166048 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.217583951 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.214096795 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.21497853 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.217016675 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.214188076 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.215054228 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.217381834 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.217243793 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.216015641 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.21452385 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.215978732 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.214493356 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.215520027 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.215497211 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.216956661 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.218301134 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.215706507 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.218307822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.215779809 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.215951557 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.21777595 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.215924161 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.215449469 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.218484312 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.218821314 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.21864286 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.216886921 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.216508579 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2182365 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.217428553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.215672249 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.219156303 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.216075091 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.217744895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.218589002 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.21907098 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.218398143 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.216828606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.21605296 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.215789411 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.21670341 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.21671777 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.21931758 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.218364527 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.216713018 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.220114683 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.217586821 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.219239772 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.219829342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.216349334 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.216790968 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.21935573 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.21757923 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.213333612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215572073 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.214969846 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215863696 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216170795 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.212493521 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214272575 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.214545442 seconds)
  done (took 83.869082186 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215821561 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.216152177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215645319 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215083878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215258637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.216804608 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218142225 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216040972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217073557 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216335095 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216196054 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217020664 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217109277 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216722576 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216830067 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216930158 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216239119 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21736828 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217810681 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217512976 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.216554451 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217121152 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.217447483 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217854371 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218473777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.218471815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219544479 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217948229 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215012384 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217033748 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218975158 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.217666527 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218302284 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.218542806 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.21888627 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.217830659 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218250259 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218872744 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.219766302 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218703174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.218332111 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219459994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218484342 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.217551992 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218299793 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216882954 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.219505111 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.219371341 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218645691 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219065345 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.21768255 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217919732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219348171 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219467477 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220608382 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.217667877 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218278564 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219202897 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219222776 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2185712 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219560132 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.220567436 seconds)
  done (took 76.642782674 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219687161 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220497064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.217440335 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.217300145 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2201034 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21739872 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219713439 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.219796218 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219772549 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.220576993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21939804 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218332697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218420031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220793514 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218382007 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220042026 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218400252 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218218744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220464021 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218850278 seconds)
  done (took 25.520077489 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.218912005 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22277721 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.218440447 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219560738 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.220697698 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.218293159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221219893 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222652328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218862645 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220469323 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221177445 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221824487 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21920775 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220327041 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219652751 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220072603 seconds)
  done (took 20.661742896 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219467564 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.222081087 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.222022481 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.221882749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.218948138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220744582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.222956573 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.220197642 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.219364194 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.223727605 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.222331246 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.223304488 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.222740656 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223372631 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.220738439 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.224385409 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.220447742 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.219727614 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.222688305 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.222907668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.22066295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.220726841 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.223247834 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.224176582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.221374065 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.220394827 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.219996941 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.222028241 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.223215459 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.224167162 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.220846735 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.221293136 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.221848479 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.221263602 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.22376095 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.220997177 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.224140848 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.224748343 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224980479 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.224289133 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224284247 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.2220797 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.22518278 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224927643 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.222259099 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.224640957 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.222899119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.222735814 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.222112607 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.220640928 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.226124086 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.22506379 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.223589069 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.22566742 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.224311162 seconds)
  done (took 68.379287432 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225200673 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226173022 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222313042 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223333907 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225907965 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223415554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226868055 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.225660973 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222961448 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226546644 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224200239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226668821 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222111941 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222371755 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224315812 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225528053 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21983566 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.222406095 seconds)
  done (took 23.174532084 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224480626 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2242279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226758221 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224224209 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.223443758 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225521726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224541691 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.226161335 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225622189 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223789249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224243048 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225182786 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226884255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.228064407 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225008984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222225305 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.226807375 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22690025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225702923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224813735 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227931368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228299408 seconds)
  done (took 28.103554542 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.225696305 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.22564602 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.226061643 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.242396417 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.243797645 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.249698572 seconds)
  done (took 8.557479567 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235133152 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227923647 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22540001 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229004881 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226373323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22586412 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226261497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224993462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227980414 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225901279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225141954 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224881673 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228567549 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225617911 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228469243 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227995299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226766952 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226713335 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225159581 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227144734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226611404 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22609366 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226027423 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226838049 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226439379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225865447 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230434586 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224924715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224957548 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22994993 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228275596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225326607 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227478272 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224914149 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231013572 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227943814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228507821 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226462775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231050174 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226908562 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230297385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229572433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227097389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228622781 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230013583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227526893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229320135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228131498 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226798008 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231793486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231682419 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22869733 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231395099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226049729 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231609063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230765632 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230260357 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228570495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228851613 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226937875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226009251 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229128943 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224809287 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230319484 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232560374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229671376 seconds)
  done (took 82.211516002 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22745483 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.230236289 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231455775 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231128234 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228404742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224580174 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227018221 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224056266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232284387 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23110122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230478053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228019591 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227435412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225799741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231043599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227988158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231419468 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231521492 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225150183 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231159262 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230413296 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227411538 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228235433 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228347598 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229721588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229137021 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226319597 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227066997 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23146237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227679359 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226700357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227053859 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226815106 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230424141 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226289445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227650337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229074336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228133753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226147672 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230170333 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230193246 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232155443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227527435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2298985 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226991898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230928556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234531955 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228598013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228915111 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23041483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229857145 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232040752 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227500338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231774143 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227662553 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231098679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230989827 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228888868 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22932714 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23564201 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227828696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232764498 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233975181 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227733025 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229304153 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228789864 seconds)
  done (took 82.276106358 seconds)
done (took 1696.0596508 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.400742171 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.348769821 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.229562105 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.239958272 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.23148095 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.250551782 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.250326716 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236059293 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.23161787 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.234997058 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.232783244 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.420318652 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.233110477 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.233314269 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.2331934 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.330998081 seconds)
  done (took 41.482908315 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.258892377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.241299938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.345980474 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.260831383 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.259188521 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.417011537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.296338279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.24599814 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.399255995 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.286550698 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.700140149 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.267246624 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.24512558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.283066972 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.261323516 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.416015454 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472317619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.712239039 seconds)
  done (took 28.516759686 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.644400801 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.26959912 seconds)
  done (took 9.069572719 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.263485628 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.248738844 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244349146 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.241111223 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.233732877 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.250446582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.23939559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.232859485 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.555963679 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.356124163 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.241083776 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.246965435 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.254038238 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.237965093 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.234791082 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.275354812 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.411152412 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.239283815 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.236064491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.250394455 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.241043762 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.327093388 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.281677052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.243660129 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.35527967 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.570995455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.245451729 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.244943052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.38502429 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.236376687 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.236412242 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.236567403 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.238331158 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.820764202 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.660314949 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.247018377 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.274661655 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.244757674 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.236064567 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.370523629 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.239318558 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.243865053 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.231631213 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.679426402 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.380766924 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.354031694 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.401050621 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.257331529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.239406633 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.299872222 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.23848248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.239832582 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.269649214 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.981792362 seconds)
  done (took 105.414252396 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.285862806 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.621104823 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.399978445 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.251756669 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.948841833 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.987207651 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.250960709 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.498119002 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.289039881 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232317058 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.511266652 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.711079177 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.251611319 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.233487443 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.688523223 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.241617223 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.225808762 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.917531515 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.234886537 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.226341951 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697673052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227997003 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.229218497 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.389361222 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.262190531 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.661319739 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.528625976 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.718217234 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.244070809 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.222032452 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.669151633 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.241085528 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.239825794 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.227109378 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.477608739 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.566975235 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.549077295 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.246491309 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.272397164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.231012322 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.25290431 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.651346911 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.560988317 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.2406055 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.23363726 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.656498713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.244491714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.237067223 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.229695765 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432930549 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.854838221 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.233085952 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.520708746 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.232845932 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.585005789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.292937242 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.255579857 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678084655 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236791313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.326245663 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.233762949 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.216106259 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.216056156 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.217164142 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.214937914 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.537795923 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.564029895 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.219409024 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.535551718 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.67090809 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.229520033 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734985667 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.092118168 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.235101275 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.303747874 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.214818303 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.761483705 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.683381962 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.264314339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.215633471 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524211261 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.232396417 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.482615262 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.230583224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.216395487 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713831556 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.227440948 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.245134145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.225592619 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.21581581 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.989212748 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.220263516 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.489074096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.293761119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.216169694 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.216107241 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.24794184 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.217359057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.231617374 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.219368454 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.717593041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.239658636 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.180184595 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.237891916 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216805781 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.223036688 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.218679959 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.219618679 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439491891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.637172718 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.24228287 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.218056382 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.217588966 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.224021426 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.383492421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.222766299 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.503477527 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.234931332 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218123555 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.224785887 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962289081 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.269602957 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.217075783 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.240817996 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.110138383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.425563871 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.235938003 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.217983376 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.218811627 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.235354272 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.40477501 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.242393737 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.298255254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.221245485 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898452633 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275555999 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.252679943 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.495179054 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.224510683 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.125504186 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.244999474 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.218913217 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.500292848 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.479423987 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495771013 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.220585743 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.234775721 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885854052 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270141273 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.364897618 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.241982884 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.206731026 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.415462641 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69181479 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.222006194 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.872549229 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.222593169 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435612959 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.220879122 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.527857179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.69710122 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.240859581 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.223701929 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906496189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.916127269 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.9845796 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.222671245 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.485118427 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.174084843 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.700371131 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.220799372 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.220926914 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.801389193 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.222556332 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.226074985 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.220931559 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.221130429 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.286284632 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.393056632 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.454425956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.228298062 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.64829891 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273580962 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220613728 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.23493901 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.224365395 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.569010533 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.23612406 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.221904829 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.255782891 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.223199057 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.231677393 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.670095476 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.158882766 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.230442959 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.37286931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.836334753 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.238928741 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.22231913 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.801716468 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.444914425 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74422427 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.286122635 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.508020141 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.238316665 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.259496227 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.913550471 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309093159 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711352917 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.239822241 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.230029002 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.800201743 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.239186298 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.574510346 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.223714284 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.225941237 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759581282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.239444769 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.223004288 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.415161909 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.246107543 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498128695 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.224272186 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.244969194 seconds)
  done (took 1085.322026811 seconds)
done (took 1270.950034964 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.224829062 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.231049325 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.212356244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.230567513 seconds)
  done (took 26.045441691 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.233864863 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.231638202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.231445028 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.230189987 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.233189502 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.231654598 seconds)
  done (took 8.538734013 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.266753799 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.232301953 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.232272914 seconds)
  done (took 18.87943235 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.424005897 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445938193 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.538880312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.281825831 seconds)
  done (took 9.840930071 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.234315199 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.235534672 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.235006749 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.235431043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.23553707 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.238530256 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.236357531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.233831354 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.237661676 seconds)
  done (took 12.268279219 seconds)
done (took 76.719603818 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.243556783 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.206473225 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.018812172 seconds)
    (4/286) benchmarking ("sort", BigInt, true)...
    done (took 6.23347058 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.213917312 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.231773801 seconds)
    (7/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.097247941 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.059190576 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.484866541 seconds)
    (10/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.383635722 seconds)
    (11/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.327392654 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.267960941 seconds)
    (13/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.207154544 seconds)
    (14/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.253697504 seconds)
    (15/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.56942797 seconds)
    (16/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.986102135 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.275859935 seconds)
    (18/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.57715177 seconds)
    (19/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.259311003 seconds)
    (20/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.325423638 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.115534924 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.284044845 seconds)
    (23/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.948244556 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.262164845 seconds)
    (25/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.255883095 seconds)
    (26/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.314223029 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.736989889 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.846286737 seconds)
    (29/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.946923348 seconds)
    (30/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.271524916 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.25408441 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.228436728 seconds)
    (33/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.577678559 seconds)
    (34/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.215789044 seconds)
    (35/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.29655294 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.215137716 seconds)
    (37/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.266770168 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.331488409 seconds)
    (39/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.314373552 seconds)
    (40/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.21046207 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.641950722 seconds)
    (42/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.376001762 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.593324818 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.553671534 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.970782748 seconds)
    (46/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.947061785 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.11597104 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.217390319 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.373587782 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.489633955 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.950108955 seconds)
    (52/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.03910788 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.220343889 seconds)
    (54/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.440314481 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.171470778 seconds)
    (56/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.220601234 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.812927147 seconds)
    (58/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.212861 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.288528441 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.231542346 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.151857506 seconds)
    (62/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.463369498 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.247854302 seconds)
    (64/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.801170559 seconds)
    (65/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.006357383 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.666610923 seconds)
    (67/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.056912907 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.21734292 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.872542982 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.261644602 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.250467746 seconds)
    (72/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.566794385 seconds)
    (73/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.340756393 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.924857908 seconds)
    (75/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.403132878 seconds)
    (76/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.222941871 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.825003588 seconds)
    (78/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.700606915 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.444416662 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.665025974 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.40935889 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.854124863 seconds)
    (83/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.719658629 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.3644743 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.045699305 seconds)
    (86/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.910620221 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.640375731 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.68057955 seconds)
    (89/286) benchmarking ("sort", Int8, true)...
    done (took 6.251858486 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.336925223 seconds)
    (91/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.314028879 seconds)
    (92/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.341969195 seconds)
    (93/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.232500095 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.21612782 seconds)
    (95/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.259922437 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.256608176 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.859730406 seconds)
    (98/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.35756452 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.990429644 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.341063517 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.447776301 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.630955666 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.549881282 seconds)
    (104/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.469983814 seconds)
    (105/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.414119794 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.219617393 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.235879134 seconds)
    (108/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.407990458 seconds)
    (109/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.804478115 seconds)
    (110/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.053766048 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.23353086 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.220627616 seconds)
    (113/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.251439877 seconds)
    (114/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.237125844 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.712440715 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.753540765 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.279084466 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.318120737 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.504748049 seconds)
    (120/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.320126848 seconds)
    (121/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.729257392 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.398344217 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.957769388 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.501124193 seconds)
    (125/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.298744182 seconds)
    (126/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.23330034 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.610354444 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.267353855 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.213381314 seconds)
    (130/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.238600669 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.98237846 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.227994481 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.245234025 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.950311182 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.366488316 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.636133996 seconds)
    (137/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.232030967 seconds)
    (138/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.342068833 seconds)
    (139/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.226655287 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.235831225 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.033798425 seconds)
    (142/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.229725278 seconds)
    (143/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.216895086 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.977057247 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.268788571 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.366976036 seconds)
    (147/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.366877541 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.341605485 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.319791021 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.258627211 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 5.512104622 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.819629254 seconds)
    (153/286) benchmarking ("sort", Float64, true)...
    done (took 6.23543724 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.216873313 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 6.272357013 seconds)
    (156/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.36064659 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.056677221 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.383198489 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.580894738 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.242841944 seconds)
    (161/286) benchmarking ("sort", Int8, false)...
    done (took 4.252599753 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.217854035 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.551082558 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.224763587 seconds)
    (165/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.420526484 seconds)
    (166/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.280894373 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.344437904 seconds)
    (168/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.442049864 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.239589886 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.317604277 seconds)
    (171/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.217816114 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.254290346 seconds)
    (173/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.345002931 seconds)
    (174/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.959743505 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.285421664 seconds)
    (176/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.247555704 seconds)
    (177/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.320823101 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.582131021 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.580967037 seconds)
    (180/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.225226912 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.313320538 seconds)
    (182/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.218157599 seconds)
    (183/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.302270071 seconds)
    (184/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.243314534 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.409020084 seconds)
    (186/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.713816134 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.265215688 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.29463426 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.257251394 seconds)
    (190/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.822628888 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.643688781 seconds)
    (192/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.727203347 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.225343766 seconds)
    (194/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.219169585 seconds)
    (195/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.245454908 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.264364068 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.223282639 seconds)
    (198/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.255104605 seconds)
    (199/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.239606155 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.132145953 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.445752708 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.861366093 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.257272866 seconds)
    (204/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.243918303 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.571633787 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.472640878 seconds)
    (207/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.427067319 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.263414381 seconds)
    (209/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.219395379 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.296346974 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304465675 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.242013937 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.222099672 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.229405693 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.24154809 seconds)
    (216/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.01398487 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.249466765 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.306136001 seconds)
    (219/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.443364349 seconds)
    (220/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.59341556 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.221244102 seconds)
    (222/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.499372776 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.322038851 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.281533081 seconds)
    (225/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.263831175 seconds)
    (226/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.432042669 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.274016696 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.804741236 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.262228144 seconds)
    (230/286) benchmarking ("sort", Float32, true)...
    done (took 6.242482027 seconds)
    (231/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.491823153 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.355530361 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.443262855 seconds)
    (234/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.344754871 seconds)
    (235/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.810118918 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.399559877 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.261596908 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.270653285 seconds)
    (239/286) benchmarking ("sort", Float32, false)...
    done (took 5.233650103 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.228751838 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.65187193 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.237923143 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.633322074 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.449602178 seconds)
    (245/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.518699021 seconds)
    (246/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.277981047 seconds)
    (247/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.327486831 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.22303821 seconds)
    (249/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.22228479 seconds)
    (250/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.251357745 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.475260082 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.981256408 seconds)
    (253/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.607560886 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.099453672 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.084999809 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.126417452 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.228793576 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.349230305 seconds)
    (259/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.604466002 seconds)
    (260/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.670387854 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.346437896 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.341360623 seconds)
    (263/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.736231213 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.275001151 seconds)
    (265/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.269455334 seconds)
    (266/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.248806448 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.362287518 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.053567211 seconds)
    (269/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.269036835 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.263507044 seconds)
    (271/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.044334463 seconds)
    (272/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.267345606 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.286023282 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.566042081 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.285580565 seconds)
    (276/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.595824485 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.301174765 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.509200676 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.253210113 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.225527846 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.273127857 seconds)
    (282/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.242209096 seconds)
    (283/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.615252377 seconds)
    (284/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.750767796 seconds)
    (285/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.741705854 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.260878849 seconds)
  done (took 905.724412248 seconds)
done (took 906.873537538 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.277189055 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273791025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.254338569 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.27643494 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.36634495 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.279101663 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.266161435 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.258049117 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.303523851 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.304743739 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.253040239 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.277455615 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.256192115 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.254762314 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.255757986 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.270758508 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.250749023 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.254845856 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.274447434 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.265222681 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.272566528 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.256373587 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.305958576 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.27874502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.259370976 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.259569138 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.259904654 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.275631952 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.368541181 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.260068537 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.259583993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.267669158 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.251195435 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.254690657 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.251922648 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.276359036 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.268507964 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.267113358 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.260357193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.289460017 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.646513128 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.277585852 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.258897117 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.259185372 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.258608652 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.263225416 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.258264269 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.26417703 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271655674 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272597929 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.643738258 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.295387427 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.261635822 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.258674931 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.268765886 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.258092413 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.261910693 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27664958 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.277021078 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277047822 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.238942879 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.262791314 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.260969634 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.276043157 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.266969421 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.675492183 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.275956253 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.264445559 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.645091927 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.286488006 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.685191162 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.289796682 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.260622656 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.273693789 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.291453528 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.248758947 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.256877841 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.259568959 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.267097491 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.259937893 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.269683171 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273938173 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.26606088 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.262178711 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275753212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.283661788 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.270674055 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.262917965 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.269260077 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.279714959 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.265930934 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.271196221 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.263425021 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.25672857 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.270779703 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.265484402 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.263753019 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.264217888 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.265775092 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.271964801 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.641286054 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301783508 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.25794279 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.257174043 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.261345299 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.274190556 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.642904963 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.284191598 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.28270352 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.309892413 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.263121075 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.239612254 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.265656084 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280530828 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.271704908 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.266075149 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.258155574 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.238753565 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.651517305 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.299768595 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.264159006 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.261503171 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28088029 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.264248652 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.25966891 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.254258584 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.264657325 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277866436 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.38463669 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.274680087 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.29441883 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.261416164 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.267533456 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.290505155 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281627167 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.295183946 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.266307403 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282074412 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.280141435 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.260653061 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.275297049 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.274434261 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.265935312 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.27094893 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.258581291 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.291552874 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280210477 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277842285 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.285267051 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.384793931 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.262850244 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.241731523 seconds)
done (took 213.605834587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.322862615 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.253576796 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.347318682 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.261568962 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.3600935 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.361294683 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.259816723 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.259300864 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.259512131 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.640077337 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.258691172 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.268883915 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.2532871 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.260312302 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.343381889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.261891503 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.259303595 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.62600011 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.26201007 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.333132449 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.255045595 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.260172503 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.261981591 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.64718168 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.254615233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.264141722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.33353162 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.263356468 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.610952282 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.25996903 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.262716925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.611227952 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.353367612 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.282270513 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.273996332 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.270261958 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.362872982 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.280747904 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.344975616 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.344599756 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.349513772 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.301986025 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.262558789 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.257252039 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.264551157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.265563017 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.260786415 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.291075097 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.264071522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.26186838 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.604511135 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.273954286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.262053048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.262864184 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.262389414 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.292592121 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.263266477 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.264534359 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.354736751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.264755837 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.326668242 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.651018697 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.641953698 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.265534132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.264759825 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.263311496 seconds)
  done (took 143.724424308 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.332509022 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.337598184 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.374166358 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.281534532 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.315144755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.377005646 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.281138512 seconds)
  done (took 10.476753397 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.271715489 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.266394186 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.315255306 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.316150308 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.265616622 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.44481927 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.266588682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.277427747 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.264673709 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.317888874 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.267374657 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.267581063 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.27263712 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.263347008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31416081 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.278367837 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.380693417 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.267739911 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.267354435 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.422698176 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.265142123 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.274425657 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.319503886 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.277516826 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.267994911 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.272695297 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.082842421 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26790238 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265225443 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.267911656 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.265575769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.341935464 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.268615741 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.266442358 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.266232643 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382958939 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.266660948 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265600774 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.268261783 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.266221599 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.267626251 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.267547316 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.268064074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.266185294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.26862621 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.291118515 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.26916636 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.269204341 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.269449736 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.268512217 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.317377112 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.268450861 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.266801795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.266284397 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.323851809 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276713124 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.268991208 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.265918692 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.268732769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.267469346 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.425039895 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317147428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.269156844 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316809835 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.269982881 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.269745837 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.268993915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.269686626 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323541734 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.269251952 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.317269086 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.267498703 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.456103491 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.29367456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272121697 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.272491202 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.273457783 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272342203 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.2651491 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.277116767 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.269035592 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.271340859 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.276045639 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269610318 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.26879303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440245406 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378647603 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.268824602 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.282663175 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.27832843 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.269657892 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.323897606 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.271172358 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.270296876 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322882568 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384904253 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.324022108 seconds)
  done (took 147.243218762 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.277117931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.280445733 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.273513288 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.287486345 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.272644853 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.270675705 seconds)
  done (took 8.846191052 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.274638917 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.273897619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.272224766 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.272785703 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.272417154 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.272984139 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.272931591 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273673562 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.275678473 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.272866853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.273477845 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.274574352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.274828158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.271957746 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.272519624 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.273502936 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.273417031 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.272733084 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.274431656 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.274457174 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.369896046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.274151979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273379409 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.273944511 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.277790071 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.274259791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281847415 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.274077275 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.274734621 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.280767006 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.292810972 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.274542185 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.275617849 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.279845949 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.277748518 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.275398323 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.279243726 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.275816138 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.273048147 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.2763208 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.27572966 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275172963 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.275713752 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.276465344 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.277055918 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.279154599 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.280321023 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283578369 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.275756615 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.278254831 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.278349758 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.275867892 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.276735259 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.277434454 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.277720552 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296625718 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.2822974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.277057731 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.27678148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.277308 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.277086057 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.27707501 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278346846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.280089128 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.284651875 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.277852453 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.277348778 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.282153724 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277095819 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.277483308 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.278742015 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.2742562 seconds)
  done (took 94.207578282 seconds)
done (took 405.672762856 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.556022819 seconds)
  done (took 7.745484582 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.335592868 seconds)
  done (took 7.526960115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.080561564 seconds)
  done (took 21.273616726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.321432771 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.445793329 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.313276762 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.295431634 seconds)
  done (took 27.567300225 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.428834865 seconds)
  done (took 7.619002085 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.270334093 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.287182771 seconds)
  done (took 13.750415241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.765553848 seconds)
  done (took 7.955792736 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.573728062 seconds)
  done (took 7.766518971 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.298138084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.285437198 seconds)
  done (took 14.025390876 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.252986928 seconds)
  done (took 7.444427513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.13081278 seconds)
  done (took 11.323265911 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.277481148 seconds)
  done (took 7.470284922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.278792987 seconds)
  done (took 7.469576796 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.010313467 seconds)
  done (took 9.200445483 seconds)
done (took 159.328174479 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.272614706 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.273866116 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.271975873 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.273241121 seconds)
  done (took 26.282981661 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.312245323 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.313954821 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.314471135 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.323252831 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.314949982 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.332219786 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.306631335 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.306509214 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.324280514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.317218007 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.3149647 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.316764597 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.314009957 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.306372679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.316551854 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.315799352 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.324594646 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.314200339 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.306554999 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.316660331 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.280407573 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.323889286 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.316851168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.279457373 seconds)
  done (took 32.704807659 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.800128454 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.351008513 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.433746597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.332661668 seconds)
  done (took 7.110726333 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.332398139 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.335113654 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.346933896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.385347202 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.409167258 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.344170919 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.30749594 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.301814665 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.288061342 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.333859555 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.410100358 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.349626443 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.418264219 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.283443875 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.468324509 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.281499124 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.282379835 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.333858822 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.385561953 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.402572722 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.283735133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.333553795 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.33724626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.352104606 seconds)
  done (took 33.499588379 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.281655712 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.299380808 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.281955535 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.279388297 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.289563771 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.282407815 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.282551445 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.283330882 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.28346367 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.288477281 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.280719368 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.294575984 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.282192033 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.282394913 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.288875905 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.284342298 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.288762068 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.282338174 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.283321156 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.288453 seconds)
  done (took 26.903060132 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.276467845 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.130668056 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.626838377 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.532884089 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.276163045 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.276617533 seconds)
  done (took 27.315009961 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.351574468 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.500800625 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.282818277 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.624552237 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.723573397 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.307456932 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.284052846 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.51719999 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.8210376 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.815569111 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.346705171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.348846884 seconds)
  done (took 19.122417103 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.280347935 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.276924614 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.289576477 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.301591149 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.335385988 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.303994383 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.290613836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.278837436 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.343878003 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.357007645 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.305768335 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.338779459 seconds)
  done (took 36.900088322 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366480983 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322145443 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.160601081 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309928907 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023186813 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491215239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322901606 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000528114 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.305038578 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553715183 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291607654 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376140171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.534530599 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280432001 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290345518 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.228923115 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529751419 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741243487 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28900334 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.225071169 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313808728 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281162872 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.309796223 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.508784537 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518197519 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258170822 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.618937052 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.057578562 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556638017 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.302406595 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291834844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282366053 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556097334 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921222049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402647162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485393232 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307131806 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852312354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.270184508 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.218706621 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298198457 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292096358 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293559198 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282405746 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215620434 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282152615 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981541733 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.307985996 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.993336547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282497167 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531190884 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38560825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.286963143 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.852577886 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345645682 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.296803746 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.287808305 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375935675 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876885293 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.613324706 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29372563 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.225333067 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294297348 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.157551541 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918825237 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.31306689 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.286475763 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287403033 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217931765 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.209419783 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307030488 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439514761 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.308708663 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888261928 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959689025 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312992456 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.221766024 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817088283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292865827 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.244790884 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511426538 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061443868 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219649905 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.23161799 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.218448806 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961757022 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300425438 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.637501289 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313006101 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014611906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518764672 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327302096 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309495316 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.508083109 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.165021064 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286922189 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.294139137 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42045059 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308139713 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996250865 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245170153 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.290441853 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54248361 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.49685682 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28973875 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.25092425 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781887448 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326425217 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.307976578 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.294448592 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499955778 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.869259526 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327582631 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617644881 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310857653 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06279137 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010790444 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297325997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.299183402 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297212228 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536587227 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.020612853 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197587656 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354409767 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291916549 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288786682 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.254374029 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145256211 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.191024792 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.477119654 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318313735 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.305180612 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.288655229 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232435533 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.28456733 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31806626 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.074059722 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.511599052 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29162821 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572027748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222359916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434880213 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298433469 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.511225389 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46339384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.317199288 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548348504 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301447328 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297796938 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325481234 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306896126 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388780738 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311201218 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.303462705 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.552262181 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.293144244 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.293381423 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.269311647 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.074320295 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29435207 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.294968758 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306934696 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864460022 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29203618 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296016865 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17882454 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.305076534 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358132556 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297224745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497491484 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.088023497 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318613802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.303020663 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.287913263 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52134614 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301182407 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.18111889 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376868399 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.759345428 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882316368 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327772815 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.225231667 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.003947497 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.985401247 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290203305 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.49055504 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29292347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496930334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331342356 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293098726 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866033404 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317504492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.182811116 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.306261918 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304360056 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.296723476 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291973699 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.026957492 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66670659 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313844129 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.310698576 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435429177 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.306857721 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22631278 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.809920667 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298750146 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293448657 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.071064252 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32916198 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.185458461 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088791943 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569898859 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295018877 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552159579 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.365079114 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.333617241 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.294065663 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29371073 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331331046 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.30548987 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326657522 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.305639207 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.246269971 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.739284626 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862740507 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98999291 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836239605 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5683241 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.313742544 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.201031126 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.993318609 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246503398 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95216083 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482237009 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029559222 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265007214 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768983566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.497426706 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062557282 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555476126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530491281 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550351765 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.316477827 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557542148 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514045133 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331266229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295506146 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.248018086 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.578157027 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840970442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3151952 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380925306 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01579275 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326344126 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.080941897 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.30181131 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.967892349 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697386116 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867824951 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.683437432 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29743207 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.306457536 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090525216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321653017 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.823479361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908553299 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315464775 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.774602858 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260750386 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.50449524 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.333731866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.295752774 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.550976544 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.306279225 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.551651199 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550610588 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241965384 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30625775 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818647138 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.167736105 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.304301099 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29923917 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008861539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299852549 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586007891 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.306754266 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.047049407 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325838496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233016185 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232981139 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.992662788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302568398 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274442539 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778199537 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.311075254 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312052158 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327063981 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1506035 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.555062821 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.314498193 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868397864 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548868955 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314928068 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330387303 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.303896988 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302888863 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.289925582 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197167498 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.536091048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316899356 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53143319 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.209113785 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.208408975 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338069357 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537253931 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182185022 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311492971 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546409967 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.037438893 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.310447656 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990481107 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349330847 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31728946 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32027428 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307438314 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328361008 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810118288 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508696896 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.338434501 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.312023961 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694988822 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333180585 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31202155 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.314946172 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395654105 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.676134329 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.035779829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.082844233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876153636 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046244909 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887753148 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580994321 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312190573 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310655475 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237125641 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449586061 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826756446 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574349716 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431877375 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.308719072 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332465967 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30265392 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324822139 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523190149 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578102692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173344979 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302983276 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970431505 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.18551265 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314267099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.514895497 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789041787 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864304472 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463981831 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309216366 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02886164 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605134892 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394138327 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305622291 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893581277 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.324766882 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.971677318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.318479746 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305171977 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458767047 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557434646 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962784825 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.341540715 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.460662291 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.078219495 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.224980183 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567844733 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740838674 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.51461276 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90659429 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008238752 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575580528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375970943 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513754208 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.436712246 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452372951 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.311821215 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.212585392 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306696007 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148834028 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.016564866 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.315693839 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881496225 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585738427 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.310588429 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.308140814 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336770386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.315251845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530382232 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986964511 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530869643 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316264487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30911864 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.876802321 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880605245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578424742 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250550411 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.310488301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548535964 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568656251 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332001424 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.759827023 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.019555512 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844573404 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.280107825 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328248468 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307862208 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019911368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882508107 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.064590897 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798486073 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967107229 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309589124 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590382753 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.313263218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312386147 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591345433 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.311972492 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.312607663 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526080662 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.908421999 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076997379 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.337445342 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.339523112 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.253079899 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.534226895 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376437618 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252876545 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308938783 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.711309648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337541242 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438703934 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32138504 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.313370784 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32307434 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.079346094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584714438 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314935087 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.302925601 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.299458488 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324177075 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40772668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861018625 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336942036 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.984042188 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.659484365 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567064617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321790464 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.297857362 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.314685705 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310845735 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028766821 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279019646 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314497831 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8764617 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.323485739 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.329083208 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315214812 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.527668829 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523207961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312549592 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529587319 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338750377 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351215623 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.212807919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078009511 seconds)
  done (took 1616.603376951 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.351826013 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.338793478 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.346648079 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.356650291 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353110732 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352654236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.34553932 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367712318 seconds)
  done (took 52.041821284 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.316513717 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.465237067 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.342270758 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.320754351 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.321779695 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.324526634 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.767099521 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.346609587 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.322493416 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.322430582 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.313703404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.319806123 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.95309688 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.330651142 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.323492111 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.302719713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.328624284 seconds)
  done (took 64.950753828 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 48.576791079 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.768224172 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.001789376 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.318128985 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.862639677 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.335333444 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.818455756 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.365764679 seconds)
  done (took 100.278566388 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.33083913 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.331107038 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.332700308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.331225564 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33120541 seconds)
  done (took 7.889696841 seconds)
done (took 2052.796344793 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317929778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.319799721 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.31745277 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.320365359 seconds)
  done (took 6.505597383 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.29429979 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.985093554 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.297473626 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.311344984 seconds)
  done (took 18.118336905 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.314980273 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.323455087 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.993631716 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.919779233 seconds)
  done (took 5.145602528 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.063670543 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.082833484 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.061018259 seconds)
  done (took 7.440898509 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.315475955 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.320976861 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.320656091 seconds)
  done (took 20.187983296 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.607512831 seconds)
  done (took 2.840748938 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.463160595 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.511715531 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.631949974 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.65357682 seconds)
  done (took 7.494046921 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.697247801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.687533531 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.504369576 seconds)
  done (took 6.121142591 seconds)
done (took 87.722579678 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.051899128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.699094185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.517578027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.025306595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.556911865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.517298881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.521027352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.992105778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.530556093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.523341839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.069180971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.543925951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.67721893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.699903109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.680600176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.320405828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.54303993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.089245588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.70101129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.929830885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.522385142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.648616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.885019479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.663121884 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.543602215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.464693471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.224503086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.320693012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.866230953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.243718291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.466267987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.101637158 seconds)
  done (took 188.372749276 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.315526736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.316434981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.315962379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.316639628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.327094354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.316899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.324920798 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.317079922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.327823424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.315899222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.32979079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.321618135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.31811597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.333650654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.333272532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.330784997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.329108285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.329774056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.318380189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.316255955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335225209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.344381302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.317158424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.340161634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.317223328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.335062145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.317478989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333951774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.32816496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.317670523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.342820915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325017036 seconds)
  done (took 203.642662486 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.330097968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.323345014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.318101289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.31914361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.317842763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.343247782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.318893838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331666774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.318175337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.35370037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.326967854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.32072074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.320228482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318559153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.332816875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.320154619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.319761168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.327762561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.327462998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.321306266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.321287585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.31889198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.340073203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.333510515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.327880965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.329192728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.327361914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.320288559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.335039145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.334128233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.329433007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.341742998 seconds)
  done (took 203.704079902 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.522195295 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.326310698 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.328568315 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.279965942 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.3286917 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.327192509 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.323612918 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.517544647 seconds)
  done (took 14.190087563 seconds)
done (took 611.141801568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.579768874 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.300880902 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.532083311 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.356547945 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.06697741 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.37623967 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.348525935 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.514930051 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.253623721 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.527782418 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593700157 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.370289068 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.732706655 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.354688345 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.599063789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.453306462 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.202081753 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.315917322 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.661945835 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.852306416 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.611933765 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.8135454 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.542052065 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.251177489 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.753407721 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.812561645 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.027570347 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.184434795 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.365506793 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.66575693 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.933386861 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.2925554 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.414703572 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.414639629 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.47226561 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.453857943 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.255786293 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.410168013 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.551460347 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.564915128 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.838234834 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.066975447 seconds)
  done (took 90.92797541 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.311843061 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.313271406 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.31222976 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.313128541 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.319380513 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.312304826 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.313925891 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.312781931 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.313566644 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.312174843 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.313555161 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.315038452 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.31841634 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.314547958 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.312470607 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.313599589 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.31454847 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.315622622 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.313237608 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.318393771 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.315450964 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.312769397 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.315060382 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.316654863 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.314518798 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.313308967 seconds)
  done (took 35.414572572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.332959901 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.573900282 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.735947737 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.345374252 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.331761317 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.335998982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.409225245 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.333499638 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.334472575 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.336344244 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.497108308 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.33484576 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368345714 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.762269466 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.342846009 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.333224592 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.332535605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332090324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.582735072 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.346607485 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.429135785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334568821 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.409074369 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.343400679 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.356064119 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.332979605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.338834679 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.897288573 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.353006613 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.501145986 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087784081 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.413089146 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.839135136 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.762849203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.096828136 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.343050133 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.335353529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.50377828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.336093689 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.33527962 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.410735698 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.335864655 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.744660326 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.99352114 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.360744798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.335559943 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.916361598 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.531612571 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.571345854 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.352956042 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.767196821 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.347685494 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.337069658 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.335876023 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.568193251 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.350976474 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.335786548 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.890476067 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.358632156 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.410974184 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.339823225 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335481374 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.595186267 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.33583595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.578370182 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.337416448 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.344604808 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.354855862 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.746990893 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.347715445 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.003812234 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.362099159 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.337423948 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.505104503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.583501077 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959161783 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357166805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.600235661 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.856135139 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.435581406 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.344040923 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.894502119 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.439152873 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.350685564 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.339866044 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.340472398 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.337756714 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.389597667 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.409035031 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.950166287 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024220589 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.925551003 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.436867761 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.357050757 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.339588878 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.894888065 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.35699936 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.340104395 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.742421389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011892382 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.363767803 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.34664749 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.010716137 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.367027157 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.415535618 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.350981654 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.755551526 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.349045751 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.39070536 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.339671149 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.346203409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.361451591 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.414833295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.350903434 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.33973606 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.982452166 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.53673223 seconds)
  done (took 176.716085593 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.333019623 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.332535387 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.34579577 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.331707884 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.332974109 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.341461865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.332711111 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.33486135 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.338607171 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.332325681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.335392953 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.335669829 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.336680405 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.337060846 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.346908839 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.341663243 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.992827781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.335151829 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.335608103 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.353189404 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.125494015 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.342503948 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.334603712 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.35003882 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.337162182 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.334468863 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.343125975 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.338759313 seconds)
  done (took 152.16279127 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.341752032 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.881267037 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.35819816 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.469142087 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.362449881 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.339813758 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.465643179 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.396787395 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.3689481 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.339525642 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.339962571 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.63206604 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.343385957 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.836059326 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.527234967 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.484390745 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.833640475 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.359526042 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.342520765 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.341756423 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.472383152 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.344394303 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.634622098 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.886732164 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.361926103 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.886419982 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.327284042 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.344728589 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.341657995 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.888443649 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.357774886 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.635313087 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.417086266 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.401211839 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.911557053 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.853435956 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.853872791 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.485546207 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.342515276 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.34184124 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.342343768 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.325941684 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.887833733 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.36238906 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.344189662 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.876767724 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.360801709 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.346822613 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.349838249 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.341689403 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.402811115 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426149844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.662518116 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.894274962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.434237419 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.355426617 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.470708738 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.726070972 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.347850303 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.83848665 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.326824691 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.892417266 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.364816971 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.327896789 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.345798786 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.348728968 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.488911354 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.471412014 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.839619572 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.363206716 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.83981626 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.506724249 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.344571454 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.34524865 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.348231094 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.892737995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.857923495 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.506612303 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.476095305 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.53479023 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.330542323 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.344921279 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.329016141 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.420795591 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.344971779 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.89481579 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.856652364 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.363195561 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.347001995 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.347634662 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.348036264 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.515555119 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.919524889 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.437483823 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.830331376 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.656787339 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.640559705 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.348387728 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.404272624 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.369890371 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.64471715 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.348992493 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.40181072 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.802270956 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.643436312 seconds)
  done (took 160.117342923 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.582057682 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.520436255 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.441898833 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.497019903 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.930115698 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.904973084 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.590567971 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.486776473 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.452754894 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.609563539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.461964309 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.434798841 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.551829954 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.42166315 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.053919889 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.430672731 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.454714884 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.494759409 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.50298403 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.330108565 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.023706609 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.623819373 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.527146586 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.186740732 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.438838515 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.07789983 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.902312932 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.874502507 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.51276663 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.604596026 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.86300738 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.452727271 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.281403322 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.011753374 seconds)
  done (took 64.791712185 seconds)
done (took 681.367084866 seconds)
SAVING RESULT...
DONE!
