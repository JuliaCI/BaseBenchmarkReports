cset: moving following pidspec: 29937
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234364785 seconds)
loading group "string"... done (took 0.461701116 seconds)
loading group "linalg"... done (took 7.569879731 seconds)
loading group "parallel"... done (took 0.173517248 seconds)
loading group "find"... done (took 1.175161928 seconds)
loading group "tuple"... done (took 2.097254907 seconds)
loading group "dates"... done (took 1.337161047 seconds)
loading group "micro"... done (took 0.242909012 seconds)
loading group "io"... done (took 0.651471819 seconds)
loading group "scalar"... done (took 40.722694937 seconds)
loading group "sparse"... done (took 12.439102494 seconds)
loading group "broadcast"... done (took 1.108837121 seconds)
loading group "union"... done (took 13.660379412 seconds)
loading group "simd"... done (took 4.763359978 seconds)
loading group "random"... done (took 9.608596472 seconds)
loading group "problem"... done (took 1.976002102 seconds)
loading group "array"... done (took 22.554612784 seconds)
loading group "misc"... done (took 1.415939225 seconds)
loading group "sort"... done (took 3.579498083 seconds)
loading group "collection"... done (took 19.390516303 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.512781331 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137298089 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13196604 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147363491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203950284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143896384 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156153893 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113765253 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.963837274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179789813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153395161 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512958828 seconds)
done (took 5.100385781 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22380122 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093195827 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103774714 seconds)
  done (took 0.863523123 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076967729 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145082152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094262324 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078683017 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094519056 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077329457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094690868 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077357115 seconds)
  done (took 1.336000013 seconds)
done (took 3.183227244 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735617858 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279710211 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206572046 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46614847 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195468001 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.2145578 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676286863 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35537505 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25782631 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099790655 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144291322 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389412469 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13683813 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680198294 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091739427 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123279538 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178299388 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.47288344 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084814151 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112315609 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116279469 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142909157 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127769441 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090208767 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185737403 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081725112 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193118242 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110858613 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08005489 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292054369 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202173278 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690096101 seconds)
  done (took 10.925121175 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111132263 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133300164 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097158671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138461806 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134440382 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099194828 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086044023 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096829866 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122059648 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174924714 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113557562 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136541283 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094480819 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081843841 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114672752 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243880507 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121875013 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104846459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100583225 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103022176 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120997286 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112503859 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108478092 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092340944 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166578879 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220917008 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113782787 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128060811 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098958834 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113286091 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145026997 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141384974 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094042048 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080182052 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171896266 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124171723 seconds)
  done (took 5.129919071 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186755659 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120297806 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169630561 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163560434 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140297313 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160058078 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112041251 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245118382 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.135544604 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162667675 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142230481 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127537477 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116318864 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079954852 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094346183 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080531082 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097011914 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672103589 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163674004 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133267675 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096579686 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104617147 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099154295 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365110334 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087291507 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096564695 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082019848 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082045563 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160110848 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081635052 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.16539913 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106801161 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100885168 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132223692 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194180609 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126983464 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118134501 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097142796 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078693549 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195444977 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088500304 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097168485 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102876148 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13566588 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133602818 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097420022 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080793164 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219854912 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08216101 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113895688 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.942036309 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107969522 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181452063 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102955953 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095590696 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319922553 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098702417 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096630554 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077969635 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271877057 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183341952 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097962457 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079947198 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096269754 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081127678 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395686991 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080811553 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.755619084 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088461424 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106002784 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08245765 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096187512 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103960226 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087254377 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113866273 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079403726 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098779025 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078971964 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09555871 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080553279 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108286654 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101774761 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079997394 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164318781 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080882165 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11473438 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12678015 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082958 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094974563 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129460944 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078190569 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098219967 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07960756 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13252642 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099090889 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107068784 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082706745 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144182002 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096735735 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181851819 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079857698 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127679842 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09913258 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114939787 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112097442 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099194995 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084661889 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095893645 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077138773 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164914233 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080610825 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097435819 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080878411 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109901116 seconds)
  done (took 22.623725206 seconds)
done (took 39.354059896 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326377491 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103155608 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102521126 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102032797 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09980521 seconds)
  done (took 1.481079115 seconds)
done (took 2.204833197 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28784952 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17163341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09498357 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166530317 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093201312 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174137339 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160300435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111518443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219350935 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07662372 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162365175 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093600814 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076635578 seconds)
  done (took 2.635525772 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09527762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113829588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082601103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110571874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076830186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111794111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092252304 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116706772 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109416146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083856361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09295733 seconds)
  done (took 1.80713714 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093362742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112105318 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082233852 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109810987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075684421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110120804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09233581 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115589627 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10987431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085271018 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093501395 seconds)
  done (took 1.799716354 seconds)
done (took 6.954709349 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090801611 seconds)
  done (took 0.804834299 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921369362 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.869481242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112552036 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148724045 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298808966 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191578912 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474958777 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124587791 seconds)
  done (took 11.067493494 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.143330208 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085835431 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103975897 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083529693 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100533342 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082605198 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098373599 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099653318 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08533067 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101868395 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084458381 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098597022 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100843952 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084535459 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102409514 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083789335 seconds)
  done (took 2.321285104 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119503753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118103529 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10596176 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108048802 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085948433 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104470671 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106402906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088086537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101693923 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103425738 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090095958 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105248195 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103349366 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079497355 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105247643 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107990562 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08580472 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105627845 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106830575 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090353923 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1062678 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094606552 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086744842 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106273798 seconds)
  done (took 3.24332235 seconds)
done (took 18.156743085 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159856619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108253832 seconds)
  done (took 0.991991698 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095556347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112274133 seconds)
  done (took 0.935597041 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097032895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095435982 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12042926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109168423 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079627941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096134096 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119981996 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081274435 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096099965 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080853284 seconds)
  done (took 1.70687959 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08198932 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109425618 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101676211 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095665446 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104020551 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094114926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087951505 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098856825 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108802246 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076264999 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102329846 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113944656 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085325228 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116189939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105078831 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083221535 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102176194 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097839589 seconds)
  done (took 2.49813465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079492397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096601776 seconds)
  done (took 0.909916221 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080599731 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093295304 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08131389 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096886246 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093809798 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076717504 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093948855 seconds)
  done (took 1.348315973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471692957 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134841561 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25146695 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0847311 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120061606 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302508792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097206423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084830056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102989485 seconds)
  done (took 2.438702264 seconds)
done (took 11.558627222 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092328987 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116984429 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112696361 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46632304 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107384536 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096952625 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159199757 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251031582 seconds)
done (took 2.139749045 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149176279 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324555732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112853475 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066712937 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09525621 seconds)
  done (took 1.338481949 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080124368 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099246291 seconds)
  done (took 0.914959813 seconds)
done (took 3.143844066 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081118042 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097213855 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.076985947 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096935851 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077650058 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095377544 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080158458 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097042035 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131708665 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.079634251 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098074922 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079417923 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095335793 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077490529 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094714313 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080044231 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093775085 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077769235 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096122708 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077250214 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093977938 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079963923 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093923815 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077184626 seconds)
  done (took 2.899717324 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099782732 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097307684 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10245291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086052025 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.1011325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085808736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102469664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096999258 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086778109 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099163772 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100513267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084450888 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099682063 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085097062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099041156 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101438348 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086322043 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097946268 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082468596 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101063517 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10219989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080735474 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.1015935 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102162274 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08382428 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099776521 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082075253 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098193904 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102370328 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083902098 seconds)
  done (took 3.57513565 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084456654 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093821076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077736744 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102050692 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077724784 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096870457 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077506278 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095651243 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078824653 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094931829 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080496813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094918269 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077351291 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097079833 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079387768 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097734454 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107195845 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077939023 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094633402 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077905779 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098362713 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076980615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095282987 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077782991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094758919 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077415969 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095159214 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077552683 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09589688 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078706314 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097477804 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081334907 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095053415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084586812 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098416511 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078094458 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098119894 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077496136 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094303834 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093793311 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076999909 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094772881 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077616525 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101349831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078051029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096871304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077693394 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096061341 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078618767 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098424076 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077709966 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094516261 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080023399 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095282445 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098766647 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078091982 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096300252 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077160643 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095856924 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077955459 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094601994 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077825799 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09675572 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078871426 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110504207 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084808887 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094539262 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079878113 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096146636 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08057782 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096007258 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109257585 seconds)
  done (took 7.124922266 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082909706 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105419669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079714712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096940777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076768247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096545001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098636639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078003189 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096850144 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084979341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094976885 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079875589 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096434722 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10805365 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078572472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096800022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084854794 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093396606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078990155 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099326513 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079076517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098805335 seconds)
  done (took 2.733023098 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209275285 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104889683 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142779607 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106703441 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083846109 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105395524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102322142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086746455 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102529535 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083000248 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100510013 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102782317 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084136304 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100688177 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100443825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085145351 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102374335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085249143 seconds)
  done (took 2.637918524 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093729348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098196901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102336642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098229559 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09868539 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083818626 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10398273 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107831707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083525539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098451654 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09034134 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100511244 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100345721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081322618 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100642943 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080909504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100739642 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081287201 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107208942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103397562 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103331456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090566001 seconds)
  done (took 2.860893542 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096604234 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10055237 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117530501 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084064826 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09488059 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079457241 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105603389 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080611881 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107439921 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099763194 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081252426 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096513256 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087363357 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097615348 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102986653 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081124257 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100835153 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080614738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100155966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076908967 seconds)
  done (took 2.625790501 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102368842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099913356 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098942239 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091459214 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099584413 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081972526 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108612012 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100251506 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082204922 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124152232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099237827 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082561906 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108457888 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105304573 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099387374 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091661295 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109143427 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109244072 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083107861 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10008516 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124704833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083134799 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108600548 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209478394 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082763726 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099777762 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099654601 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087909883 seconds)
  done (took 3.628694826 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08083406 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098172737 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078483698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096263891 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078077367 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096322175 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077999417 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095946705 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080956735 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09541283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081908066 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097739111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080720911 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098263898 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083646399 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098399614 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081477481 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0960937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078426404 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095903552 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080671221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098814665 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081264102 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095947129 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079038727 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098809656 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07894446 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095525875 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081173998 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095696309 seconds)
  done (took 3.414696202 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09105852 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10583235 seconds)
  done (took 0.954060434 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079467739 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115765545 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078940287 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102853345 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086562265 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099348556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107193728 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08682713 seconds)
  done (took 1.514010332 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096213306 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109712113 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082962756 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111960201 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109326017 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095094517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159938063 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100898295 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087892547 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097338247 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09496874 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09811835 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104682188 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081451073 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104558491 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08778475 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097329679 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087302719 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101410915 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097713985 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083364009 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110057627 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084372547 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09588154 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082539816 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109356246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107793249 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0823396 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102325482 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108643117 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087304703 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093722727 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081640001 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100544238 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08020499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108537827 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111367039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085042232 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107781483 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08326977 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110811236 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095090254 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086845144 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105408241 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091554764 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099966622 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082399109 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094372712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096564074 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083838059 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095143882 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081874946 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094569856 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08910677 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10435027 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11289921 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07999279 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100687747 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085083288 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102394247 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087853435 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102036827 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084370826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098565155 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107020115 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085770143 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106375481 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077300232 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093706087 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079711925 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108639217 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122062402 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090161488 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101298993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083732716 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097302366 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102983326 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08403268 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107276638 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089758871 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100154203 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106814008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089679131 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099815576 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084841835 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10771388 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097673206 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084463384 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0969367 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097024388 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098400259 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080099055 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0977863 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108536639 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085576936 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099821047 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079749892 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110340848 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076067398 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101177926 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083540053 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100286084 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109741566 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087894595 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106177624 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107461349 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088657005 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100041464 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085216664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096217555 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083900396 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102654778 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088783282 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094249966 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102867029 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084530674 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100474902 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088790889 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098438878 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082567328 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107160947 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106039193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08046428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097039126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084906703 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100532883 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08568807 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107485253 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098254293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077915008 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094971808 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086689592 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100598381 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086951668 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105568723 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10262529 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077133563 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09856355 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08669055 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106687736 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099884929 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08280419 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103914208 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08377026 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099205753 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087740556 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102690211 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081251486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104690191 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101696079 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077397163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104484601 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084871621 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098973451 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085591633 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10435689 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103201915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083603011 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099217219 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088758974 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101819287 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082063519 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100366643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081316575 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11020474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102347541 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078401325 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098242559 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089445506 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098026951 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081786138 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100078488 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102359559 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083617564 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098389964 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081991439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101815061 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094409411 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104739171 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102130701 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087775042 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110529313 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08213445 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102873626 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099625242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083927211 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101642864 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08922494 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105609531 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105984566 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084903101 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097955916 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087801407 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109066545 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082028574 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098679169 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08161371 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104564735 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107193851 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086291233 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101723133 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081433874 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100990233 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104758668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08497721 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09940099 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081816506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104849757 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082068147 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107561769 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101640885 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09213017 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104196643 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07799267 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104569365 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098637866 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088691987 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097003978 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080475992 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099759472 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084555714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099912715 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085498707 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095284499 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090379821 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109183526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101185206 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082040154 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101063694 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091579131 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102612484 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086035611 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104211865 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105823918 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095988064 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100713652 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087008099 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109887517 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101267482 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076600625 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105554877 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081850986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099997699 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081533424 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098729966 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085732435 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110140027 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105603734 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076405037 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103611375 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082258153 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09970648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078230864 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108541418 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105742767 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084211422 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109573335 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083969836 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102233542 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086585117 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101771894 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102522649 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084385126 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104511619 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084214893 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103522921 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081391402 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10321925 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10066838 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080963399 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102769402 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086544021 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102024543 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088684385 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101297551 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083692593 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103994613 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10203555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084195345 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102008747 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08330455 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104548066 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08377492 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102679275 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085842901 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096793839 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109794761 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083311866 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109557972 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083620819 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098955573 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088544735 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103998983 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107123247 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084145295 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102629124 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083928008 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10212046 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0861423 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11057503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098282485 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092454952 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107165316 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083686504 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104016099 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082623703 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10368126 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08184716 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103740842 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101825419 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082639152 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101353539 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087597118 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104279231 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082820653 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102865829 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102548269 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083478704 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102698678 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077186142 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100534302 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083052353 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102068876 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090090879 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102685026 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103813667 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081321521 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10263376 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082272817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098314041 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090980174 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110620867 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102043952 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091716744 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10000219 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084905985 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110774453 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095831019 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081452418 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099211754 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081436796 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109539249 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084568992 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110073882 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08300152 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100826683 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097872119 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084830665 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099744674 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077214974 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09926155 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0868594 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103831481 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081706479 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102177253 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085408674 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103523084 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108558407 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082910358 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103167116 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084079364 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098862178 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082092241 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101035265 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085557785 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104362633 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099506126 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081708246 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102164412 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085222406 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101640349 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083156789 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103395246 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098177902 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102674991 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104487066 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086728569 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095963096 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086611568 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101386949 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083226555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100668799 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086816022 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106138306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102558901 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090935502 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101557557 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084439654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10225619 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080754801 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101826832 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101489941 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083653659 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100369218 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086036173 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110636635 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081139362 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104224035 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083193782 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103569679 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106455289 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084645175 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104156115 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091277955 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104869216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102952519 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09032889 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106081733 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087031378 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103878667 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085228862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107798854 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101051799 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091026682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10177119 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08444036 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103761344 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080348975 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101884323 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083594899 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101246941 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105892404 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084578133 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101082457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082889574 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09965941 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085329314 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105875115 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109455576 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085889498 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105136598 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078681097 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098561412 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085309839 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099769514 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084767894 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10548801 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107969852 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086982951 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102066483 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081977732 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109603706 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089673117 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106778483 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100518906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088299174 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103270144 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086629138 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103058019 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083635934 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10361087 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107446986 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08614611 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101560841 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091865512 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106202501 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084576699 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103841178 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08299027 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.1022418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096688991 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084535087 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105255614 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090119741 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104387697 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083974253 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111562907 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101920671 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084241008 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107127395 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082955736 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109133172 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078682653 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103201041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104002675 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085103038 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097912476 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083982818 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099639587 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085597165 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101966893 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07945161 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112827156 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108950262 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085756264 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101600355 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082426564 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097014203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078607659 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101752721 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085288941 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104404902 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111191233 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082591562 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100904729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079516641 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102772623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087319805 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106166737 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081628595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097479865 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081238358 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105231624 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108802586 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083306985 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101619044 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087565725 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10552688 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08193528 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10681816 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099461671 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087639567 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113602374 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084822776 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104255081 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089581804 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111341892 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103612834 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07965284 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104266017 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08664628 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103177047 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085327973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104777301 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116759717 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087567484 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10217406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083228976 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106184087 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083803918 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110472729 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104670731 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086126655 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10804708 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085824549 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113099453 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105411603 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090261111 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105361585 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086402122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102253157 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084612024 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101605575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082242581 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104343714 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104529509 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089296771 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111773736 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082988117 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113260014 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111473012 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089387664 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099660455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08414827 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102534057 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079629513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104801737 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082040002 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102142014 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101561931 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083105107 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104042155 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089644679 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104715379 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085197739 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102931909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078074963 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105296415 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105421485 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086994159 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099690796 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084995171 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104933249 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090547261 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107497192 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084320824 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104993428 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105245914 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085401393 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098002259 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090769931 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102405125 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087775734 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102729043 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084525536 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104954328 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106383215 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089961963 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104925712 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086330166 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116516224 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106152922 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083064529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10051072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090466135 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101499551 seconds)
  done (took 57.701038585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146454058 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081674276 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098743652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079425629 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11273471 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099677648 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079594374 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09968103 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080347108 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102461946 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079391599 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098475794 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108645575 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124609456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093760955 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104492312 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078600827 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100904877 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098594994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081504966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109531534 seconds)
  done (took 2.866017107 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105365223 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118110617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116596034 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120266109 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090247813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115800448 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114832448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116031887 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100222781 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112089017 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119211222 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1166822 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092118858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110951826 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110983771 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094206013 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119613833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109706719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116923561 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096396014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113382769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113629957 seconds)
  done (took 3.230711897 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084555674 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102007523 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085260864 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098131809 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083785378 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097652958 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087801397 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101155537 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087294302 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101682506 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082468822 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102117626 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105158189 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08003144 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102232261 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082040229 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152542844 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107683082 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083516532 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105515128 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098542028 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086707338 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099770737 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079941227 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102173512 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089320812 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104799822 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082215334 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10325241 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082538758 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104075942 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081599271 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105757479 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103430818 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08321293 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10238711 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083679192 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103857008 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079721851 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101431836 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085160985 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098777338 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084910294 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105318918 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081476913 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101208717 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085164343 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103866289 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098662869 seconds)
  done (took 5.464725021 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104664936 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161295568 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086062904 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143456738 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121197975 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113717312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088563692 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141919256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102512236 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08296566 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12274175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12110581 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104221326 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089186315 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110791531 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104007008 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087071768 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102938104 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109606955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084249873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108514248 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090887362 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121341128 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117802085 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108010299 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083397449 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103978428 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109525572 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09757834 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10934707 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109711111 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091480482 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120022379 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10928348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103762436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087461536 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122227325 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104474639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087501314 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101466953 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087111005 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109230146 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111334434 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122122268 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084678027 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108898255 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0840959 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102009239 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116800381 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087697317 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113330215 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120882205 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108696324 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085984612 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109298711 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121372693 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084801593 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102715568 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087680163 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117724908 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101347266 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088556508 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120187231 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107246665 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11196176 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100208179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109926781 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108920232 seconds)
  done (took 8.134711836 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093935183 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112114909 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121029028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121433932 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092257113 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111419248 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111627124 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092031189 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112047151 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117158533 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111206051 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134455487 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086277314 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114861091 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111376831 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092779347 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11229286 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110880548 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090764226 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11118533 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111262526 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121146775 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091735714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121129034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143501827 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106257253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091472651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112257433 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120973 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111877845 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123877701 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092367331 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111215308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120359843 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124041434 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092070749 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104614163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110727936 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091209944 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111454824 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10576006 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101442793 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111754615 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107184619 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091285768 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111672391 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120325482 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124392127 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114325603 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097160333 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112540676 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121795457 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110855173 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091468312 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120344126 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147946175 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121114429 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121942209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111782826 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101032324 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121785262 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129235289 seconds)
  done (took 7.694084768 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108877206 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115933352 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118084601 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100267001 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082768006 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108727485 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083106895 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103089818 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115588717 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095621845 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116842629 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109228836 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111390201 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097990598 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109604919 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11149245 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090715502 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109412981 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115378093 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109395944 seconds)
  done (took 2.939546539 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094413612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124104756 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085978706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112008175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108338116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09165978 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108011167 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107825398 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086480247 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108491374 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096515353 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117163032 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105167932 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09255099 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116594621 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111164538 seconds)
  done (took 2.491227287 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096887669 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117804588 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120961766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084681476 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104479572 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080997817 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10697234 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101212056 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081424426 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121746525 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084511482 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109646373 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105463027 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086294949 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101766713 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088490873 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10147357 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08263133 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106125322 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11953022 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096562254 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104400945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1060983 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087598369 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105258316 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090587613 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106512286 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102853294 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083799 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106018339 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085575584 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114168129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10161614 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084465184 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10269385 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083243037 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104750387 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085729146 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109135397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104935226 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083504648 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104072409 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085590434 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106814626 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080609303 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107400702 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101997847 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092161501 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103363251 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085911304 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105842567 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107629475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086748812 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116039307 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088860672 seconds)
  done (took 6.254624651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099416728 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109694503 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081293812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103590466 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089769225 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107712443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109268537 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08844312 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107432807 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084316906 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107285599 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090150827 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107643912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108671347 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087261449 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109671772 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081317204 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107233638 seconds)
  done (took 2.614571083 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090900513 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105513783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092844123 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107184764 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085732382 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109594278 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080422698 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104329964 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103712065 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085792951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105459905 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088136873 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104359949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088073895 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105638328 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085794821 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109573527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103456399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085998033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101715869 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088093695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103596743 seconds)
  done (took 2.969121064 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118842692 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125840167 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092835783 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229930587 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103977702 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133050521 seconds)
  done (took 1.638680515 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109509728 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12138077 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106844744 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107131518 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116957854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107190523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087908231 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108020534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119215926 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104761669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108572959 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118367931 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117739124 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097848979 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115256871 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115673577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107489671 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08781362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106709889 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128779995 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087815871 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118466607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108874956 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086986434 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108544483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117934239 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118690309 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122167115 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088221837 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118199534 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115070633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088512629 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11859083 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122881494 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108905378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098494532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108979225 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129221064 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114941619 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097809167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110324061 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114924861 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097928154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114812056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118573304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10725871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093533025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107951267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108296256 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135232054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094639907 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118390535 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115534722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118372861 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119251279 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136753384 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101751157 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118280454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115368234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122930116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117543405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095059169 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117850551 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122931271 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11523227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118104138 seconds)
  done (took 8.16377609 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10240988 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126061694 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108694943 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123163395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097365667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108026725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108372381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0887018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10848232 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106969541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15315742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088856235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118633911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118435995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108057154 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08890108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108394503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118226404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087195072 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136140963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108427536 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118825914 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117959322 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098452253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12379298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115808499 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108330711 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088436601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108957353 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107845212 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0937475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109232645 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118210103 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087009132 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11872977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108755623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089011954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115092986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109154451 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115694743 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097328595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129974845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109461479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10830601 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121542301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08807543 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108264807 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087401335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108440971 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107283939 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102634359 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122822617 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123133839 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119008629 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10925676 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088522037 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109383926 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108456369 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088709671 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116026374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116948634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108999517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13662474 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088670564 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109330971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118030994 seconds)
  done (took 8.037298412 seconds)
done (took 154.906895574 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098457725 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137194209 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097087107 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169902308 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106245741 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11954364 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138911571 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097925713 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106629003 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086185661 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10682333 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087903673 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172336258 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085978604 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107203208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108749943 seconds)
  done (took 2.663624011 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200580838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256758378 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10222456 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106390013 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089957808 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110266622 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104829624 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091761785 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110850839 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086240792 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110726394 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086702535 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105841158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087822396 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110734819 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088554716 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106506455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087668608 seconds)
  done (took 2.887504034 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112801313 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146385457 seconds)
  done (took 1.108139485 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119110967 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18040449 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318032512 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156526939 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107654817 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128501099 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157456243 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131586626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197431517 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123719564 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122812347 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097956398 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14147681 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11666973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095088261 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119202991 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143464973 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092593246 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116007595 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116547308 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117796145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106844322 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115913593 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093817762 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181124713 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12033413 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085269123 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106653255 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116615366 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094557234 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113886644 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125046105 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098548729 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176388014 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101882643 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17802496 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097960406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115290985 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115258703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09186571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120021889 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11892015 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105632352 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119436625 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08454216 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118548965 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105930662 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086503641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115760628 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098030939 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117041301 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113560938 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155639915 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118951322 seconds)
  done (took 7.556473948 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799608172 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169223401 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0911171 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.893001846 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143115108 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104151525 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78553108 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13382224 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234956897 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764174774 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135298129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122431564 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228979072 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238072892 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931417115 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309316166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677265898 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102543855 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150314191 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153052757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120120432 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138382116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130195556 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429992334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096270855 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114105282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11737133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100890322 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15964299 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126196864 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114466818 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179966035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246877151 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206730339 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11687242 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089606755 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112883934 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168973983 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267835518 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216099837 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181652879 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087734379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111029086 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122624863 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111127459 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109640798 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164519316 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19580998 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174189588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092412747 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121495643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120781146 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121950903 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166179294 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12109477 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294642935 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325125312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11293344 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121799982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105137859 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265694283 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123143653 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225042981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11841403 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213608592 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112599444 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781560589 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19081434 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090361926 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119198468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119235907 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095505328 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122764612 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16756705 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395582978 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124131559 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093243993 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112285652 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214524314 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125814053 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111249254 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164150113 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115833461 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09978863 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125923006 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122920547 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172038067 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230713257 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124853956 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119831493 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094232788 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12619111 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116799398 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213103782 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22176124 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162411961 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2091946 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1242433 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165131868 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191146558 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099244589 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194550017 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098823135 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126657089 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124392472 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21893812 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147449495 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101842227 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11695411 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118838778 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149157986 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12719919 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098223648 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192367451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46001503 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167618091 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109602989 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127500078 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099259566 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161571449 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118847602 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258210042 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12233814 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17044234 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119159942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088371783 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120691652 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165883141 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12365552 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121753911 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101916293 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119396085 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233907042 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220082436 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123403207 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222246177 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184760991 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119922634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173086028 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121671317 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16915293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121344449 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12126948 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09645876 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794726437 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124616008 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099680419 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116923274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187852767 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112250732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102626862 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125563814 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10982432 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75189101 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127761369 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12248779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104118693 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119764565 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121565874 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096564493 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116903999 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162620418 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232020297 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122847031 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12042448 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103292288 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181795828 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095991726 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126421592 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125701157 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125021246 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10171199 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116269185 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125137609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170535135 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162707031 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221862744 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.600453338 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09190308 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12537339 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231384043 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090424132 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29062628 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121162245 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225033659 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167668367 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121331336 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318929025 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168039813 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189189148 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127836726 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175728371 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087382929 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119265919 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165670905 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112565202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118106676 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162617223 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125581049 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10237677 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956881064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112528645 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226521906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108599906 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172924806 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095061803 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122552237 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294300309 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112512015 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107646241 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186811331 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094379679 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126535189 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.749721153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104583217 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123082748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119326685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225554882 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164061045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097382369 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121596899 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122295556 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163671475 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208324585 seconds)
  done (took 44.22869268 seconds)
done (took 59.286878861 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275429294 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214874705 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259316207 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169675454 seconds)
  done (took 1.870423276 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171082414 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149126286 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120649075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107870971 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149473578 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085352676 seconds)
  done (took 1.658787113 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353150448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270589746 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239449183 seconds)
  done (took 1.739405221 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290410963 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253253029 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358803489 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42066235 seconds)
  done (took 2.320872542 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209169262 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132560067 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111580869 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104685632 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202417277 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251068523 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142012686 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202810905 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123151403 seconds)
  done (took 2.403315275 seconds)
done (took 10.874177468 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.207129883 seconds)
    (2/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.236387905 seconds)
    (3/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124847329 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103766059 seconds)
    (5/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.276967451 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102884019 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126834057 seconds)
    (8/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114369366 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.192810082 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100506198 seconds)
    (11/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.236884402 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094328762 seconds)
    (13/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.205543886 seconds)
    (14/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124107588 seconds)
    (15/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.17789818 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148720175 seconds)
    (17/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.209262447 seconds)
    (18/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.200134529 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.203426805 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.176785674 seconds)
    (21/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.20984729 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0993956 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.213647997 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.162474511 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09786503 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.15148351 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.227202507 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120165582 seconds)
    (29/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094663406 seconds)
    (30/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159595951 seconds)
    (31/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131749341 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094748784 seconds)
    (33/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.142119725 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.199311531 seconds)
    (35/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.179641081 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12389499 seconds)
    (37/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.134737072 seconds)
    (38/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14903752 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125560513 seconds)
    (40/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119376065 seconds)
    (41/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.18139022 seconds)
    (42/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117757623 seconds)
    (43/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135691734 seconds)
    (44/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158767512 seconds)
    (45/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11475029 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094058338 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171216898 seconds)
    (48/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069605428 seconds)
    (49/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143122326 seconds)
    (50/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093315951 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134636249 seconds)
    (52/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184373656 seconds)
    (53/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150015147 seconds)
    (54/286) benchmarking ("sort", Float64, false)...
    done (took 0.148658242 seconds)
    (55/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200345637 seconds)
    (56/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191958652 seconds)
    (57/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093984167 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113185774 seconds)
    (59/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157031645 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111081369 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170577081 seconds)
    (62/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200699915 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.201766828 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163236835 seconds)
    (65/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089929302 seconds)
    (66/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103543019 seconds)
    (67/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232761814 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140764337 seconds)
    (69/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121232142 seconds)
    (70/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.118248609 seconds)
    (71/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124020744 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191595423 seconds)
    (73/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084025093 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138929042 seconds)
    (75/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089271256 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135910621 seconds)
    (77/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113277313 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089824862 seconds)
    (79/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117291222 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078476496 seconds)
    (81/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075352741 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.111530023 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097715099 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136780561 seconds)
    (85/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11820887 seconds)
    (86/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09696048 seconds)
    (87/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090950301 seconds)
    (88/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09472413 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138932048 seconds)
    (90/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087469824 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110122513 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185846068 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.201784814 seconds)
    (94/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097173318 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116435909 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.160626257 seconds)
    (97/286) benchmarking ("sort", Float32, false)...
    done (took 0.173844116 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090570863 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109077111 seconds)
    (100/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.088911019 seconds)
    (101/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093592304 seconds)
    (102/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184767205 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08724638 seconds)
    (104/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.152691128 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136452634 seconds)
    (106/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.161887482 seconds)
    (107/286) benchmarking ("sort", Float64, true)...
    done (took 0.234387413 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13558572 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120236032 seconds)
    (110/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09887284 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110734729 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088343653 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126652415 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088330072 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120236709 seconds)
    (116/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115257602 seconds)
    (117/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066178284 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094502514 seconds)
    (119/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099912895 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086014682 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109344961 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.181959589 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096285706 seconds)
    (124/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192169594 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117893537 seconds)
    (126/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.171171796 seconds)
    (127/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.189644404 seconds)
    (128/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118342755 seconds)
    (129/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093865775 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111788838 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093209936 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118104374 seconds)
    (133/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157379412 seconds)
    (134/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087822625 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089601892 seconds)
    (136/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086776822 seconds)
    (137/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067218945 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11722191 seconds)
    (139/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120003737 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086708485 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11820349 seconds)
    (142/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149640798 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174232533 seconds)
    (144/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067262802 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.1927348 seconds)
    (146/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066246903 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117046472 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123314372 seconds)
    (149/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095910038 seconds)
    (150/286) benchmarking ("sort", Int8, false)...
    done (took 0.18946461 seconds)
    (151/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091626371 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.115528825 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110921012 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102079791 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090983661 seconds)
    (156/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077450536 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115089681 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096227269 seconds)
    (159/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153523958 seconds)
    (160/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138421651 seconds)
    (161/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067886681 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098008909 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112133075 seconds)
    (164/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06672004 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091514169 seconds)
    (166/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08828782 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109582875 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093673704 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119515638 seconds)
    (170/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088755523 seconds)
    (171/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099219049 seconds)
    (172/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069582574 seconds)
    (173/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068114952 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121985711 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093410583 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118105674 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135056272 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113546343 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13883388 seconds)
    (180/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067789254 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12032274 seconds)
    (182/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117652666 seconds)
    (183/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067824114 seconds)
    (184/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088083382 seconds)
    (185/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124962069 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135897014 seconds)
    (187/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151651324 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111929736 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086402815 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090743675 seconds)
    (191/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06785222 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110155544 seconds)
    (193/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145750626 seconds)
    (194/286) benchmarking ("sort", Int8, true)...
    done (took 0.222166068 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185471028 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.225467937 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110635755 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068748792 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187892752 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068992797 seconds)
    (201/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090797391 seconds)
    (202/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068270518 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096210574 seconds)
    (204/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090754009 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095357013 seconds)
    (206/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091594222 seconds)
    (207/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089004739 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136794696 seconds)
    (209/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0896991 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090985841 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181903271 seconds)
    (212/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089548196 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110273972 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092788859 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11046437 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.290265669 seconds)
    (217/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067678022 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091495676 seconds)
    (219/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067400736 seconds)
    (220/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076374872 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109225802 seconds)
    (222/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087845497 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117447655 seconds)
    (224/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092460864 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110036654 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086968881 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109598769 seconds)
    (228/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090286614 seconds)
    (229/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091322373 seconds)
    (230/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095421602 seconds)
    (231/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174925081 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110585342 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06701283 seconds)
    (234/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09109165 seconds)
    (235/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091303633 seconds)
    (236/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07860882 seconds)
    (237/286) benchmarking ("sort", Float32, true)...
    done (took 0.234984346 seconds)
    (238/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137315548 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.139718518 seconds)
    (240/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091538319 seconds)
    (241/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234239109 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165026635 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087303603 seconds)
    (244/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136415693 seconds)
    (245/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067695378 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110392223 seconds)
    (247/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068095628 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067241016 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091424575 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093389274 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119004618 seconds)
    (252/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068170177 seconds)
    (253/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091094996 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067814435 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087836414 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091146917 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087448146 seconds)
    (258/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090449216 seconds)
    (259/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067757759 seconds)
    (260/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220565116 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11420049 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089408198 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12290938 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085604772 seconds)
    (265/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100301109 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086499487 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089840078 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08560433 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067018915 seconds)
    (270/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111745404 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068626898 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120327703 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092639982 seconds)
    (274/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164725227 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112817283 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.157971225 seconds)
    (277/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093194971 seconds)
    (278/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077875369 seconds)
    (279/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142026327 seconds)
    (280/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089150632 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118554952 seconds)
    (282/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06813582 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090909676 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093071807 seconds)
    (285/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119175591 seconds)
    (286/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067724487 seconds)
  done (took 36.161160033 seconds)
done (took 37.042220926 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100579501 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149041565 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09678731 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136893845 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124857023 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092098474 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118735182 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097923903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124537421 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125892099 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099205421 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093396369 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097753824 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120518909 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096845267 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139029288 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124363987 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094316527 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118725489 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086170225 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119344583 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088876748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112056567 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070268073 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121809039 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094179655 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.1161505 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120614729 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086485918 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111052652 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090529431 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118114148 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087234273 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124918808 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093791156 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119583902 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097144626 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121262859 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111998252 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087069802 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119241837 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086328646 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117753169 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095153121 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115912357 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092965548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119496672 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100582703 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140114207 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115949463 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095202641 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12194426 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096166222 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119297478 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091695939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120155166 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092353556 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139464765 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120035515 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092805497 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118891556 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095493179 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116450874 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095751666 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119942237 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121076949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099203518 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116864171 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09899305 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11631603 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086453454 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119755532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090406302 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110957091 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096376168 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12138524 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085923162 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116401793 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118133668 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092272847 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110523295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089835481 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112384644 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093583304 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112441101 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069619218 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114239815 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092738961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110696385 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096320419 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117157384 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093998404 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113993371 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099153101 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111574589 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09283725 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111743803 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087694171 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11320393 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09118159 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110956653 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089831073 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120174678 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089388496 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118047172 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124026607 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087603936 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117694206 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087275938 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110465241 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102673718 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121737873 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087663528 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117233996 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086803991 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120039666 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086888533 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110918438 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087610402 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11136024 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092975635 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112080376 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114516545 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095018693 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125577203 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087506089 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114661055 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090245756 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111441948 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093354437 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111962358 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087163514 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113788564 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078189407 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113814062 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087764694 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118323067 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090613002 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120578561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089157617 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121842905 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09249007 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117733472 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09318619 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110856081 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075153731 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116989461 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090236565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114033067 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088085685 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113897706 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087097438 seconds)
done (took 16.988040631 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087989472 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184672703 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152793454 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143949654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108341925 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112726165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122621109 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119129797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113695611 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143637158 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110772414 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132079682 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148809813 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087442387 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113080136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092028486 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113787922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103135189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146135584 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133259932 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164500576 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086879151 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147652335 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135755273 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121205644 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114114035 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112381345 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092328712 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116785736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104285218 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132586835 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116210565 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087942134 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134549914 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104925419 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120736943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087849463 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119733518 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087266817 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112277916 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142431516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13390545 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093619772 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119276516 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092053674 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115537626 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089883485 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121897575 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098143259 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116794482 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126770687 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157082368 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091786048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122848721 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087275327 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12319529 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122310262 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090747713 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113068281 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090482707 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111581041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091954867 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127186892 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142737607 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09265199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121976782 seconds)
  done (took 8.636975075 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104765827 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141036977 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106199803 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131726128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112354861 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08829357 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114297395 seconds)
  done (took 1.739196947 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088905686 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135383125 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112130376 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137108116 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13284802 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112796587 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124103733 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08887449 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133797716 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090324869 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13458413 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151753726 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090505813 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12231619 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139053246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088812186 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138255342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089753838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117988792 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112597939 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118471935 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135785523 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09287877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114352385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104178173 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114310904 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163574231 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094646498 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115367502 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092621308 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11269341 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152128971 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102999634 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125931904 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089982331 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130312048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129560462 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087403846 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126874583 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094922875 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129257721 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089824633 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115764855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088354052 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119281507 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099641003 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119001054 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090004852 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117285615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135086195 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090232359 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146076518 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089619699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11897149 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091686183 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119663469 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098964206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114784182 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134673974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091281403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131690904 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10538936 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128192476 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130655696 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092121469 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128412069 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103784783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11688681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090807376 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117987792 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106368092 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112720826 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0904868 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124867074 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116569485 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114081747 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138193292 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091267752 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125189104 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114961014 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091197315 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114995688 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112607221 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11925643 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089798463 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118925467 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092285813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113155185 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08839753 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118241791 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088560371 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115852816 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095599313 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115687409 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092078975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132148429 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115423106 seconds)
  done (took 11.881694458 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090066707 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115270882 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092313454 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114877234 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091844339 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115439359 seconds)
  done (took 1.571624292 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115254545 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117880919 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104195486 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121390944 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157594129 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104854739 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131565779 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124157524 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108648963 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12780175 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129792226 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105315881 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136943115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121823811 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104099967 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121518699 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129962249 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099729317 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127866599 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096798862 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137834354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122014041 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098189537 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132208447 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118857147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096221146 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126829228 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102743697 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128097545 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124634926 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096375151 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119404592 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098294535 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123603461 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130889632 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096911485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12126912 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119717402 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100474692 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118215014 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104649981 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122735046 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127292259 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094579535 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123606923 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121442555 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094999231 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126293055 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104533343 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119704999 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122584624 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096588346 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121791497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09466816 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123495691 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124809341 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094796471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130041427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121580503 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097407165 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119124588 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094216812 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124283125 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118890431 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105351284 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120370932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122327464 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097460424 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123016149 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096461892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119904923 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093044363 seconds)
  done (took 9.257758424 seconds)
done (took 34.026630833 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688627837 seconds)
  done (took 1.639864201 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.814973418 seconds)
  done (took 1.76818064 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.77781023 seconds)
  done (took 17.761651719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493182368 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577848174 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993863548 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178894656 seconds)
  done (took 3.198465105 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941574002 seconds)
  done (took 1.917961606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283524276 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237168903 seconds)
  done (took 1.482041832 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768901793 seconds)
  done (took 1.741224021 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.368459909 seconds)
  done (took 2.330071566 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327084021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184134093 seconds)
  done (took 1.480213547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549429266 seconds)
  done (took 1.519363975 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.053793835 seconds)
  done (took 11.027636906 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268810393 seconds)
  done (took 1.250242798 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303532733 seconds)
  done (took 1.275052076 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.471371105 seconds)
  done (took 4.446141579 seconds)
done (took 53.802335413 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099055333 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127657505 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101919676 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125007489 seconds)
  done (took 1.420701447 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101387492 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.1218861 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101835352 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121124065 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126800235 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096853329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12378599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100936279 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121039007 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096913688 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121048489 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120934794 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098871286 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123336286 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093634721 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124622278 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099933005 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121439344 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125221916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09737428 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119787625 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098293196 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125791514 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095266992 seconds)
  done (took 3.654807427 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100097077 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119694994 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096661611 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119075071 seconds)
  done (took 1.418936641 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100785917 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132117892 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106111248 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126052688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131679052 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106505472 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117809354 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091927574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120219746 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099951556 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116855681 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139231652 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107333004 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125279015 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10321875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114541671 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091156367 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131810597 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125098253 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101716881 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118627837 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100193004 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116678376 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109410433 seconds)
  done (took 3.712777622 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17113271 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128252546 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139563592 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095692623 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161504734 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142038502 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088343435 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14189297 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088146526 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131642727 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118593715 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133860568 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130525863 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088428669 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114502641 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08824383 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129849642 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129930695 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091119321 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12820177 seconds)
  done (took 3.426930809 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09859386 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117815419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089006296 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116519687 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099480216 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121702705 seconds)
  done (took 1.629191813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090900145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114774628 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090254377 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115023339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093845694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114984126 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089289889 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11568902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090402121 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115438445 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089560714 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11378147 seconds)
  done (took 2.219714516 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508286858 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119897424 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121239978 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088833159 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124691523 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089967313 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130267411 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091835837 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141861313 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088837515 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116321805 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091688945 seconds)
  done (took 2.698456548 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236444441 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126666127 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283724222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366876794 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15597247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164520732 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277745805 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162571517 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199068501 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150511916 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231981968 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19660863 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153224216 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191603157 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138324171 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145723898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189152481 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252522254 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154545371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211715916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208622082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167413447 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180139166 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151211464 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112713947 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194753173 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09526117 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129679872 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207756355 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20560587 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189811803 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161510211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148385438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237051491 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249919367 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197315413 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279262889 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133852091 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143433756 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166287964 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267031806 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139652733 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23322389 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15709077 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104640835 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222496946 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167354149 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17745464 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146256824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139607213 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199005296 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240843645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194731761 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13991731 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301013529 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148468067 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157840161 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190503176 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252738845 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226700472 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190230295 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121969346 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189647094 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191197524 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212911916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.125842893 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210327735 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149151142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184548187 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189689384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168335862 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205487925 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180934132 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140396788 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171567321 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173236318 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173259966 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260451934 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187531917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122698621 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169667406 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14942954 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105553705 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195922193 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126032534 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214679603 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144546316 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164895928 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209380748 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159659271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162175447 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220558278 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185569804 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149654699 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084474397 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154962193 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156103386 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17652058 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140382861 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160090073 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157746112 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130868165 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16868762 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098949129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185370583 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118416547 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174844437 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184684223 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127827914 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162738845 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154414877 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151223648 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179075691 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200587678 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142260895 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134402235 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209128585 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177893394 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142516634 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178637239 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228347783 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117568339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150115786 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228829538 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21825645 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141416738 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229889024 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15412693 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108422857 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134046908 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182124737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157839676 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162952464 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133533288 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183982505 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233648295 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099667712 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139023931 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19696413 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134929769 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132923381 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155455661 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121465389 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139497168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144260011 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146574119 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175917452 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179948781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156129397 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166690307 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150347466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248949968 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140596226 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152835747 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122372106 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122299745 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194252853 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227180206 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104225349 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232974127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172578285 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200120598 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196040772 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108884956 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178966412 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130894875 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093587566 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222129148 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169558356 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16377711 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197118869 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223057862 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18059708 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183804833 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165784794 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203349813 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164795362 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157202 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11079257 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161480719 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15954796 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124755103 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.113020248 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13531876 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150548812 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14272039 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132789551 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200882855 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171757377 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215610766 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159698217 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122574853 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207394012 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102668685 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177818767 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204948413 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118420266 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226499138 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194695817 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214406398 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117982548 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230473302 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093476649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127386676 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142970565 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171750967 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134468723 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108828692 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161947837 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181378432 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208783316 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172088097 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20754943 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201449684 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19186534 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095230891 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171060217 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184703541 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204289336 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15410603 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140789022 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152351263 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178331448 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155742155 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255258213 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171529956 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17710738 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232568343 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124588399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133197237 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151415622 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179223814 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155052834 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177146675 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148636461 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140099531 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161351606 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103334463 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160094009 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212943606 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163536977 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18925385 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150945624 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185283932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12944359 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162390814 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161528179 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166703607 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081436035 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202323647 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203722561 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147291401 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16699207 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188900869 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13253021 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308887969 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23615649 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196281616 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139055327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156531398 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162454433 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163384906 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172192317 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180038713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15999199 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18803231 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160772964 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13729476 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111953046 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149711306 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152866699 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132880466 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148678641 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177101711 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138519428 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190483767 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156011017 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160478215 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172382544 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151066469 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117006267 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15170339 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244446524 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184388548 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240966026 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152230263 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179295264 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207364063 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127323466 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10417363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134742522 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179696384 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137576979 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192077151 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214260846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201023485 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181223847 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205333931 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112687007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122007059 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158713155 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170029518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20458888 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149498523 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147622669 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230072174 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110713271 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133339631 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167389641 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288388197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145971923 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19531857 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109001479 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280914966 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100861277 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132898908 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164138961 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236797826 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109354813 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178317789 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171721492 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161974133 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165405579 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150796294 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191527225 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239008708 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200018731 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212495934 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106489064 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158057515 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17579208 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221035676 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15762285 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110709071 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233127151 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196033555 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195767546 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141881826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168793736 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168745597 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15891693 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21536224 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107369795 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236066067 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135219024 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193760481 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15397843 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139259837 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176764315 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18857532 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143101078 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187877058 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210545453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107822524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135038962 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166974515 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178852747 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153984038 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129117141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182740727 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126906936 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196718121 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262001084 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135386084 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155517486 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121189259 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137604166 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156722636 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160070225 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140123098 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141348699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228923593 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135039007 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192608896 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228457343 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172200964 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174170414 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146356449 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694640003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103774515 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22266478 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120036392 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236029411 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15223835 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174616188 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159214771 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169135567 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194520633 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162001619 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231746132 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220520821 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181059333 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132532408 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159364741 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154736885 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145266346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126476048 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168411318 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159770118 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145946115 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206371765 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165329756 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107316671 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141447132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200253982 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14870955 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185619206 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180152785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139634196 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174247553 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217061097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106525469 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207920976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208518048 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143698167 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149453642 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134434765 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151207328 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23545472 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125856599 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189495014 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212543959 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13252556 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196325789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120767253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221323858 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158504792 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186412718 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143430781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158619658 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158195873 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138272419 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102419764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156992898 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168094686 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15138831 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160803981 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165808539 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195474495 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12377882 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118269669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310334765 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177810538 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215966669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137671818 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135814525 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163076882 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121554674 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205536922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179402949 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136317869 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108339822 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138353378 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130002767 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136819035 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157608393 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193608794 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166721674 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235673462 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109341582 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281779946 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141413752 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156443706 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08936346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134358449 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151776553 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147120169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157199971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194131123 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263106863 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149527106 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106810446 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150092946 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126202593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108545169 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165566685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166338745 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17794573 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146279972 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109713941 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156768579 seconds)
  done (took 82.740204379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164035436 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132654545 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147447244 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202543848 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176889666 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270748915 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210072378 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254970475 seconds)
  done (took 2.629073292 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093252247 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146536569 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15762909 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132957361 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092556301 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120392987 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343211835 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133747814 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117704975 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122648666 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173301562 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094689028 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550615081 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091387496 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119687234 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107581373 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092522844 seconds)
  done (took 3.754617986 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.252104371 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.500193653 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.137283063 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195764736 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16058572 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117700012 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72230671 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095172095 seconds)
  done (took 12.254791495 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11595303 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137133489 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124082793 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152597275 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141350698 seconds)
  done (took 1.756737413 seconds)
done (took 124.285505507 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098343882 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12765498 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098048139 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130935006 seconds)
  done (took 1.520289526 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095099327 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071135498 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101105754 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075398825 seconds)
  done (took 1.418293001 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18972105 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168829972 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401484704 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07175567 seconds)
  done (took 1.579934962 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114651871 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132809613 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104528162 seconds)
  done (took 1.439186904 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107477729 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129398716 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103140215 seconds)
  done (took 1.424305655 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105122529 seconds)
  done (took 1.189532049 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108274918 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138062957 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10936131 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136471743 seconds)
  done (took 1.57668041 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099379321 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127387601 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109330705 seconds)
  done (took 1.419535159 seconds)
done (took 13.002579162 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104004168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418993256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384412072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144681103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721632521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380285142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048829203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146826361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165795375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093616283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140024614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672136035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038279211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374519329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997197105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467357293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676510458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120953451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119394245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09375661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03192235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092630396 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122354739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092911217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702053814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425710875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095562011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.476068297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092195713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126827954 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383104967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12348881 seconds)
  done (took 17.146456661 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095525251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174261172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098673743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138721865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123611471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094941753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127142938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093504247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178683855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122895192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111028294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121973812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125828624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094973802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141546823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092611724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125377256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092814726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122041792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12220159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112298588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120136665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094040527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122081694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094145962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136490837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122140721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094386849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121094562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098994884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127398585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095160349 seconds)
  done (took 4.818769023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141507848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183233404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129739468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127120128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16884373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1237846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198607783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11831296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183571288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123325433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14006451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09344387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157705906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122717645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121873474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097182724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122181175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093545164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122980534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139786291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093415363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122310731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093566688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12275475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109219685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124254509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120718573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093779676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127592557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100611047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12417942 seconds)
  done (took 5.146518552 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097503154 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125526241 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109698801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137639167 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096049877 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125551203 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097365443 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124326266 seconds)
  done (took 2.00074452 seconds)
done (took 30.198000065 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110568225 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127500075 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107520079 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134680809 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103182549 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13150102 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091265038 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133708831 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135195345 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103713846 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136913434 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092257773 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123167897 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092329722 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13638108 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098442066 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132479682 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102345882 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134826431 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132108248 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095058966 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133476812 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103207057 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133257953 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104211549 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133725989 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137702183 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100652291 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121910437 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094939951 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124366533 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103308875 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124588795 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106088891 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126369712 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097418057 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123465107 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095159997 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133440561 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13369522 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100377965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134194251 seconds)
  done (took 6.00007945 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107904065 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139665424 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105742977 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081508586 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117406195 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081166697 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138255882 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079695264 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110029597 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108541526 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074530542 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106543734 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079004898 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101510873 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078394045 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075874317 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10805343 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076079417 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077099453 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106179676 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07965962 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072699631 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107934745 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078742896 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074788109 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109933627 seconds)
  done (took 3.571258168 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10008045 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13444746 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11414475 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183567703 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161716787 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100153424 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132066027 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13985217 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10915691 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120188643 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096767249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149787638 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110320246 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130055093 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092932266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138612033 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135773036 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094746315 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129548815 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113058366 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138772673 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10388623 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141769289 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133229853 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092948927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12330091 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098033574 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13468057 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097759816 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13185235 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097024906 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124732057 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122941343 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105477244 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126985229 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094635504 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142413354 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103048092 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131796383 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093463441 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130813037 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122622192 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11475911 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16226965 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092364911 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130083911 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095995552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134261988 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121416767 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112084779 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132996233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09247384 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125305371 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092255366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122816227 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108401931 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124882661 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095760048 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132677141 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128109966 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10631948 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125480593 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108773766 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122009547 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099695481 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121869395 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093341182 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121672914 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143335173 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09488633 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161421262 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094179839 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125025935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102828143 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130514698 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128625205 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093863905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136960083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102422501 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126542016 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102891641 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125990807 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09594188 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140148296 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123864902 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095509295 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122484633 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10033909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123684604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094626368 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13723144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091869928 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125430111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111127179 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121958002 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122668688 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100398658 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126504401 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092428986 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136395372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098957243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124047415 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104088109 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123427048 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125453345 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105033256 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127248186 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092151122 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128076118 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1007344 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123633915 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093778022 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126479312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094815895 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1330746 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129150094 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099137078 seconds)
  done (took 14.862000503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22930349 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216497962 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206135534 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293728093 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135999248 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114960828 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215149482 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156149455 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124007528 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160553102 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171851834 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182109973 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140142168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212973714 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170628051 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09400209 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144297546 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135698736 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245982958 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258715806 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145297349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101621296 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162292877 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160302987 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138268377 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103122669 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141637273 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134872841 seconds)
  done (took 5.810092227 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10898944 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157420981 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098998063 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145696676 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150000569 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093442541 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128967353 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094576106 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136251984 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136683632 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093060438 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129622487 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100465143 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132630904 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124247826 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132720606 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096136689 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127116894 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098716834 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134194964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102417038 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127482991 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121699556 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103333183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121738792 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086792466 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143977788 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122652358 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117393341 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12144391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103430181 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137892606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094564431 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123953772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095706849 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126149775 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0964331 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126300835 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092753358 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123359609 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078456965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123362242 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1377185 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100020308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08138954 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130818374 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.1290141 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095190633 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121009625 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09638286 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125706004 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097157171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130667363 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096149232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12474684 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096534939 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11637479 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100975455 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125184192 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085631651 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121787116 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098573638 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118377969 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102760549 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128522739 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092232786 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126015917 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098010016 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13026848 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095454088 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130072977 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091239592 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126071073 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095713923 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129404436 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125954157 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092892393 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122889929 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094930017 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075353371 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124255628 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074107272 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126585955 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092267921 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122666883 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095979227 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130070796 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138141208 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09648782 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132841457 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094912086 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123594444 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097438415 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114633268 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096732857 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141984641 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142526675 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095354835 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122808993 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108990359 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127297754 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093948579 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106750893 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10320111 seconds)
  done (took 13.022432266 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131654708 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15555083 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12503948 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113007481 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158029791 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159256418 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101600499 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131945081 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096474638 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143050587 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094673776 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132868419 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094184551 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1390021 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158157117 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104500545 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126023889 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108962438 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129707264 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170894201 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112705456 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143521869 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11239623 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125094903 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128726981 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111235318 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162086083 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107977067 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137378624 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144350212 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108149161 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162564018 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14420569 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099096927 seconds)
  done (took 5.503298171 seconds)
done (took 49.857024939 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.190443447 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.434264669 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187824112 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.122075349 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21681813 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.206013517 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20133671 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19097125 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.849029183 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191423394 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.442251674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.767967801 seconds)
done (took 60.11863476 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.34957357 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346215512 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474035953 seconds)
  done (took 3.950709237 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.759869988 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.127213429 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.451085614 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190856169 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191565321 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484523528 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.865123819 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.549704107 seconds)
  done (took 27.974931957 seconds)
done (took 42.15209963 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.180217186 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279153424 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.211470792 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175351963 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.303241796 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22045748 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.650930994 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.52692069 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208707251 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.171669361 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.210854976 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207257203 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.217068436 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.734761087 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200144322 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207617804 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.253889901 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.061936459 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601630866 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206230257 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.21375145 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.210535306 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.202554844 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199056781 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.208732351 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192627088 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195900781 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.20321143 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.803129822 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199282151 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.22176782 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.803697959 seconds)
  done (took 191.600305883 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192573741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.27038125 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.358494012 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.226339149 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.750394247 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39447059 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.3581912 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.825737165 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209611393 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205669032 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.480305488 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193677478 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.543194441 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.162286667 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22193415 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256819341 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.405599056 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.534301622 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230303598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335286236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.216255339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.53408042 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.4646319 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.42359944 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.254546974 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.249382311 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.20224188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.214388051 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.408210004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.350683411 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.215247986 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.23648207 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829133748 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.045629845 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.211340593 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218490925 seconds)
  done (took 150.346683301 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194172936 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19501921 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194494195 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228563727 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196450597 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781067956 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783905253 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.748810694 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.624973182 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.708621057 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563814579 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196809326 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195349156 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290276354 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.1953526 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208836274 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19698681 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211598348 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238433712 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199033427 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196395912 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783027074 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211281288 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.204160221 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400987904 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214743717 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229684823 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589014622 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195725265 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229629819 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530921939 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246751588 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196720062 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.646170066 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.754487267 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313287918 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199108481 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229990236 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198630733 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481174299 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198212717 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197210043 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200353281 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944730057 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201742304 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78582076 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199536713 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255430742 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201204155 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198167575 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.847436563 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201175617 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.090936844 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217057905 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197755993 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200066396 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197727051 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197960367 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230086394 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.851816825 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295104916 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216465493 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200846392 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233042249 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199066511 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.331767047 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217591896 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.056891531 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270095087 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305716657 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787365147 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201624712 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29929306 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320898489 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199091657 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198514353 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198777048 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198940023 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310234037 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19906885 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.623518393 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376906993 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216040931 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.766280373 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300050566 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199118223 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661519261 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202462681 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199496775 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978244433 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200537358 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29683162 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19903937 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199637679 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199641103 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62302698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78883306 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.566958913 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204222126 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.933147975 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202212003 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.642459388 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.767395701 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936182258 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204169897 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312996653 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378439678 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21754729 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20001938 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.732285592 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.201969602 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259789022 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201070561 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598803341 seconds)
  done (took 368.775828299 seconds)
done (took 711.840893499 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.801555228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.785907192 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.903286861 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778070024 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.741396148 seconds)
  done (took 10.136025627 seconds)
done (took 11.262400597 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391679681 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.390439693 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262269392 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391859703 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234193407 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411480894 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370976609 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222083996 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304685615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284351234 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304329836 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255310906 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238288508 seconds)
  done (took 18.188746295 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512626146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515745908 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26733988 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517587877 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241743332 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510955692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408089988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414461336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418670559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235306455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21572732 seconds)
  done (took 16.386129713 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521140292 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517071426 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27056881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519637071 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243925635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517729318 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406997858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418893177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420783804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237025593 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217535402 seconds)
  done (took 16.419207091 seconds)
done (took 52.120574124 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212808324 seconds)
  done (took 2.34074192 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246502977 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415567904 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228875649 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219045287 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21334896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214386361 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219481698 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213550937 seconds)
  done (took 11.099641829 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211684964 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213134792 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211823798 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209949521 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209733404 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209884514 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209031325 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209464891 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21178038 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213328128 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211144361 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21024649 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212220506 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212649054 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213449462 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210583386 seconds)
  done (took 20.510355319 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212928685 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210271913 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210083487 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209888784 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211108011 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210338001 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211969449 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209574268 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210950401 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210233687 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211442327 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.211394613 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211589409 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209983252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20982946 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211331163 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211592267 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211143516 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215657678 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209978389 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213099854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210916732 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212440237 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21299751 seconds)
  done (took 30.203333395 seconds)
done (took 65.282509107 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.826624279 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.8700679 seconds)
  done (took 6.826912173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213478776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212836529 seconds)
  done (took 3.558752506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214504415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214611271 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214540492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213760783 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.214000856 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21371455 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214047577 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213525954 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213452443 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212778118 seconds)
  done (took 13.269951262 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214740798 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213499267 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21237441 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215429625 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214160916 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211646299 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214967783 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214997527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215566331 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213541626 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21628976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212987523 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215175238 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212959647 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21517597 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212720263 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213264047 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213299832 seconds)
  done (took 22.984859031 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216041818 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21546348 seconds)
  done (took 3.563609468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213864608 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213923719 seconds)
    (3/7) benchmarking "month"...
    done (took 1.213837628 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213311326 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213952945 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213904445 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214386311 seconds)
  done (took 9.631233743 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217765319 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397882726 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479241707 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823033661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.218175064 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222077284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.093532781 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221380983 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.223104351 seconds)
  done (took 14.029704937 seconds)
done (took 74.996309001 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.244273432 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226234092 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.485784637 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226663945 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.22572219 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.509305786 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.25239988 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.335434742 seconds)
done (took 37.640359552 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.213435197 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199306023 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.983448574 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.197237675 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28619147 seconds)
  done (took 18.799903762 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25354205 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553171722 seconds)
  done (took 4.941552894 seconds)
done (took 31.090146028 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219746016 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218098173 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.216007009 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21964259 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.215870668 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216154929 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.219701556 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218426549 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21933672 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.220118863 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.218833042 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220068981 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216205962 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216605444 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21723586 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218151002 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216894446 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216903484 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218873531 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217072634 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217352228 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220207789 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21798618 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217529928 seconds)
  done (took 30.368728333 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21986151 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218688868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219739915 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219240315 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217891346 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220345213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220924554 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218572798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.219691945 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220495495 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218290403 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217272036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220679916 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217729436 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221011588 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217984552 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220224392 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21774188 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22077307 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217703163 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220498284 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217202425 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218418361 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221267228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217722924 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218707806 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220699498 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218224939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220468365 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2184661 seconds)
  done (took 37.715697032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226530178 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227793196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221383158 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22229023 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221234574 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.2210816 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220860426 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.222046534 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22151526 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.220905386 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.221335182 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222127415 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221185445 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221147283 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221743679 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221512249 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221370595 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.222014192 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221240706 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220876379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222309944 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22234914 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222300183 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222255097 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223728112 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.222636074 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.222620526 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.222786819 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223106344 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222721827 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223015342 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223199959 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22241943 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223514842 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223157273 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222378384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229139837 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231596113 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222940526 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223540843 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224357414 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223962092 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224238079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224511391 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223468718 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224628976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224733597 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224627337 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.224239834 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224384986 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224071241 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223879998 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.224874744 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224180331 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223917537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223346625 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225572044 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224539599 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224564498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225012984 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224424129 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225188355 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225203048 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224923311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225660658 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224976686 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225422288 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225012241 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225633955 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225351037 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225879476 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.225496206 seconds)
  done (took 89.241958527 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226102351 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223483186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223257988 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223169484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22289605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225562234 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223370126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225917862 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223235153 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225928555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224927426 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223883961 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223338894 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226879088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226837354 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223939634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228090117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22363109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226778735 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226648817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226192386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224915335 seconds)
  done (took 28.091735217 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227850303 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230114673 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225286556 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227446796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225390674 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227675167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227152764 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229582687 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226612159 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225144351 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224845647 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227564915 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225555424 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225480733 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225294349 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227558381 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228595113 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226442665 seconds)
  done (took 23.228269221 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227324226 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224305649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228849966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225265681 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227350514 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228966141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226372307 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229227845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.229559259 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225703546 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229357034 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229703986 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230764624 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225211026 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228838603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226944835 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229143067 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226319755 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228890497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225832655 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225949751 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228837277 seconds)
  done (took 28.153740468 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228953245 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228894235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226159365 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226546758 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.225686957 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229055788 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229010604 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226797835 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230980764 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229451427 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226731528 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23020998 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229519805 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227936408 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227147149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227471573 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230331825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22893404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230822926 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227401403 seconds)
  done (took 25.713509748 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230418908 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230954633 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231403398 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232047955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231147142 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232480053 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232709441 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232124949 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23166179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232818854 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231899313 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23203854 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232853968 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231705521 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233024468 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23244487 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232221137 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232505172 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231751719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23290815 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233270287 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232287894 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233087284 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233287683 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232641288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233425724 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233545979 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233298084 seconds)
  done (took 35.653821692 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232701626 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232552141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230292463 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230366113 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230856059 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231248929 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231061183 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230465474 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234557569 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231034446 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234482597 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234132496 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233659936 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234159736 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234700136 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233653334 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234078121 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231999131 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231737181 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230928501 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23450765 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233780652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235146264 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231991409 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231634408 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235192955 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232022871 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232100217 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234531411 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232326713 seconds)
  done (took 38.131527229 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254041215 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252657446 seconds)
  done (took 3.657139492 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232595829 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235072362 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235092625 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232557978 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232126953 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235155193 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23601762 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232442819 seconds)
  done (took 11.021347299 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235961001 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237033778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236492423 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237272151 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235986325 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237359712 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243538214 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257284438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236201162 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236732315 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243310482 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243586351 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23903185 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237063369 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236433959 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2381687 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236448644 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237253569 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236763773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238183934 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236891341 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238912314 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239553878 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233901791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239030861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247703046 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260854929 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237235682 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237857448 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241619606 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236929895 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234262745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237404107 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238995028 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238569023 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237782915 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246952044 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258726852 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24479533 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258192808 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23940915 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234718242 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23960678 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240285561 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240896248 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238802205 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239522583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236771797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238286262 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242976886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.244283058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23939121 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235916153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242501081 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240911776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245535816 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259212732 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242895053 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249658753 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250448737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272168868 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.266343962 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24145131 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240496423 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250962019 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265518607 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246303964 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257899019 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.238102841 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240331275 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246451576 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272655437 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267593521 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240266959 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240704041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241334323 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241444149 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24124877 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247798582 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263772177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246525742 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241487018 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252452789 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265327756 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241856314 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241768289 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241814463 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24254474 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242513002 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252433405 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260948336 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242228785 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24229605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241583194 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24229469 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24329734 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242894484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243169418 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238811704 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24303259 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241995825 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24696691 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251590812 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242686762 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243364704 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249805508 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262857071 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243112621 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250697355 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243329712 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243382247 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244814304 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249738803 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240748906 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247561007 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252483862 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243717073 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244630366 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243760734 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243518937 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253770073 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.271256891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244384145 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244763892 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250102864 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25492174 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245382285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247692192 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244404361 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24325888 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24118441 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246439367 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.245384843 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245410833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245462971 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247183208 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242825836 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245408852 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.245674295 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247147487 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247721798 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247411929 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246503525 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248622865 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245888404 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247341541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252270342 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.26582586 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246747041 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248127583 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244086135 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24627633 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24655275 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245862353 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246931902 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245503242 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246707507 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245277813 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246721403 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246679574 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247515729 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247420638 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251724748 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247266516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251628583 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247725002 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24454651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247086471 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248042018 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245911832 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246792763 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246746976 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25105242 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255801085 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246642683 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248548354 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249809901 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2469973 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248162262 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24798638 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25259332 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255782695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24742025 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253515604 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269285943 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249702072 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247821141 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248674271 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248958004 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248489636 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252716378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255719227 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260749471 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274923419 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249813955 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.253839129 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251733168 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25276201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252783701 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248839346 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249925271 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250817472 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249139403 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249665173 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252019083 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250435508 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249082796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25007148 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249782831 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250902247 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250569399 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250522455 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251268807 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247336172 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25102797 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251087173 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250445033 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248094329 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249451059 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250620978 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252386185 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251442912 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256288538 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249000267 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251998216 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252548181 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251204227 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249761703 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252613742 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253621742 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251799759 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258427778 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271594603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251878648 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257359209 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27131784 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251145061 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255100717 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252837099 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248818433 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254233867 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261283491 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251560847 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252727741 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252532239 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253324975 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252566257 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259035218 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270108707 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253000182 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252992637 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252842774 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250680172 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254249586 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254134023 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253478409 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254478185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252926053 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253828087 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254448077 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254367586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254875969 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253828722 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256913837 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262081874 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.2590677 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253392273 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255271698 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254767549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258190283 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254227673 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255287655 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254723084 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266929181 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280153266 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260514586 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275924505 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25460776 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259536291 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277432055 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259302361 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255622917 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255195217 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255105609 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256305222 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251834064 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255752805 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256079435 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257026703 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257080955 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.258899281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254709735 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254924181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256058783 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25668264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256321894 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255631645 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257479134 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257443868 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257369542 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255346836 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257449129 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26249318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276551561 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256700354 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255550606 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256783646 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257001662 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257595654 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257015931 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260124536 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.264480452 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26049765 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266483698 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259745285 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266690659 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.255566099 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260549414 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264356138 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255076657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.256264302 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258412208 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.257663938 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262637008 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278011007 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259063287 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262514277 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2574777 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258091001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25736702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257643544 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258972875 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.25817238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265913855 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277560056 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.2616714 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259455877 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25495197 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259072996 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257950181 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258118336 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260472972 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257891764 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259736155 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.258853165 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258760024 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.259426998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25864117 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258621035 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256263224 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259016399 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266214614 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281726654 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263878653 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258743611 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266569654 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280247491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265382 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.280354723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25977801 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.260130263 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260331068 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262653528 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259357982 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261656913 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261291418 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261014271 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264883456 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.259621831 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261593678 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261338623 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261236569 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259583397 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27237266 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285256308 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263041847 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265429795 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258737237 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262350504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267019742 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260730847 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260750225 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265062927 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273394735 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269314953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262249067 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.262125241 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261554603 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262127782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26160619 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261160914 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262204912 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262955196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262214796 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262146007 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26476721 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262677476 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262902263 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265089207 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26474524 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271965001 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283785479 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263785702 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263654894 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263402497 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263549317 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264739771 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262524162 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263175138 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264411297 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265549822 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272223006 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270365384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265466476 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263367455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262769477 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263353745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264592315 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263615166 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263021822 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264086317 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264682144 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264866559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264981835 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263247054 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263740121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264059433 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264745534 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267429224 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272092972 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264648584 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.262077329 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.264269355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265119637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263481678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26473455 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271665688 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290235464 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275216941 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273337096 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269347516 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264811025 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268402701 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.27338004 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264091873 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267400554 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266089522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266287285 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266718375 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270144531 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26680416 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272874466 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.287239414 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267019867 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274054638 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286756124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265817879 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26688731 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270058979 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.266343755 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264485932 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267037344 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265991195 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27314887 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289277872 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266870961 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268318518 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266863457 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268696364 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272330663 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267529062 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268498492 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263509699 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26832824 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267320583 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267197779 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264611749 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266913802 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267794125 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272347249 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273952428 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265420807 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272364546 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268606606 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268384036 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268194963 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268835194 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265362355 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264914572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268263124 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268616763 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268781145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270401484 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267573202 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27081738 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270510146 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268661178 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27218168 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279893074 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276080146 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266707911 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268643471 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270110225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271024144 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267985995 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268892476 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268116367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270185003 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270150937 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269779116 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.269153457 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272984845 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284815427 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289580917 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269396697 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270915019 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272522841 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269653521 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267341582 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270610376 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272276571 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275413735 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277780011 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272086897 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276707945 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290870293 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27226454 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.274696644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274309711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279130884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.27328926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270492839 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27171058 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.2763991 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287042175 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272380657 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281807469 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302397248 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292339974 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272162984 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272533554 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270581101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272414602 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273818457 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273805399 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272330323 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272279459 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273295733 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272906911 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277586173 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273059393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273612676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272132782 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271585866 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272633179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270181257 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272608758 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271887368 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.2734402 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273185058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272684077 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272695448 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285940812 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300540695 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272904237 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273882935 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269890343 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276157482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27759267 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284771551 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281753848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274496163 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271977293 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274473966 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272146285 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272409672 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274747088 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273564214 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274077763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271243271 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286071551 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301058215 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279401461 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273869828 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274742024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273436195 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274957126 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274112845 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274076675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274099957 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277868364 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278148385 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275005164 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.274646488 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278047127 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282262532 seconds)
  done (took 751.477707909 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271843343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272555263 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272286104 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27312348 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272086927 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272313475 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272299734 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273224133 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273526289 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273680212 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273882935 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275968653 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273707851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274479323 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27348115 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27340076 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273669951 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273218011 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27508209 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274559745 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27356271 seconds)
  done (took 27.929922783 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.2761854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273905289 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274316721 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277490673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274367766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277079397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274406549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277983486 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27726476 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274240319 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276947462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276692979 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274490682 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274793689 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27518652 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27641102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278280054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274965981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.278008101 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275205199 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278950461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27623196 seconds)
  done (took 29.26293358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27770852 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276921157 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278286427 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275517943 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278612719 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276075347 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277833967 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277971918 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279110692 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.2789028 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277324586 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280345909 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285342237 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283626658 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280316499 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279036859 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426451801 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279064588 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279203571 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278563675 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276452877 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.28442222 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298145283 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277044491 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278466855 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.280252483 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279502164 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278916657 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.278872202 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280149406 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283922157 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279624996 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27955838 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28134904 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.278469055 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28040626 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283799195 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279858335 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.278103168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.280175752 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290128644 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.301114131 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280638608 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286768637 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303066526 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281076283 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28417981 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.287064257 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278616311 seconds)
  done (took 64.128148857 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280347371 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281866339 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279734726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280571608 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281610374 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28182039 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.282122519 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281066503 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278555348 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278736875 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282721048 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.278417871 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280104119 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282225045 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28257922 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278577747 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27926178 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278618334 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279377869 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279389332 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279146402 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282992924 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282490156 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280653572 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282516458 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279057798 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279344487 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282837674 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280506245 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279354086 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282855245 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282756552 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281591813 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281621721 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280199915 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282941106 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283506532 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281044246 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283308234 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280759854 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283593053 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283332096 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282453659 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284257013 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280448847 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281052136 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280682717 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.281235114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281419685 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28293788 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284648605 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281153227 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284067124 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282344572 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284136464 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.28484611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280915277 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281393882 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284258086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.280788278 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281011645 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284707374 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283101936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284379457 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285012647 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283046508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282267027 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285567926 seconds)
  done (took 88.351355324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285131824 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284579405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28557495 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284535225 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285324 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285960275 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285102326 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286374423 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285443689 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2859476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285316501 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285490041 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286377504 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285646675 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286467534 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285236824 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28531503 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285624565 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28591063 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286042039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28586571 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287435155 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28607485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286517991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287032655 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286038943 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287663668 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285482354 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285679449 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285419464 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286851419 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286898323 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286057592 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286667734 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286272278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286924917 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286424299 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286547688 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286722591 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287407586 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287460462 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286241512 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286949084 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287266148 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28678145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287505885 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286151185 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288218291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287025397 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287362678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287448359 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286152762 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287048594 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287018281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288020508 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287261581 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287075865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287683409 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28660186 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288910948 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288485395 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288468053 seconds)
  done (took 80.961005382 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289185471 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288834287 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286818945 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287495393 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288807555 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286785801 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289952604 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289219725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289686777 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289506596 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289958667 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28712869 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286793668 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288920838 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287613865 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287122592 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286844858 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287369951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290685651 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287642282 seconds)
  done (took 26.967160824 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287741391 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290411285 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287344051 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287896329 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290602903 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288492176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291955928 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291361838 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288484633 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289354069 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291239778 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292283704 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288547692 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288453 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291368028 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289487664 seconds)
  done (took 21.836168749 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288217431 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291657181 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290988276 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289816985 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.289023061 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289009246 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291978025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289204219 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288821219 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292481247 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.29092572 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.2925285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291578027 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290974055 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290496277 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291577606 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288437656 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.2890383 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292423664 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292166342 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28999037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290379005 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292510401 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293942664 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290087577 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.29139593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290449782 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290810253 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.28983923 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29319003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290353155 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29162251 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291541013 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29083685 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29348213 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290777101 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293923326 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293296647 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294485024 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294856463 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294351168 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291577811 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294439963 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293985434 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290360501 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294903445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292233837 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291127919 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.29278572 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291659886 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.2948054 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294286954 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295033334 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295364541 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294827653 seconds)
  done (took 72.256471446 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294690016 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294704144 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293008627 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296343153 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295823639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292813398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295906745 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294163766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293495421 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29631861 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29330151 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297065306 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293227787 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296117319 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29346291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295423382 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29337373 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293308162 seconds)
  done (took 24.509363657 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293240088 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293904396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295436743 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293259408 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294538999 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296982811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294060036 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295693316 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296789056 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294457415 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294198894 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297050893 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296369759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296737493 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29453924 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293750248 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.2970013 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297300018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293959182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294280789 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297366923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296268702 seconds)
  done (took 29.704427769 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296306832 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295040275 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.29617569 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314116229 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.317506932 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319806648 seconds)
  done (took 9.046887618 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305403595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298104432 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295068159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300400544 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296374691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295239314 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2963903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294695529 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298339146 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295194714 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295227052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298298061 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297904256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29529504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29849591 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297910562 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296491898 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295415775 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296466344 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29800168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296051172 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299244959 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296177934 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297068316 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29523489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296399705 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299735748 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296818152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29682137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299225654 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299431172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29766102 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300232515 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297459073 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301117324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299482825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298248625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2995917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29965906 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298129384 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301440485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300108394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301356433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297943351 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301044308 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298111337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298334215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298667773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29913949 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301554222 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300466519 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298264065 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302163402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30183517 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301540775 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302076303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299742667 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298598259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302016366 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298622643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29804289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301186081 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299303406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300060174 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301123487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298411565 seconds)
  done (took 86.943698528 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300315888 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298983902 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29993849 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30140759 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299827479 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300310534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299614803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299554428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300486806 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299427588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302559142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300286282 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300047601 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298236635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299785991 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300357736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301174945 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300114281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299542114 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303999842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300716155 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300099518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301403346 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299309061 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300658655 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303769289 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3010479 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300827756 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301315088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300932331 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301524286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301553064 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299778018 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301474628 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300781783 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300212001 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30164191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302439414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302249309 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304587651 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301606637 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304901723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302610174 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301966851 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303105943 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302601721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301676109 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303348538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30156123 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303776171 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302685037 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303967913 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303177967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302359369 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3016173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302888073 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303459326 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302799029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302786879 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305949674 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302611971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303183687 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305541494 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303120584 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30322695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303019283 seconds)
  done (took 87.125213409 seconds)
done (took 1752.613998575 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473982141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422300719 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304218256 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.334163555 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30467295 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.306952747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.327163839 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303962627 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.305065303 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305054974 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.305315541 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.534865892 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.306051562 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305202164 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306118179 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40260543 seconds)
  done (took 42.76435941 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333479995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31217162 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.431823506 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330182333 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334783114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.507519283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.368264597 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311669028 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494822377 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354692959 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.033295612 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336425067 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310704771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.503620766 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329529426 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50776863 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582133913 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.000079943 seconds)
  done (took 30.600961751 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807842539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.340037194 seconds)
  done (took 9.366110339 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331810423 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310762754 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311394264 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310966539 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.303144597 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.32160155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309865781 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.319980348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.331718379 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.450241014 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311614214 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31941145 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33165339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311014204 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.307697548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.351964859 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468267108 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309936912 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.307298145 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317164927 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310224812 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426409504 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.354923574 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30957729 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447260201 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.339224067 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316786583 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318107645 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449099942 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311222874 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311209925 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312221504 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313593221 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.94716554 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.847906184 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.323450169 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337471004 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321907148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310223029 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.491913069 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.314552795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319723999 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.313957467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.846243201 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46191975 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438709421 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.605519606 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332329825 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314490867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.377372492 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.313261511 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314113375 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.344136507 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.098059262 seconds)
  done (took 111.36149452 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328239858 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.696770774 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474601671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.328758737 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018360885 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974009658 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.327020307 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.620917608 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343317102 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305491629 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.596869674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840694281 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329993128 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.380324647 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.335323681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.398749581 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308393156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.060140712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32652948 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.31185877 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82418806 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30713596 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326591678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.445569235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.348053856 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788794252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.820292157 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.795982274 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328110992 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.307816653 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799196376 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.328080305 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.374990872 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307928947 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.582723338 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693607845 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.690556928 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326072595 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357787221 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307738245 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.33974305 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784985592 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693785646 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327786644 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308769391 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80881234 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327303463 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314949446 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.313721758 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511662145 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.181484698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309107581 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.82056159 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30867977 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.587968863 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359740845 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363353003 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820927319 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329887304 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.414223731 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367243663 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309809678 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309554275 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313230977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312409931 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68391969 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695201142 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312497705 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681076745 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816044181 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.329511933 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866229394 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.128797975 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.311205391 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372337443 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31050851 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.88161476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830894466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357444519 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311311943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671216586 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.332980228 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.607631381 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329676355 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332157896 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835967344 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.318016638 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.312422909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.325520838 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311445712 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.929085339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313003875 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611286515 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.33149255 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312566767 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.31170328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.352379021 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322446525 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312153525 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.314834621 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868792267 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.333686956 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.456839937 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332156225 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312320404 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312025732 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.314839899 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313282954 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532513997 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.79055433 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.336931661 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313998903 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.314668645 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.313432362 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.45204659 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.314969408 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65001449 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335431665 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326363461 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319148518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952516969 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36998794 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314027413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.317816201 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.2256961 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.520305657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332499303 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.312731822 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31445615 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332460447 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.632490443 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337111996 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.349815374 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31358557 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0460004 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.354589794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345490179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.844431749 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318486019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303111291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.338724602 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314981631 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622413677 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.592062647 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605928953 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317139203 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332921503 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.017961245 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.376748622 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455244003 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334867595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435820443 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514779332 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.426103955 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316802064 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.040253206 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317903131 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53276804 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316033929 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618959528 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835692387 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334680512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324508183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044233791 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.070321485 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.965944527 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316949392 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606944517 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.322448632 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791932583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.316196773 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318116623 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.747230292 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320038778 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323372163 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317472547 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317980987 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.47229955 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492242544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.928325008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319764617 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794107501 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358475222 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317304115 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343213002 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322152398 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.665554471 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402405915 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.321885957 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.335999839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.31691669 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324385429 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815152875 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.173774406 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.318769113 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471536589 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979378271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.338557106 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318175914 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.938941364 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.586168449 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.857003623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.399498831 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654709321 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.344854333 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357274907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.918778634 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.400187269 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817144719 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33872568 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318851745 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938035161 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.338606834 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374117913 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.320385692 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319953715 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880706437 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.338037377 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.320133217 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.647113149 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355455449 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571428118 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.321510292 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35688078 seconds)
  done (took 1108.143557344 seconds)
done (took 1303.45307463 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.320635253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319528611 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.302701494 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326538637 seconds)
  done (took 26.505363267 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335255997 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.330525433 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331666082 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.329613007 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332817625 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.330561422 seconds)
  done (took 9.231058961 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.664918712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323938162 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327155182 seconds)
  done (took 19.556564507 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.552917185 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.705643167 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.683078553 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.725341833 seconds)
  done (took 10.908403627 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333361877 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331627797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332018425 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334376536 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.340553332 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335529329 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333736563 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335272595 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337393088 seconds)
  done (took 13.253514636 seconds)
done (took 80.690894039 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.327487326 seconds)
    (2/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.746647176 seconds)
    (3/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.494407802 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.855764235 seconds)
    (5/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.30710912 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.587033849 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.63725073 seconds)
    (8/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.408993983 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.259609728 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366111498 seconds)
    (11/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.755264888 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.353366765 seconds)
    (13/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.021335407 seconds)
    (14/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.362402272 seconds)
    (15/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.698812951 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.911176318 seconds)
    (17/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.307205459 seconds)
    (18/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.606004283 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.305822053 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.975080248 seconds)
    (21/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.183585265 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.351703267 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.77603838 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.514695856 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.349878131 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.425874585 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.328496742 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.427855431 seconds)
    (29/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353869714 seconds)
    (30/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318455668 seconds)
    (31/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.880492444 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.461187142 seconds)
    (33/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.728094589 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.308623858 seconds)
    (35/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.54142731 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.456651108 seconds)
    (37/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.338128354 seconds)
    (38/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201696664 seconds)
    (39/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.799266477 seconds)
    (40/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.436658713 seconds)
    (41/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.743687509 seconds)
    (42/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354109064 seconds)
    (43/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413469108 seconds)
    (44/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.114056262 seconds)
    (45/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.474003136 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.441350503 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.588866031 seconds)
    (48/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.307943985 seconds)
    (49/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.342871689 seconds)
    (50/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.440481492 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.609228896 seconds)
    (52/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.577437498 seconds)
    (53/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.936323633 seconds)
    (54/286) benchmarking ("sort", Float64, false)...
    done (took 5.72472326 seconds)
    (55/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.307636617 seconds)
    (56/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.066604648 seconds)
    (57/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338367743 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387148292 seconds)
    (59/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.30861452 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.697734269 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.317329331 seconds)
    (62/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323123512 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.869908747 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.308942498 seconds)
    (65/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.309064973 seconds)
    (66/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.990194199 seconds)
    (67/286) benchmarking ("sort", BigInt, true)...
    done (took 6.332012709 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.349516227 seconds)
    (69/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.458249395 seconds)
    (70/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.516698778 seconds)
    (71/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.438092987 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.014726958 seconds)
    (73/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.417958305 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.333961691 seconds)
    (75/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419101113 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.314161457 seconds)
    (77/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394626283 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394089696 seconds)
    (79/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.331780316 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.339113284 seconds)
    (81/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.708240801 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.58212573 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420318216 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.332102319 seconds)
    (85/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.385428234 seconds)
    (86/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.330169589 seconds)
    (87/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.845308011 seconds)
    (88/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.437731354 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.129674489 seconds)
    (90/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.331284164 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.585397755 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.359474743 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.380434417 seconds)
    (94/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.450600081 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.167009945 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.352499376 seconds)
    (97/286) benchmarking ("sort", Float32, false)...
    done (took 5.371920615 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312361545 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.066522415 seconds)
    (100/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32458246 seconds)
    (101/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.480401035 seconds)
    (102/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.310813927 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.341776447 seconds)
    (104/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.779129925 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.347693119 seconds)
    (106/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.311517789 seconds)
    (107/286) benchmarking ("sort", Float64, true)...
    done (took 6.367101303 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.573039179 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.702250628 seconds)
    (110/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.360385341 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.332837168 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.378958948 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.07873131 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438602726 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434264873 seconds)
    (116/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358759452 seconds)
    (117/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.205532972 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.431965928 seconds)
    (119/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.160068607 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416416939 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.33613154 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.856098552 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.377133778 seconds)
    (124/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.670895248 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615771116 seconds)
    (126/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.313923088 seconds)
    (127/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.834894224 seconds)
    (128/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.334351668 seconds)
    (129/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.210870633 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.068888587 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.166322431 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.595629411 seconds)
    (133/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.617958657 seconds)
    (134/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.346506332 seconds)
    (135/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.314677526 seconds)
    (136/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.228913325 seconds)
    (137/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.574483305 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.484522843 seconds)
    (139/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.343085256 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.188059369 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361652129 seconds)
    (142/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.314498551 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.332769965 seconds)
    (144/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.333593562 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.430943374 seconds)
    (146/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.013241263 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267868462 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.834193369 seconds)
    (149/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.365177785 seconds)
    (150/286) benchmarking ("sort", Int8, false)...
    done (took 4.397963931 seconds)
    (151/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.319424512 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.956095678 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.459811211 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.800887665 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315491481 seconds)
    (156/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.180483769 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.352165437 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3594073 seconds)
    (159/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.779849907 seconds)
    (160/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.365019395 seconds)
    (161/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.402879357 seconds)
    (162/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.379107359 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.334907302 seconds)
    (164/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.622052097 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.316772525 seconds)
    (166/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.148821131 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.160157146 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.830715517 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.975292066 seconds)
    (170/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.394556386 seconds)
    (171/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.734306373 seconds)
    (172/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.315366867 seconds)
    (173/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.607405897 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.370046956 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.362113608 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.363048466 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353384212 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.355482364 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.21437373 seconds)
    (180/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.337445949 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.397596104 seconds)
    (182/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.364607903 seconds)
    (183/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.953735882 seconds)
    (184/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.366347513 seconds)
    (185/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.07784819 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.12771613 seconds)
    (187/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.805477148 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424099088 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767623811 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.33735704 seconds)
    (191/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.263652831 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.275929439 seconds)
    (193/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.435457546 seconds)
    (194/286) benchmarking ("sort", Int8, true)...
    done (took 6.338685286 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.372512254 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 5.445694374 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414182047 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.316101538 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.342583392 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.332258843 seconds)
    (201/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.526715014 seconds)
    (202/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.319196085 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.97096471 seconds)
    (204/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.02363604 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.565262722 seconds)
    (206/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.317696448 seconds)
    (207/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.395975866 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.004282313 seconds)
    (209/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.402303401 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.654238082 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.452022238 seconds)
    (212/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.467398461 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.759077926 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380697592 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.859492493 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.846153715 seconds)
    (217/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.880031824 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.318692868 seconds)
    (219/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.546550064 seconds)
    (220/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.738607983 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.381837709 seconds)
    (222/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.357280649 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365846258 seconds)
    (224/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36529259 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.021979433 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.341625001 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.767358175 seconds)
    (228/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.421130663 seconds)
    (229/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.059077566 seconds)
    (230/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.352537994 seconds)
    (231/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.328397635 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.772636691 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.139129197 seconds)
    (234/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.446307943 seconds)
    (235/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.042702567 seconds)
    (236/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.384567058 seconds)
    (237/286) benchmarking ("sort", Float32, true)...
    done (took 6.363967714 seconds)
    (238/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.221480665 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.379559978 seconds)
    (240/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.321323115 seconds)
    (241/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.343660288 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.344884191 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.892493124 seconds)
    (244/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.114881294 seconds)
    (245/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.326652705 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.568323615 seconds)
    (247/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.33938477 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.322176074 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.321678644 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369017231 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.727249901 seconds)
    (252/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.265896358 seconds)
    (253/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.459216321 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.882582971 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.360132219 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.32309641 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.177084289 seconds)
    (258/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.32188013 seconds)
    (259/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.042670453 seconds)
    (260/286) benchmarking ("sort", BigInt, false)...
    done (took 6.346545668 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.443078152 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457730923 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.425103405 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425167148 seconds)
    (265/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.94807874 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.247264267 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.159248302 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.474929661 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.416941331 seconds)
    (270/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.374165586 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.267653792 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.150493919 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.385258079 seconds)
    (274/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.397041849 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.03709122 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44554228 seconds)
    (277/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.333015619 seconds)
    (278/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.359772012 seconds)
    (279/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.926487649 seconds)
    (280/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.350223711 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370979961 seconds)
    (282/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.113545069 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.326783974 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.368886153 seconds)
    (285/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.369991026 seconds)
    (286/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.323821671 seconds)
  done (took 950.5322188 seconds)
done (took 951.775150749 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.378358862 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374158198 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354570353 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.376775857 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468621499 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379411572 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36669818 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.358278432 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402574566 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.404161913 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.354575777 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.377871536 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357052056 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356083111 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354726948 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37122121 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.492621742 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357085828 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372357757 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365659668 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372274517 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354869761 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405596081 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.378242773 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358374085 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.359080533 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.360033031 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376032085 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468804921 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.358786188 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360722641 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.369632082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.493665489 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355490163 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351877305 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37657534 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.370368874 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366877423 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36025529 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.389564678 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.945407528 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375819214 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.360566178 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358749224 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35816833 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363542004 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358877677 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.365364598 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372781786 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37409399 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.93307529 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.392529009 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.361296788 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.357840585 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369423087 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358782154 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.361990879 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37638175 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378544165 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376615016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.481857113 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362994608 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361538306 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.378760516 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367894032 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.969162311 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373681586 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.364394017 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.943160559 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.384111877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.969874862 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386609837 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.361111281 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.373548945 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.392717399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.496482659 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.355637549 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359169551 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.368133123 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359091638 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371874515 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374290178 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.365873583 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361461461 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376346091 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384483237 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372335883 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363146706 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370308876 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.380354777 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.367872591 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.373059543 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364734508 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.356120048 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372876234 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.366106029 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364164469 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365623888 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367138489 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37122459 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.94691313 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400642353 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.359416637 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358234087 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360617668 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.376550309 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.946104013 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381833679 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383347025 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41077345 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.364350446 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.489341773 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.366522057 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38095007 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372206011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366166149 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358194164 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.491789877 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.941649412 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.398081481 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364744646 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361719008 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382433814 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365119965 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360698941 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.501721097 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.36489677 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378453146 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.484069751 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.375290635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396988109 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.362103181 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366890114 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38790287 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381548846 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395181376 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36703984 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381407887 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379603272 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360725518 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376297888 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374265256 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365642814 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370023878 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359313535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.38785262 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377737242 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378324352 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385545367 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485975794 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361917806 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.491184289 seconds)
done (took 231.661198385 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424249653 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.363206982 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.447850407 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361339654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.464542816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.465288016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.35881644 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.361388682 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360394021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.788457036 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.359278533 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.360338538 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.355275555 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359578928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44466855 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.363699532 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360376042 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710539493 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362543645 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.435041898 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.364562033 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.360957409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362644241 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.763549412 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363552396 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.358982604 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.435208542 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363713886 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.71116591 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359571557 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.362350076 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715535678 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45499488 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.381150352 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373321946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.3707088 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.467670771 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.383722704 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.446197947 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447543986 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451574218 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40277751 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.357270104 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.36649458 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366203659 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364699255 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.361468791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.392446293 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.36218167 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.36310144 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709616772 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374575692 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362931363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36330603 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.363036549 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394631471 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362690014 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.367546964 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.45710174 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366462118 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.431406904 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.74594661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.752693856 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.365519295 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.359495207 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364140593 seconds)
  done (took 150.553037999 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433187785 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437307879 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.484415518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.385613995 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417004709 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.488828312 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.384929019 seconds)
  done (took 11.302716562 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372809306 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.367729688 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415093321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415897942 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.366497845 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546557725 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367189672 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379915081 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365712772 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.421180757 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369042224 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367988407 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373307015 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.362053243 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41619008 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378133219 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.482637898 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368726777 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368862452 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523697007 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36582003 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.374454977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419541397 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380174702 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370280722 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373750565 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.179018055 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368806662 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365529071 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368495834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365697652 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.445691455 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368398627 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.36649988 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366188308 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489397104 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368790291 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367007799 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371607446 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.370835213 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368972866 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.369361442 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369873737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367046881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368903894 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392598748 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369780041 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369831526 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.369287201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370700398 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420600386 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37055988 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368343584 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36801083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.426789753 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377195218 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371227347 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368022599 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370891797 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366575034 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526556536 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416852132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.370882993 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.41906284 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371187509 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371176606 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369759435 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.37029567 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424298765 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370855544 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419466169 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367216726 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.558381667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.394119254 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372942884 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373800653 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373739209 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371104884 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.369534195 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375666372 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.3685074 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371665143 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377847609 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369113373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3683223 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540478081 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482825457 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368689915 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.384038172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378828326 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368512875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424769508 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372723829 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370828765 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43185329 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487970568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427275246 seconds)
  done (took 157.157320101 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376734778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381114205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37470408 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387976869 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372985393 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.374358404 seconds)
  done (took 9.545729787 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375871628 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.375697024 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374102173 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.374078528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372902308 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373574593 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375010686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376525201 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378958227 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374052062 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375083822 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.375602019 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.377589688 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373855156 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373962567 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374981184 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374235471 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371184511 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374252829 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374607011 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.479589607 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374853872 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374224787 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375512395 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.381072886 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37502689 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382605984 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373721991 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.374931292 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383171312 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39694235 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376839086 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37674523 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382040474 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379094898 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.377029499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380805503 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376956239 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372673064 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376426331 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.377283593 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37594483 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376749709 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.37816377 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378339464 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.382348441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382144677 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383957488 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377700839 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.378066369 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.377852659 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376356182 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377025964 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.377242445 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379419174 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401815905 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384052197 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377247163 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377113441 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378415987 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.378880694 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378672209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380152942 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381818907 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375300152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.378707131 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378878796 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383389982 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377480133 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.377819444 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379290313 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.37678412 seconds)
  done (took 101.591622912 seconds)
done (took 431.418033611 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.43315893 seconds)
  done (took 7.715940762 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.58402851 seconds)
  done (took 7.867759398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.803716943 seconds)
  done (took 24.092823445 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.439777108 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.399374751 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.385288549 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.395719118 seconds)
  done (took 26.905205144 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.000562708 seconds)
  done (took 8.284322169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.370636471 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.390275717 seconds)
  done (took 14.046955646 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.553068508 seconds)
  done (took 7.836702303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.416192564 seconds)
  done (took 7.708057587 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.393655347 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.396653892 seconds)
  done (took 14.089285321 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.351507522 seconds)
  done (took 7.635760548 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.065544123 seconds)
  done (took 12.351642905 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.374461949 seconds)
  done (took 7.660005051 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.422638912 seconds)
  done (took 7.707195756 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.135208674 seconds)
  done (took 10.419079058 seconds)
done (took 165.604806305 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.372442155 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373630397 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.372750608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.373482427 seconds)
  done (took 26.7760494 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412260219 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.415250842 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.414491664 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.424734698 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.41663509 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413562133 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.405213925 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.406664239 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423783469 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417514333 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41700013 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416903705 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418641317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409080912 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.418145838 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.432916497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425531329 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415726315 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406427357 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.419004656 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.381000038 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.425785604 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4175705 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381240588 seconds)
  done (took 35.220553665 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903581202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454375039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534473222 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434105974 seconds)
  done (took 7.612929864 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.434792886 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.434134259 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447613175 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485791743 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511630316 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445611618 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406669883 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405008804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389934547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.435074805 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.509978491 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.453226688 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520348522 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381320585 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569719883 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382561806 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382656538 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434101057 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.486640048 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516259812 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384550682 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434588327 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.440287446 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.453630196 seconds)
  done (took 36.032020802 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.382334836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401855756 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381925987 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381818971 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.391863046 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.382752235 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.383894833 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.385033675 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.384517574 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.389200466 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.382066117 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.395927363 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381695659 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.383374685 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390367844 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384342262 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.390801837 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382819736 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.383471421 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390497634 seconds)
  done (took 29.018737572 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.378198975 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.284495727 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72929656 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.635362548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.378352174 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.381181477 seconds)
  done (took 29.076058087 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.465094233 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.630723193 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386305396 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.805450963 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.904606442 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.407462643 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.385616991 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.651578124 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.018696912 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.021659977 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.454058171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.463280471 seconds)
  done (took 20.885765469 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.383192912 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.380523853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388190305 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39742596 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.447902873 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.410091696 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.392559294 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.377485761 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451737314 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4737499 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410884904 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.449970942 seconds)
  done (took 38.25591507 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468718631 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431304531 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.43378148 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410256161 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088856985 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592424059 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463416627 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127100067 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.407581873 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658368268 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384252989 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473087922 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636829696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386479558 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384251778 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.528495248 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631831055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907201477 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383463767 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.872254609 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4112798 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393527614 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985215887 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648588569 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619426584 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368898399 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.644040905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159418801 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701836338 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397104713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395422999 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380797597 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655556462 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079623749 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4998851 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62586172 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423306038 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929353884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.371580747 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.888490709 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388200887 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407491809 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395525345 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383982499 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319195478 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386989682 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13479254 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.411204052 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.096052833 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385286263 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678410214 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478525647 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387362426 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.958250224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44383738 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410848877 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387687358 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48234187 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979494292 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396364393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389944034 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323098294 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388103439 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.7860543 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083727413 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.410585485 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388486868 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388524922 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320503375 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.843128081 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40453548 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524159693 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410870732 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047536141 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160315483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40608181 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319375818 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977647255 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406185124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.323651998 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615345805 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163918258 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325545511 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328539291 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322461844 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15165732 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394596399 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.873393472 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408927944 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165689913 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653474084 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428182795 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41095101 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612134667 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.266812364 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386562172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.404021111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507901848 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408288392 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133997214 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343637507 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390358773 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645077602 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599119459 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390074589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.528386432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930978588 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413032132 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40723623 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392889569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635804011 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.052653278 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423373894 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381101022 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41082043 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164947372 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181967127 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397196688 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395458028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406155391 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663001682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.231124954 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273770171 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457803896 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392896079 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389410739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920614936 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.244716111 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.271809327 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.619086064 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413054246 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421789609 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.39145134 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352033332 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.391712064 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394340883 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.193682449 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61416513 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403510153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667156322 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325217006 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526881775 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407640808 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614489602 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.703176214 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.41481445 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650718895 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408444486 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40189465 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405702753 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409490822 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489943371 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413732701 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.405550125 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649554366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.394497049 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394252772 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923375659 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173229214 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396461829 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.397041246 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392180684 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03973786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381543802 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399538094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284865795 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405282512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460260113 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397232099 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63628138 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.506038186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423160791 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.397836634 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.39488883 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619494382 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403487791 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.920794439 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47725943 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.912166873 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062123896 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426556246 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.328377364 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.106403419 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.087392025 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394979073 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.582647059 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392556971 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638351893 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431157941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394351987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056082154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415970539 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.83776317 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.402737981 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4054649 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398841493 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395454813 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.466683121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431764475 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403680601 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407722963 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538341956 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408999999 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330443447 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913507115 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400581504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395158739 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.170657703 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42955927 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.820366066 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256508879 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675211125 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40139021 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691749019 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96641981 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.435037622 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397411594 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407774268 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412016253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.412033967 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404257283 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407558306 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.84873555 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.848718379 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964977289 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24038621 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020649451 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.822300571 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.421421381 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292591862 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151605615 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352668982 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057119397 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612072737 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17205815 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373445848 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920054855 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.741662275 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291135299 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699158027 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627881821 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90735788 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.437952712 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700695271 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610010924 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431163697 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402597083 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330725524 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.678548534 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00496125 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432935076 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485213444 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165531778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423300535 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183958064 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.411352621 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.208622096 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865370082 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967644468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.793913145 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410084869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402048752 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263256587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429271542 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924971275 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086412039 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434186409 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.923351212 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359082952 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646611135 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436058016 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.39519756 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.997777299 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414837405 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.65947911 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698897042 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334650264 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403477415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993550179 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276802714 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.406070853 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399975182 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205214257 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416267808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727571354 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.413994369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.477350055 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426497039 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334553359 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335148091 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.094760167 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403007957 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37216413 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94763238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.407436145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408248763 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432061295 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264752684 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657738676 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.415183449 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051687684 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648249024 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405538546 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425242652 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.406074623 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40426701 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.387794428 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.284973275 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637074758 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414226384 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648580251 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.465257414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.303161256 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402902964 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634712008 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297057601 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412558993 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686169544 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.136840083 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.402584129 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689368029 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452034134 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405005855 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.445041827 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419359261 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425000407 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495309657 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652455104 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.437473263 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414555592 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872345635 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430214039 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411782319 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.41813777 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498418445 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451807715 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.490655659 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.181729614 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05728861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235258168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074993241 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723783859 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405777855 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414059345 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33813221 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552582111 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930077864 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678528451 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526203604 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.421955245 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428762439 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40556218 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429038499 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62404674 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681349858 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276159547 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4056281 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09157067 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.566320883 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415956549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616626989 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95380072 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025903636 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520510643 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406088074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167322118 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701853995 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49748503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406167165 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998603605 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.414985873 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.228688037 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412508746 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423196059 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561222793 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705866071 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119689224 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441424588 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.567472317 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.179141971 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967682974 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66693007 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.005262057 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66344036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08446402 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.212387433 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671893567 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477615612 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657593906 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.541911043 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555953176 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.420791144 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.314933988 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407925917 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299298761 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121921803 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417944088 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060829137 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691980825 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.411982902 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.419662937 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434410359 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.417738186 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632813119 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183705275 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634379775 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418176516 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410898522 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.401615783 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0719689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730924684 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346716942 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.412993155 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687451243 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67034151 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434042167 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861121612 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.120065078 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015669194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.385034656 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431028591 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41276847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192894775 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065255004 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.52509761 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968766768 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070857562 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424462432 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687258168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415853095 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425096426 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688974658 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413934907 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417323234 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664655533 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.087983715 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315358631 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.424686996 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.020668959 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.352452241 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.640780327 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465739226 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347842901 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421338803 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.88801692 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438164403 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530883333 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422767205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418074399 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41594992 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.147368891 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707181417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.416806931 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.395096028 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.396724632 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437277792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51257516 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024101551 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441461179 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088439088 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.766282639 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669287139 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421714601 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.395640439 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416913046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413198445 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137360154 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393188443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416051355 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050059652 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.422733306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.427048454 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417349616 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.630777456 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626618204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427113836 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670708053 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456277483 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430927276 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.312608904 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18785616 seconds)
  done (took 1686.042149335 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414925498 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.449840387 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.444375675 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.513931437 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444781753 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473956288 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.446237828 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.505878617 seconds)
  done (took 53.017590483 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.428513914 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.578360941 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.448306951 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.432602011 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.429272697 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.425345651 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.924072301 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.436762245 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.424196443 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.425677781 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.420129544 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.421894044 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.133420128 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.424636551 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419152266 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.406282802 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.426187912 seconds)
  done (took 66.93533996 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.353498559 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.581697291 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.057376427 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.454879666 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.428013779 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.43885094 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.036486125 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.440622535 seconds)
  done (took 56.117198095 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43341522 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433617824 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433549107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.434753567 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433877396 seconds)
  done (took 8.494038819 seconds)
done (took 2094.770534132 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.420260026 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42305932 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.419905261 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422372625 seconds)
  done (took 7.011159125 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.397021734 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.110545058 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.396110549 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41034581 seconds)
  done (took 18.639029212 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.42144918 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.424856001 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.220167084 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.117993896 seconds)
  done (took 5.664916748 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167381038 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.179521267 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162950422 seconds)
  done (took 7.834446987 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.415736402 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.419480615 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.418736576 seconds)
  done (took 20.578996968 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.728759673 seconds)
  done (took 3.055980765 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.564651332 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.621255275 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.787965015 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.746898299 seconds)
  done (took 8.047263078 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.799084539 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.788843687 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.615447651 seconds)
  done (took 6.528735765 seconds)
done (took 91.53314134 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.696087993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.441774571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.620051885 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.706937861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.651626174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625204018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795482039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.67152651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.176060257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166074714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.671829388 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.651614159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.738338386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.440026664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.737720991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.823810581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.65139889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.744771925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.3575913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42644505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.796036839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.304673465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.497420956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.325247657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.6539637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.574203992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.901721615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823099572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436651885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.918828262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.573320866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.419824811 seconds)
  done (took 200.347749916 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420148283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.428093461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.42165605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.439679455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435405032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420060627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438885016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443021805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420356871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419617376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419606915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.420874244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421627464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.440340469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.419096338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421611991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426635838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420247433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431005094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419467831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422026913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443031633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.422596015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426982287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436345751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42341839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.421962791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43995722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.420216811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.439627556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.443423213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422863836 seconds)
  done (took 207.018495085 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420858431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.421376505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.423074779 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.436439186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421515278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422129077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421842298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441469668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438567126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.435469376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.426313392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422614609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425581764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.427127307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.421422999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422848512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431913446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420640561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.441514774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423392078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424695279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433634081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433898247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422586724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.446581217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425228731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.435331207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424456369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.439700414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423288861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.424322363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422552603 seconds)
  done (took 207.032828449 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.626563881 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430953173 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.431403531 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384704203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431330107 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431304529 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426399334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.62192218 seconds)
  done (took 15.117400936 seconds)
done (took 630.843164264 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.86177788 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.567988957 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639281353 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.450902799 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.310873288 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.47286814 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449877395 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.639934356 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.392163526 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647999079 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.801634647 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.470632099 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.955691477 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.449893712 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.724895922 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559476047 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.35863354 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.486062146 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.791807083 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.052544552 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.734291747 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.066905819 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.664517639 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.39619203 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.97723673 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.024864308 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.253008785 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.344347871 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.471334545 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.806028417 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.249051579 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.511416421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.523297447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.523018791 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.579662319 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.55841145 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.488406091 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521663613 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.664759947 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.785365758 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.077187447 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.206254973 seconds)
  done (took 97.845345186 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.415359328 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.415275188 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.414729276 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.415360629 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.416699773 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.415954222 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.41516196 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.415724238 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.41603933 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.41557031 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.415879784 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.417320349 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.415487121 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.418432495 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.415739662 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.415252671 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.417138786 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.418332563 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.415003475 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.416572374 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.418014538 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.416703748 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.418110171 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.416844933 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.417830593 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.416477182 seconds)
  done (took 38.16254216 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.436728173 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.70043286 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.882626696 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441816904 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436596618 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.440239517 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.525131926 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.436421619 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439680322 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.438853054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.618454291 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439723827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.4749463 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.91259697 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.439559583 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437095477 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437425621 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436366699 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.707462862 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.446313485 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551584689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.438759953 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.526386343 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448602758 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.463501131 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438032073 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443629835 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.01665841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.459867588 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.617700009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.35919362 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.529211657 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.952703638 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.920081495 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.367728029 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.444872725 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.438693131 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.624296222 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.439803793 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.438348308 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.527785402 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439970354 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.892926751 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.125760167 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.460476935 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.440054721 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.036362677 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.643577711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.726141712 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450236557 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918785802 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.442908597 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.441702334 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.440660528 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.722138042 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446122224 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439161114 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.037753858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466232795 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.532521502 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444857262 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.44038214 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.716475367 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.440922631 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.703729233 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.443192551 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450154254 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.463934386 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.904486396 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447578823 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.14934667 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464009053 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.441422043 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.62157337 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.704988871 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.077962108 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.470016815 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720907643 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.968933255 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.551651711 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449841068 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.005098846 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.553543859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.445796201 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.444609058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.443088864 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442635886 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.4918563 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.52980182 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.082635079 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158770544 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.064454645 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.555463536 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.458764254 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443070033 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.039041485 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.465743291 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442147708 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.902806929 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149598279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.465260572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.450199264 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.155714366 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464741136 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.535435792 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453189798 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.91640051 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447595116 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.492615139 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443139387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44998685 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468136878 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.535467551 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.451759892 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.444692844 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.13180609 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.659219682 seconds)
  done (took 190.581394638 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.440387849 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.436951916 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.436981512 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.436912575 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.437270339 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445226209 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.438802823 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.437406313 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443468867 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.437615916 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.43862248 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.43732441 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.44005162 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.444571842 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449289609 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445786425 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.052342693 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.43926675 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.44964767 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.439041566 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.267641391 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.440241286 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441069043 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.439321834 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.438748283 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.44011903 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.440730799 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.4415818 seconds)
  done (took 155.123267965 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44643193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087396226 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.466090185 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.601087615 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.473817679 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442964456 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.595349595 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.51117397 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.467780358 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.444187243 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445169619 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.805678016 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.451368551 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.04954986 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.676344175 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.628248996 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.04034861 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.466499618 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444936325 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444989598 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.602550014 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455856573 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.791701004 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.089246651 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.468172966 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088583965 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.430897235 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448572745 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446488014 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.093261759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.465038883 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.794032824 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.538437545 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.518523194 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.111313368 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055734219 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.05678222 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.624408826 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45177554 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446540764 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.447387901 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.430984368 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.093662132 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.47103916 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.451318092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.116819306 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472716174 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449046069 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.455436396 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.445679454 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514884455 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.536987456 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818056867 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.100415574 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.559283836 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465145303 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.606714809 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.83911149 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.452064698 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.036508491 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429800615 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.100375071 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472131785 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.431445335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.448545078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.454326378 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.626041157 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611988081 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.045530106 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471186285 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.03884513 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.646167678 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.452052798 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448200386 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451797074 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.100327002 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.060470947 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.647220193 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.613266118 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.681987688 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.438707648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44986752 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.432693793 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540059356 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453609895 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.104026715 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.061938388 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.47092598 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.451782224 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.45226299 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.452406526 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.658019987 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.127233254 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.563363456 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.032494936 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821063033 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.801226089 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45391538 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.518657992 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471168087 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.802718109 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454061065 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.517646202 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.903310403 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.804192362 seconds)
  done (took 174.550768457 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.722430177 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.764103709 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.546621522 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.61163419 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.097800364 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.061088769 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.841283121 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609517057 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.571998451 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.733642802 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.712164678 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540810628 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.693995253 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.540796814 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237988988 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.548946152 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.570776098 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.609548993 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.623828584 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.528494878 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.169254994 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.754230986 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.661999957 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.487919808 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.551383095 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.279108365 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.064979889 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.006129227 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.640520916 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.855910114 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.011152914 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665932219 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.509267153 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.205031108 seconds)
  done (took 70.384777251 seconds)
done (took 727.979755287 seconds)
SAVING RESULT...
DONE!
