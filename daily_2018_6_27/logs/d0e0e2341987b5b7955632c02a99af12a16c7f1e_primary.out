cset: moving following pidspec: 11898
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.019038049 seconds)
loading group "string"... done (took 0.545227835 seconds)
loading group "linalg"... done (took 8.929475049 seconds)
loading group "parallel"... done (took 0.169846704 seconds)
loading group "find"... done (took 1.436561366 seconds)
loading group "tuple"... done (took 2.086279612 seconds)
loading group "dates"... done (took 1.367004992 seconds)
loading group "micro"... done (took 0.217362678 seconds)
loading group "io"... done (took 0.626865715 seconds)
loading group "scalar"... done (took 43.301211976 seconds)
loading group "sparse"... done (took 13.732742064 seconds)
loading group "broadcast"... done (took 1.130665281 seconds)
loading group "union"... done (took 15.113652192 seconds)
loading group "simd"... done (took 5.250121379 seconds)
loading group "random"... done (took 10.293941122 seconds)
loading group "problem"... done (took 2.128070235 seconds)
loading group "array"... done (took 25.442789308 seconds)
loading group "misc"... done (took 1.082110986 seconds)
loading group "sort"... done (took 3.614447642 seconds)
loading group "collection"... done (took 21.482914007 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.625485622 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118699858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.168619293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.19286147 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193581692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157238462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162182578 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.556727586 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009273985 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210125484 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143250522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.543675997 seconds)
done (took 5.832075143 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.24614902 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43542521 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112214109 seconds)
  done (took 1.228531889 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093389959 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178247197 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094803272 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112580122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111553044 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111517649 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093646621 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109846563 seconds)
  done (took 1.494829086 seconds)
done (took 3.744341588 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.485895557 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864709586 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.495906558 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128656135 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158416488 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148394565 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316981146 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.168272398 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122004146 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099893716 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174647966 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.366222187 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.488862161 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.944113081 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098537844 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132761963 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.089505318 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707367937 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081027273 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141603834 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524890496 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114143101 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121944257 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140530948 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195350512 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131394812 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178776118 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110566023 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677799636 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102472582 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18669112 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100552773 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163065815 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.251069067 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097529941 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093726487 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675876451 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191677773 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112404309 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101342618 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675358497 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081051077 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195716547 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.113238346 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117764057 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189173531 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11563862 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079025745 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104502222 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10552244 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160299921 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.451761129 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107164024 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.145584205 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109207466 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692602044 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096867341 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155604875 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142323497 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108180617 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096855419 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118315871 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158781235 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109741574 seconds)
  done (took 19.693422297 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119063966 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141366475 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094693273 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141910383 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140563465 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097315867 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084702737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096611454 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111812489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186010724 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136886557 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142952886 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092278955 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081671594 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118840275 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249340257 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105184423 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120502477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081882171 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10861537 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140741292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095699895 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108905499 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108950808 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16991362 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207188807 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110513037 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125465627 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096623675 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099729653 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144394644 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163718796 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076576151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095791041 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182707123 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122373404 seconds)
  done (took 5.195198403 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199438563 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117343504 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19248969 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180512047 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14839331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165963414 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118268341 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266683858 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199449817 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180065206 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112779381 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112536174 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077472872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096564518 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077962932 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.688890203 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184056343 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152466102 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125698043 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105459551 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083899695 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378880522 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102182861 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083643247 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103155998 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072839456 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176831105 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10380579 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.294989638 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122074629 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088836242 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135025339 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213085159 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.167276402 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115946532 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144356074 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105056277 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081452604 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.236355118 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091779914 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096303733 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108271032 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136631561 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133712992 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098800604 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092922846 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24016126 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081743757 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119862478 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.08419883 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200201029 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094969274 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099297675 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.354047716 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117281575 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085455659 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099870736 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.300051789 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130851288 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081842651 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077681378 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103463811 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095595773 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404209951 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092631228 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.992146731 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098179461 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157517174 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100588235 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106456469 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087585682 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104203885 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103604529 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099604904 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079727892 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09886453 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080241122 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10327424 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116178534 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086045933 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09692572 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149229218 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119679677 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084153698 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119140223 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126910517 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08734969 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097100264 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113824588 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096560977 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083380705 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101028601 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147922702 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087794302 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118313931 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102180145 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14454718 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082927552 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.202933448 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081814149 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12611594 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101386057 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112665994 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099513248 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123898858 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080780296 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102273524 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079581589 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099230924 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149169902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098069372 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080733569 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10239667 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094299756 seconds)
  done (took 23.86723279 seconds)
done (took 49.433516897 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.444358768 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113065969 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11224833 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111753871 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110460027 seconds)
  done (took 1.642489092 seconds)
done (took 2.372285741 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.331056607 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194278284 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102291461 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197074467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087010532 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203170214 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164420408 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117814882 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.195536701 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100491972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175917515 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082697631 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105261344 seconds)
  done (took 2.809374194 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093902573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120959177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082505467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112297559 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076734969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110982555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093230345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.134843361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091505064 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103729229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076757978 seconds)
  done (took 1.820439065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090695202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115165824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082091203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107942867 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07677646 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09068663 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109421629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118685333 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091970176 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104170713 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07731632 seconds)
  done (took 1.790804692 seconds)
done (took 7.136022284 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.04796175 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.349844162 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.102125263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166237407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343705451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191453578 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.539376369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111835196 seconds)
  done (took 11.781744635 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112223626 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100088514 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080541983 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.116033587 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081457481 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099003324 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083935108 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100671496 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084033287 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098826739 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081546205 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10050838 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082716108 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100903131 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081158963 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10087034 seconds)
  done (took 2.290384386 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118528065 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117722048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105027936 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110241326 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085248494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10286285 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088187661 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103860273 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084571218 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103071667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091153105 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108191079 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107152101 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084163216 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106392509 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092389661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102708397 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105818167 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089084687 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104971663 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092036926 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102543989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106986973 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090664274 seconds)
  done (took 3.24154195 seconds)
done (took 18.040414766 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168988187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084956053 seconds)
  done (took 0.983540518 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099909454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121991302 seconds)
  done (took 0.958610204 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105525989 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097106526 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136272231 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116922928 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08397779 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099134862 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116131149 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101354947 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082587509 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101531348 seconds)
  done (took 1.778136457 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085051145 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103434292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090573932 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121074565 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110630793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084276188 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105476329 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087102273 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105611571 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081398156 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107260738 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118628647 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088909281 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119710347 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087144455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106396197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110452491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086294931 seconds)
  done (took 2.536652528 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079883359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083566137 seconds)
  done (took 0.902422788 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082499725 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095952036 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083945407 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101789334 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081059327 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097623917 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081341222 seconds)
  done (took 1.362289217 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505040611 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.254562277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334502571 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.097075388 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151842733 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.368111925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135203937 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.1115597 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112946697 seconds)
  done (took 2.85179774 seconds)
done (took 12.111291629 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091049429 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.190225765 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.667719643 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118045667 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078141659 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160199559 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.259472399 seconds)
done (took 2.30062999 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353397971 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12767693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090377916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079242262 seconds)
  done (took 1.38399647 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080474639 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104859509 seconds)
  done (took 0.928969545 seconds)
done (took 3.056533901 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078506585 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07867849 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.094123038 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080050958 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.095234769 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077962084 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096933937 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078290637 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128645124 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.079693931 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098418615 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07878548 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095967626 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076141332 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079531481 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099759692 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078109888 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094108728 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077087886 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097259444 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077973823 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093984246 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077629197 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079338248 seconds)
  done (took 2.870656298 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098687521 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09645798 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083579318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102929348 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084104028 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104673917 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103414069 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081476999 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103745287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08316849 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101858359 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08423378 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100836926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085226082 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100727846 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084874974 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104202232 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099310544 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08381252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102509986 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08612055 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099200396 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083457963 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103668957 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083794422 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101660067 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100950025 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081150646 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103772041 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084509516 seconds)
  done (took 3.564005157 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086347674 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076682682 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096316693 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.088948363 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094467415 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080448315 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095131715 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077865226 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097157778 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077630737 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097067834 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076830477 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078022991 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096687363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079716564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102398897 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096413426 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094372033 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077875248 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09613654 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084114988 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09602965 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080163676 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095672572 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078300311 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077056788 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09588151 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078011812 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095712201 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078585597 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101171327 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085513535 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094936619 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092175739 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102973716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078159743 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104064818 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078336208 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097704033 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077642929 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077633746 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095581855 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078331584 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106857325 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080760686 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097103589 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078420745 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097571974 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07886647 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099168585 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077894723 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078783562 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098455501 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080080421 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101166265 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078150191 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09747634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077418689 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097307923 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078249494 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095421303 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078032576 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084295966 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097420119 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12045199 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089119465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09589974 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080419313 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082273487 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.105768018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080505045 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115648185 seconds)
  done (took 7.168957257 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082134759 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105167304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079193346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099312441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077000509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079182932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104799729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096390273 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080591176 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11543614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078765276 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098369177 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080939674 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100712618 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079341439 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080481722 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108213584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094738807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078850542 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082126677 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098746648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10347139 seconds)
  done (took 2.759419946 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221782617 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103616835 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144600864 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115807766 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098953407 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114038858 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104186079 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087900063 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103409686 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089510629 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10707052 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086216157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116949882 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107011709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090197892 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108510195 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104243848 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091510078 seconds)
  done (took 2.748471895 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092326456 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101441935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105566292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100283742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082093936 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102808854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088200464 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11612105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10298765 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082212103 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110475344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08412047 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103348076 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081444419 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103278158 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082705972 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102626451 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081915144 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11114522 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105679946 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089210796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110673183 seconds)
  done (took 2.89878361 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095656383 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100080639 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111727072 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104171766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07720877 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098931395 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089602713 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101055489 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108460851 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083930756 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100214006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080723318 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107245862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08223753 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10697307 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082288751 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102154162 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08218527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10292533 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077698409 seconds)
  done (took 2.653180986 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12329951 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115549738 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099091337 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128053648 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117660055 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09799372 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127610579 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11634854 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09887754 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129786868 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098900553 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116385034 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128581714 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106049574 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117569579 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127584167 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109385896 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128707577 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117513884 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099273842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12995171 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117287827 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109110502 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117609202 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101160419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117071495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099463333 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121694139 seconds)
  done (took 3.98056374 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079037026 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081471716 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098416574 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079543698 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098373649 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079501637 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098071207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079527509 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081773484 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097171709 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082127769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099749678 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081494842 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100475775 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082430292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082012599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101048893 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079722887 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098322385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079570623 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100135038 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081681399 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100017947 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080516893 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078970052 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100449533 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079770832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097661244 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082585402 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097684362 seconds)
  done (took 3.422634927 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087891777 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104897001 seconds)
  done (took 0.954448643 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077615967 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116089012 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07855986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10463503 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089097896 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101652552 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092597697 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10690523 seconds)
  done (took 1.529052057 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104215772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120952223 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08868871 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112958936 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102363017 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120639512 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168001506 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086314636 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107496566 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081900559 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120551342 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082523377 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.1108704 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08792874 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109967688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115452849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079880369 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111682704 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089455244 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103798119 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088821859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118345376 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094646561 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110083276 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086919594 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113625768 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116044722 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095553816 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107456343 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095235589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107664694 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077206261 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106657619 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088774497 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099296752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.102066194 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119023802 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08790961 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111959649 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089342396 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111793479 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078834249 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11238835 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089859102 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116642127 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105981541 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089215932 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078757856 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102250149 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087085066 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098034051 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086965976 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097134682 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093528601 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110154062 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119756887 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084667303 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107033683 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088736784 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105616102 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091212849 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106993007 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094036048 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105354064 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094207329 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111031596 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092519416 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096829534 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077022766 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100123159 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093562114 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126107238 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111093052 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087116232 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106023045 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080724122 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108291158 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090456625 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111604613 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09527216 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107082152 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09162003 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112875554 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086702973 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105785178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091163868 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107046887 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086900458 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102694641 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122778392 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085558933 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08121997 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10357071 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113541112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088378611 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089214404 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102668089 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111553798 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076812102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088682896 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110465882 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108481132 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095094391 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106509519 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08906227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110624693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095772148 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10747397 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08846162 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099684294 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090228054 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105659102 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09238822 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096669877 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09007919 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106997487 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08969014 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113470024 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086558496 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108842781 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09617699 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113730414 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086426731 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098973628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089161344 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.107663438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093256592 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114498295 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086504974 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099515471 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079139699 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.11107074 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088855554 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111060546 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089270613 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107606474 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077184628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.111364317 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089546712 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114391906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104831062 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088520473 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111862428 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090591684 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105133634 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09373208 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105414598 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083624907 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11192362 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088425152 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097919194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094618695 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10694275 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086332107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107101381 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093378589 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108375134 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089727435 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105361641 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089921704 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108589701 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084088405 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108388405 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087902179 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115544194 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088627357 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098000637 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080867132 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109627211 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085426605 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107259208 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085043003 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107723955 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090825481 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101100212 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087771777 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107102923 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102078207 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116695267 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090493002 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110689504 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11426039 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088734631 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110321231 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088316062 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110273014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090130649 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113439024 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091351743 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108185568 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088085872 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099872546 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090858067 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113021949 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083346318 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101619163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084223709 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110741664 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095230617 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107136549 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087028679 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104420044 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088568829 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109561707 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086503787 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105821986 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083620674 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107651919 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.09176076 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109754288 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090444518 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114285682 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089625074 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098400306 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093225914 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104682054 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092372664 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099008656 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086476729 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103953368 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091228786 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105637537 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088058638 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097745859 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094730528 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114051436 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090820266 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104754411 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089490934 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117259939 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088361999 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111820809 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090251661 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11152567 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123137121 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084160557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089885847 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114114879 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105633272 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07621681 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111225534 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085022072 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102057605 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08712701 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086906129 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111101575 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091895906 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10896947 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078860196 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109688207 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086584212 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103567489 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080092126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113024085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089434023 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107632297 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113429595 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087654368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106026722 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088336847 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10440807 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087375623 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106228985 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090388587 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108322298 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085376051 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101257196 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086519435 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101545221 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079533385 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104352322 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086585239 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107888305 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087967709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102819349 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091118215 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104958936 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087122628 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122895878 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101679518 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082151998 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106910575 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088856616 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104753523 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086413988 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098080987 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091949381 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107359562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093862041 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10507427 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078679718 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106985398 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086469426 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107829017 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088573396 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10923771 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08418233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10501247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086184227 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114963257 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084187662 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115137937 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090590363 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110617689 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087837381 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108748299 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086847282 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106122495 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089434499 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109915088 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088488117 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104667562 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087687219 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105482917 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104295656 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08443725 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087783798 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106718976 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10704225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076434403 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082828819 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103943238 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086405104 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110360817 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086745869 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103542438 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086452446 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110071568 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087780755 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100148527 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091823637 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110090918 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087276906 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116569202 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082376127 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105904293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115391695 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076819217 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105991254 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080093579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083088694 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112339064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106137645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093159044 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105023598 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083101038 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098373962 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088274722 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084523658 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095689527 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081470307 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110484303 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084633766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105480037 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08790922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109088277 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087648263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111111977 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084885319 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106128772 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106367628 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079567051 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085280988 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105699913 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090177261 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111059232 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087021428 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101845857 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090177075 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.110307779 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091539696 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.109107827 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089662605 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114776546 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089265506 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109656866 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094941168 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098068378 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0879943 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105888869 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089459804 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104450448 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089717195 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108037719 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08862776 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11099718 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08635061 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109307063 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086622742 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100774632 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087086149 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106403253 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087323948 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103038527 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088966009 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112784998 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080645705 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106166645 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088155097 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103918579 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088334301 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10758713 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106223295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091761388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106721004 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08782987 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109830808 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087302355 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10690377 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088393305 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103954886 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092100798 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101359324 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093609021 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106535773 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088321851 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105496352 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084560882 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105809613 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086911687 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103931477 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092821173 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107343167 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082986794 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101405534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081712672 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107933408 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091605953 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112093563 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087343777 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106444825 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079461449 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101381546 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090255755 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105858927 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087439437 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111046946 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092988883 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106036496 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084646641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105403873 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09220317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111536279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088270474 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103364155 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088529548 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10879786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105948134 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085291212 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086835461 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108687316 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108475429 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087024551 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083140364 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116286424 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110890592 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089640916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105217744 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091078006 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108669659 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079670368 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108858514 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087958295 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109606019 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087644516 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107771358 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097341982 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103362664 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08918453 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114200731 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087109001 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114999687 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07758516 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108015746 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107383494 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089136184 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079411961 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105586737 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083879674 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109092593 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08368999 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101047726 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119631372 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09344344 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106622464 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086723168 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106370857 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078670072 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080463058 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106930482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092256189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109931103 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118451542 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083576113 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084452312 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100522626 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089303141 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110468541 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092474854 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102148342 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080173031 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107443553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092336172 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117920021 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088163401 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.112132302 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091503752 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109981951 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080395266 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112887963 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079577122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107329768 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117204108 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089095536 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109034087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090604641 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113634778 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089103231 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100242751 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.093576413 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111957844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092841087 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112575594 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094636947 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127632144 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11049993 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083955692 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088972776 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110545263 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084902526 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118126182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109284749 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089498175 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113502283 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086105331 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108996048 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094092457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108661876 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088853061 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10687412 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086438006 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107357817 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086760455 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.108230792 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094501798 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113988906 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09204649 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114789663 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088559129 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122348253 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099200616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112231394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082960201 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107786088 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089139373 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103945854 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094365586 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105887285 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090329772 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109246034 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088123932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11331787 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093544595 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112099784 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094759416 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.111650311 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081369432 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114132173 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090032684 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113413606 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086882862 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.11172071 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.093827832 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116255823 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095983175 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109679276 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093193772 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111200884 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094966369 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103734575 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095409114 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111184506 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091783111 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108798795 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093074262 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.113389151 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094262706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11256232 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093156754 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111763945 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094680754 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113557369 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084313047 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103921421 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093236905 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103700012 seconds)
  done (took 59.599521956 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150045431 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087826613 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082870475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101929673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12738596 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0796984 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100442759 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083039806 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104904381 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098447532 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10348669 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083675511 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125121023 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129035594 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123384092 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113076834 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079236514 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101457947 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079012153 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080955909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122329504 seconds)
  done (took 2.971385734 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104466905 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117025907 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116004895 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100825206 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110847554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116345835 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095204717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116626977 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119281356 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11127916 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100893523 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116578041 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11070024 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.091850559 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113736626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113932227 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101620845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109551684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117462075 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096005961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115401576 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113963913 seconds)
  done (took 3.224813404 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093809661 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09152686 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115688352 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.085400096 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111680119 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086322798 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11705014 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088606 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.116439908 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092179692 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109359461 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09233867 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11752177 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086115532 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.110068115 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088318486 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.116949618 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09150816 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112840568 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084294639 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132448755 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.083278244 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10360405 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085536558 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117778587 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088536719 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108472521 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089924573 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.108275077 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091592542 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.109257003 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095241149 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115840094 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090146789 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109129434 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092516105 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112525195 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087874721 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.108537272 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.094410693 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10705028 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.093407396 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119271784 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08881608 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.107980433 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094097167 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112051598 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084646194 seconds)
  done (took 5.655406523 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121085097 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156814459 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091916482 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15455851 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125047028 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122943349 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091821239 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146625221 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.083762117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108736653 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124030509 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121864008 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088808703 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116114349 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091915288 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108193269 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111274921 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092849816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114926241 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094411602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116592373 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091063174 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122276276 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119016225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111458584 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088047533 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111164244 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100595613 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118262012 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113736305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094995884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121175195 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130607398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095918017 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109874498 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090778277 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125210945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108432715 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091707754 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109866243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092441309 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119100945 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110852472 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104897945 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108297126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109043107 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091735675 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.109748268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106628231 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113265686 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117091011 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101094341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114533613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108056159 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094193748 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126772901 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08771002 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107800631 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110543955 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09965508 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107210262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097706463 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12543041 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113507896 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096558986 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12217854 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108823622 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092836227 seconds)
  done (took 8.401505002 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094893143 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.131230757 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123390668 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10328798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112739559 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111970823 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093822823 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11244185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093327349 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120157011 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111681142 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162464495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08676605 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118686958 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093303269 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11304847 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112164033 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09320807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111889537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093373483 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114909179 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123199006 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093264579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123411343 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124952966 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085682192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114863339 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114169962 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1041085 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113427164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125675814 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092784505 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113164027 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124291738 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125673307 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093336792 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102961868 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09423973 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115421935 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096736139 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110899631 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126129874 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094173348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106715614 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094324192 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11706183 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122933995 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125111253 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099869543 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120218488 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112769096 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104027365 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113410052 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112681484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104374845 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13117423 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123745911 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124163421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094183632 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125272152 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123912826 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131527979 seconds)
  done (took 7.735702657 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084398721 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08600315 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106608478 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086175475 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110605211 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087005704 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110551318 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088449763 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090357799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109309258 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087624262 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107992582 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086779616 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10964185 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083369587 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103974286 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083522315 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084082793 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107465531 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08514365 seconds)
  done (took 2.723212878 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09345427 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125506552 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085195728 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114059342 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086996967 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11287159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105656013 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088807862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104939657 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088557948 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117614306 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097378194 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106277698 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111656859 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097098604 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111432818 seconds)
  done (took 2.479506672 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105735128 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118484045 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129647669 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090759604 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103336947 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093189933 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105280573 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081032398 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10145388 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094313169 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111275011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096726933 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105479992 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083543502 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106855596 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091908868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101144793 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089942908 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.1047237 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.111081285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116633866 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093270476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110415734 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110577337 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088921123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116657202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09230305 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103762765 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085283518 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10835635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087903531 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114228784 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082433114 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113894624 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084223499 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105090015 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086415369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107628252 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09065342 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104866335 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082861044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107590633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085898712 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106565722 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080580519 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105090378 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080628535 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111707812 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086723811 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110720557 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086894265 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.117676338 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094604335 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.1212904 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11500627 seconds)
  done (took 6.351549683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099897633 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108879261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089972688 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103628155 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089256455 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113611347 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089184845 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107399739 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087702652 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102713939 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0876642 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108839959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087509557 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109252426 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087616924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109137478 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080852687 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10768817 seconds)
  done (took 2.6029929 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091139627 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104932503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093245057 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104960749 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085773773 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086205671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102303381 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083863682 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104301032 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08506154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106458589 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087308719 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103190584 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088003448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104880621 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08485843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107327533 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084026579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104706483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081815762 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106660911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084568774 seconds)
  done (took 2.918568528 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103094547 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.137526914 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10501031 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.154066433 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.116263511 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090647372 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122269167 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.08947676 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128656952 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107970449 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.088645937 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109633611 seconds)
  done (took 2.18930496 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111875024 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14385371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082726413 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108583688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118819095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091150521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110942182 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090746796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122975687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123317316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09022504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124024566 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122739195 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121832689 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098615293 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119113285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109395519 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091792093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106343018 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131299393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091050183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123634448 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090088837 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112177308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11030006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100536134 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122998574 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123831619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110764774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103292522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119153629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110780075 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102809124 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123579033 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107629621 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10286688 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111069092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132765197 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118274911 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101677621 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108068318 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098555544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123900538 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117248857 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122952183 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091368236 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118248376 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089946622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112313414 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1381599 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118162433 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121586974 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098803921 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122736214 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122982469 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138404717 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104354873 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121748231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11895029 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124433158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121628439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099071022 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122947556 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1243711 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098785659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123024764 seconds)
  done (took 8.278881697 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126679954 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105805285 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090628924 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126347719 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122437825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111467917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091424144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111153883 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091075214 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10801044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158654586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111364226 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102758517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122510044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112149243 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092102514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111929727 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122244359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088329858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139617741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11158118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101495134 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123354038 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122343699 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124466379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097959574 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11353886 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110717286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091638769 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111628118 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118899405 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091227116 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122263392 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08381876 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123096549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111125177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091244636 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119176526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110511813 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098552842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12243165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132101489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110974691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091811796 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12410472 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090367485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11271321 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107687088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091452808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107628052 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124569723 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104852803 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125774176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121526524 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111450019 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091992763 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110787367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091694004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111589925 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118893651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102845592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111741637 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139724705 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090842081 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112830816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122363993 seconds)
  done (took 8.15585105 seconds)
done (took 158.578442914 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103496537 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143854229 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.1049101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175987946 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086032869 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141248768 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119396366 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.12200253 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085767821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10705872 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086358718 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109789714 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151669757 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107139679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087118318 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109617825 seconds)
  done (took 2.681776193 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179338243 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286059501 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105083459 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112317915 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092475656 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109866013 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090203017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113822756 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087231084 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120196706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086941489 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110752332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119184514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089508982 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109037787 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089544676 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122219931 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088963662 seconds)
  done (took 2.958626873 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111592357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163607279 seconds)
  done (took 1.125302343 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122653868 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186670109 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306823538 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16360956 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116972021 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130193956 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164404397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127585124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195772714 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130244236 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108428707 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115012443 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137754446 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098685931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118110466 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093286352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141227182 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115566768 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096192453 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117041321 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115168081 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115417499 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097240146 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116567078 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184095248 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128571729 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092848723 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116423458 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114628924 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094584796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119530406 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127485824 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108113488 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.190770853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098311119 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185539172 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100992509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114136335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094760941 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114236319 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117105018 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097146821 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129404361 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093020997 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115683815 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121204639 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095307633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114610404 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10143294 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124268733 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121223596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.335647323 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.188528586 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102644804 seconds)
  done (took 7.917633263 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.825097287 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156273469 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113353559 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.931785867 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144948889 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127247138 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.826438685 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113744519 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.265133406 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.826813143 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131207569 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125745765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211218252 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28026749 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150274695 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31787527 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.730910223 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102020634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144523319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156307304 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11919711 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140259108 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110767801 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.440894575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114428988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090623335 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118984713 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125594469 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165634712 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090727636 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117310326 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184654698 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29205561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183354323 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113847383 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090275965 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112169741 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173928247 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273744315 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219517944 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.155170614 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109517458 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08927416 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126213249 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132694479 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086606061 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190543798 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180806257 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178331886 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117056547 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103425253 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123112562 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125004577 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166726484 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109861535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319129207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344152556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11342774 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100436511 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132129647 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269630128 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090948755 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230346021 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141750039 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21689936 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09157362 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789979565 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173077498 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112454922 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10118536 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121850831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095731523 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125331032 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175195637 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389086063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128635084 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094264394 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113121824 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23154069 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113031739 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090858128 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189898282 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092796482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122265438 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106198736 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127379776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176562411 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277786287 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10450586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127345422 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11812702 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103803526 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116163821 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217912268 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223460437 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163834069 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238886256 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104841589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191051547 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171378796 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101727105 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.200320217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099187111 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132174478 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126014401 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218249087 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145417702 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093006185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117235106 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098562779 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150652577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115606805 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098147572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173268102 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491917306 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171216302 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110391775 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095739179 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121836322 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168644134 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119383595 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245720097 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123279511 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173110412 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121241361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088890609 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121581834 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169615465 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129101536 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122412407 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103538462 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121551452 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255972152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226014569 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12875293 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2197677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182682158 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123358072 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179394667 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12221719 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176362729 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123078413 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103226337 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11647087 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785369406 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104445473 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121565612 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117174281 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179524091 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114010515 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093490671 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.11279295 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088225601 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813661495 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093124525 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11271813 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092674013 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123378256 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121473209 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096764837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117986537 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169592302 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236955525 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126845686 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09855402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113547222 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166901112 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115228927 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093598783 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090593628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115470729 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121731223 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096034774 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114242701 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178502241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16433462 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224429421 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550254766 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091538307 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112195954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211417698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113467169 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309687113 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098489786 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23096191 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171883586 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111432178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34130424 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175432194 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204838152 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116398503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178512655 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08875253 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120538098 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167565745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113040131 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098930696 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1635749 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130382197 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128034946 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157302982 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091532956 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255815751 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089142126 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175332637 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115225075 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103823305 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319904977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11448691 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112302007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.190788663 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095411745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114113693 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.665866774 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114313168 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101620011 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123551304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227121918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172192591 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121456096 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098492735 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126874917 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16818007 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.238798377 seconds)
  done (took 44.958676201 seconds)
done (took 60.486351819 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306550939 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270871681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307029897 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.199085778 seconds)
  done (took 2.030272874 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18142594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157268168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127931634 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111405358 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15753757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090489753 seconds)
  done (took 1.698842214 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.485189094 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37837423 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.347301464 seconds)
  done (took 2.086539451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264573057 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283356062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340610375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.411886382 seconds)
  done (took 2.3024259 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207115309 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128089445 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104472477 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143485336 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177469541 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180540039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146533019 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155482347 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132910609 seconds)
  done (took 2.29789488 seconds)
done (took 11.290611293 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.139305103 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.134277839 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.137814657 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.257636869 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110730055 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.284301407 seconds)
    (7/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098142309 seconds)
    (8/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.239249092 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126066411 seconds)
    (10/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.103961308 seconds)
    (11/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124071944 seconds)
    (12/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093297709 seconds)
    (13/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.273833645 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0927855 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20272101 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.218269101 seconds)
    (17/286) benchmarking ("sort", Float64, true)...
    done (took 0.208168295 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13320851 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.14599839 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.166207643 seconds)
    (21/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.219988391 seconds)
    (22/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.104867501 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.254921972 seconds)
    (24/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.277289014 seconds)
    (25/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.261882524 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.268612063 seconds)
    (27/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09281099 seconds)
    (28/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.26207817 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.20517395 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.127553275 seconds)
    (31/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099569914 seconds)
    (32/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168458443 seconds)
    (33/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.126458447 seconds)
    (34/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.18270168 seconds)
    (35/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.123780041 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206556238 seconds)
    (37/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101099829 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126794925 seconds)
    (39/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123941886 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09391416 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139016699 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.164736898 seconds)
    (43/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.208906743 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.122463371 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.245484749 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.100767453 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123005543 seconds)
    (48/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.132045747 seconds)
    (49/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.212619654 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211474141 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096214898 seconds)
    (52/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.206137066 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11621543 seconds)
    (54/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093384848 seconds)
    (55/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.118938209 seconds)
    (56/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.250918975 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143795281 seconds)
    (58/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174207879 seconds)
    (59/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130193554 seconds)
    (60/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.201790012 seconds)
    (61/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180431024 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.077900612 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.193608355 seconds)
    (64/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092050185 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.151565541 seconds)
    (66/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114752223 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093429689 seconds)
    (68/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.157485877 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146100048 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.150588246 seconds)
    (71/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.221951256 seconds)
    (72/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118254097 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106570274 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.099540704 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.146034417 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.129001982 seconds)
    (77/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.154478888 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078363142 seconds)
    (79/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11945554 seconds)
    (80/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077055915 seconds)
    (81/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103919829 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.193886155 seconds)
    (83/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120474169 seconds)
    (84/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098159353 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.147267034 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.148400641 seconds)
    (87/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081407467 seconds)
    (88/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.122594091 seconds)
    (89/286) benchmarking ("sort", Float64, false)...
    done (took 0.153821397 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 0.112514892 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105870448 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113139022 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104589834 seconds)
    (94/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.208272029 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.153086478 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.146146037 seconds)
    (97/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104960231 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.167886579 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126225417 seconds)
    (100/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078200599 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.150551794 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.19702457 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078466321 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129655842 seconds)
    (105/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.142006845 seconds)
    (106/286) benchmarking ("sort", BigInt, true)...
    done (took 0.217203859 seconds)
    (107/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121575767 seconds)
    (108/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077386584 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.127951543 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091276124 seconds)
    (111/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116273768 seconds)
    (112/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078151928 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135020669 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078596943 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.20258671 seconds)
    (116/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121383753 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079266379 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119348542 seconds)
    (119/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232148245 seconds)
    (120/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.157727129 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.190421573 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102562899 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125910167 seconds)
    (124/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201752355 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108462226 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201024527 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.12037266 seconds)
    (128/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079139423 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120149381 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120323055 seconds)
    (131/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.10071124 seconds)
    (132/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094388264 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191407892 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128280448 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09712941 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124841148 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.086055292 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114160295 seconds)
    (139/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091340835 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117849656 seconds)
    (141/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093080402 seconds)
    (142/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.159738019 seconds)
    (143/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.125688396 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078012163 seconds)
    (145/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165808663 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10399243 seconds)
    (147/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127425285 seconds)
    (148/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094680232 seconds)
    (149/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.108303507 seconds)
    (150/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.104848334 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120221937 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094341922 seconds)
    (153/286) benchmarking ("sort", Int8, true)...
    done (took 0.205685108 seconds)
    (154/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.109074541 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.118570761 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.165332997 seconds)
    (157/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077684039 seconds)
    (158/286) benchmarking ("sort", Float32, false)...
    done (took 0.180504501 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142295272 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098395575 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118865529 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19546293 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093946409 seconds)
    (164/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.101362171 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079063744 seconds)
    (166/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.128436266 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.132135867 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.111176062 seconds)
    (169/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.206819982 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078770052 seconds)
    (171/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15014674 seconds)
    (172/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.123802443 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.101748815 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080479932 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116709926 seconds)
    (176/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078257364 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119877928 seconds)
    (178/286) benchmarking ("sort", Int8, false)...
    done (took 0.19695745 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192802112 seconds)
    (180/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091533321 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127814141 seconds)
    (182/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096575726 seconds)
    (183/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132268807 seconds)
    (184/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0767862 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12924395 seconds)
    (186/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078230833 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.101230092 seconds)
    (188/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077805327 seconds)
    (189/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.150035321 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096411338 seconds)
    (191/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.158520033 seconds)
    (192/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09691988 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.206091617 seconds)
    (194/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11992765 seconds)
    (195/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077205803 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.118201685 seconds)
    (197/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097490931 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217726242 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121171207 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078566378 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.102468103 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111588011 seconds)
    (203/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102997069 seconds)
    (204/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.102329361 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.120529948 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.140325771 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103347674 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129546867 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104532559 seconds)
    (210/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.102040723 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.095411215 seconds)
    (212/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117743602 seconds)
    (213/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078487109 seconds)
    (214/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100092062 seconds)
    (215/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.219252981 seconds)
    (216/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078179172 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119793827 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093830152 seconds)
    (219/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13439546 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094687151 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119180151 seconds)
    (222/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194663181 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.106655777 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120332145 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097629809 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131343303 seconds)
    (227/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103359246 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114492557 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078780401 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.117435503 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098168696 seconds)
    (232/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159651493 seconds)
    (233/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097450991 seconds)
    (234/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114191505 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097947502 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126712537 seconds)
    (237/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092793871 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119531596 seconds)
    (239/286) benchmarking ("sort", Float32, true)...
    done (took 0.211068986 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121880426 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091110383 seconds)
    (242/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078152979 seconds)
    (243/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.129223994 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093093799 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122453727 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128418889 seconds)
    (247/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09495392 seconds)
    (248/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.085419259 seconds)
    (249/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102148064 seconds)
    (250/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1076918 seconds)
    (251/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10217599 seconds)
    (252/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.08744994 seconds)
    (253/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109418543 seconds)
    (254/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078132235 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.077186345 seconds)
    (256/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117210163 seconds)
    (257/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077425734 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11969201 seconds)
    (259/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077832223 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12220547 seconds)
    (261/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093900919 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113807673 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079675907 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113944137 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092335517 seconds)
    (266/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114117775 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.105641399 seconds)
    (268/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102265441 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.103677529 seconds)
    (270/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.102617983 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094828976 seconds)
    (272/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117674349 seconds)
    (273/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079053596 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.100531633 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098079876 seconds)
    (276/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.102710211 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102842705 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134128371 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079537764 seconds)
    (280/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090942686 seconds)
    (281/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112538113 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094852377 seconds)
    (283/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.101245316 seconds)
    (284/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091000319 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.102327019 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094114371 seconds)
  done (took 38.162062396 seconds)
done (took 39.041312265 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103782353 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156386583 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102165312 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144410075 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128623346 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107565232 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12517887 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103114575 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128553576 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105370339 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.130963194 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.10887706 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102861883 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124815067 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103956329 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145435987 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106559802 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121761243 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.094237801 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117987883 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093224644 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118200819 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095759171 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109349733 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101836197 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125291095 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.121304825 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102232795 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.119139872 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091924163 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116558202 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098271774 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.132628353 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.103576354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119941237 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.093903155 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125693658 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.101472746 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.119285156 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.095061824 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122270248 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094973343 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120880656 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099984263 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119435817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093006194 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117665817 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104768755 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145713756 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11853395 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099215796 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124480067 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.103174872 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122688503 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093901257 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117657068 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095546551 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145271573 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093195211 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120137782 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099131986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.122367664 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093838296 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118248906 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.093866911 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127353386 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100903288 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11770285 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101322991 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.122131192 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089811333 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117844941 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092862339 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11595115 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10063931 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125671497 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089946307 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119288551 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098037667 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.120588159 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094873785 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116519891 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096875651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119577411 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093599849 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109616574 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092777399 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120876023 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094164149 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11829106 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097777891 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121462999 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.097767183 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125151363 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094349229 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118943626 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118148518 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095438875 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.12084628 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093196313 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.1141488 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093999388 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099756847 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.116763048 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094938832 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127224192 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115252582 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097879641 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.117923014 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.09478654 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130388749 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102062782 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118434616 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095957463 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114733778 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098980065 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116846597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093013942 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116344331 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096068664 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119444319 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095939938 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116559665 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097550892 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128166076 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090520431 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117450747 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093001079 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.118602546 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098140683 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119438017 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.09238429 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.118278963 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08958989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117323211 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0926774 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122301879 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093575818 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117864707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.097039448 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119119586 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096844708 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119259221 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096102806 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11948078 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088249609 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11925104 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093438703 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.120450727 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09536071 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118933871 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091141725 seconds)
done (took 17.608543711 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101781934 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18879805 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150661385 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154888536 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15184224 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112236168 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129229142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15069149 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102755602 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148450696 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148803592 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141091495 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133020507 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126493396 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137054789 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.102483583 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.124288939 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134801332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.135380739 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145779505 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151195325 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103349231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147340922 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145142955 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099692183 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146113753 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128713432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101381427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13018425 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141743148 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118137538 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12933976 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12707384 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.113947391 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.133060099 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.099614977 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.135920092 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122426291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10257468 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125210629 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136971586 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113381164 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122563494 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109190425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126219692 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129001331 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.101308903 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124148494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102551824 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120330188 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10753713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146672114 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123599503 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105354931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127945553 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125865422 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103921678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129783683 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.103631829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129112302 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124796977 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105139429 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131328594 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14347038 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101233121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129688207 seconds)
  done (took 9.275900712 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117046018 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156172277 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132710735 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11001977 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129411228 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091182119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114995205 seconds)
  done (took 1.786334218 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092716832 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146352814 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125516151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150473696 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137868658 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128504402 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134301068 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09220999 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143704302 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129167892 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121420258 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175266184 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118571811 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104985159 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152726164 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116784357 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128684911 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117836887 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099897959 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15056487 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123596786 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115720639 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130754811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093439564 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139226472 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093830879 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18590227 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128978105 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092368421 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124230537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098439844 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188729382 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140305127 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127446461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090754994 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1457993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.114032034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122822637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141914677 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098117636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139212033 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.099531454 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125018726 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.098855915 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124902588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106865581 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130330751 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126006254 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098368369 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14729355 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.103986947 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139686111 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118940169 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096906786 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127959509 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099747825 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132400197 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098745761 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146017583 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100313754 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.14369656 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143999212 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.114736183 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.144936896 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135437309 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.11563599 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139627944 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098382102 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12559285 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099924104 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144591294 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.122341059 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103689565 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.133034681 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101733448 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145744354 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14672311 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098189826 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131838716 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09854148 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121151653 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094180492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133837046 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096916358 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120450491 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110981287 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131080952 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122860494 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09811353 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140438034 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09794535 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129510572 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128906982 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097182805 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133899104 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121352619 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.130690667 seconds)
  done (took 12.862340045 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095622654 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094232328 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125498061 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119753502 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096200435 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095751841 seconds)
  done (took 1.579293089 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125717681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122231408 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109866983 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125603717 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162478106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117631734 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.143335588 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128170359 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114688836 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133648869 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.119053389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144903934 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148752775 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100918487 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142904896 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100948721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144043329 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097858314 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134211874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122551818 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110378275 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126746945 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098571057 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142342137 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101972567 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126961678 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124528519 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10970002 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133237579 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103937031 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126136792 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102635134 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126527317 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128044916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.119707517 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.126300715 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096474057 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128981119 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101258565 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127541759 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.144204136 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098302893 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134895295 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.104384594 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.130388544 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102251985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128520668 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09972123 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143919698 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.127896706 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.103913812 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126575992 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101817007 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128588955 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10229032 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128977555 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1034499 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144556348 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126358182 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101961695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123490847 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102022342 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130065759 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.102175097 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.125859929 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.103366339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126468711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123368352 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099062194 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125639753 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.103957943 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122990623 seconds)
  done (took 9.627706691 seconds)
done (took 36.068012982 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68599235 seconds)
  done (took 1.632327166 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.869479037 seconds)
  done (took 1.819220757 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.537718922 seconds)
  done (took 18.51918927 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523622313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.625513078 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.975972296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168126653 seconds)
  done (took 3.241698664 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.978272036 seconds)
  done (took 1.946856623 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314511009 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266757589 seconds)
  done (took 1.536950237 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.835754513 seconds)
  done (took 1.79744478 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.572554852 seconds)
  done (took 2.530917518 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353629117 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.203978552 seconds)
  done (took 1.532933318 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.587283994 seconds)
  done (took 1.556370663 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.687311993 seconds)
  done (took 15.661546585 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234409139 seconds)
  done (took 1.214286174 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307287302 seconds)
  done (took 1.277269751 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.646818533 seconds)
  done (took 4.616590088 seconds)
done (took 59.837909858 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104673005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132353252 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108426736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130389293 seconds)
  done (took 1.439324609 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108604667 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12624368 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105791787 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127191508 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109696033 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127545804 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100063495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.134047951 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101617891 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13014926 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126590689 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103065 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128021776 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100652433 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125783995 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102466042 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130384288 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101938255 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127585131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102491181 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126911574 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102309218 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131198777 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126914744 seconds)
  done (took 3.777971192 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105433 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098073472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126173554 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097165172 seconds)
  done (took 1.40012812 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109647306 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141589189 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115748796 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134181902 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141263906 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115883689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123458302 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098640988 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125930406 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109264435 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125154609 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117982675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142213129 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118798359 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111334341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116544225 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095689726 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142331093 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.109125487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136915628 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097621743 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134926863 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.106737271 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13728562 seconds)
  done (took 3.888152197 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174212341 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.137891558 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148070371 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172359569 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.12277355 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122036424 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.122746657 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131709619 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.126122232 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.097876799 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.122309951 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.153873657 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127679701 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124752628 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098031761 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129177394 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104494616 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127900017 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.099606184 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136438191 seconds)
  done (took 3.558305005 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105228159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12318472 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094313675 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12299068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106052945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125814734 seconds)
  done (took 1.657783954 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095198674 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09281896 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119913954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092962016 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123832093 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093573397 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117524769 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.093370214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092765398 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120091298 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092675241 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118452645 seconds)
  done (took 2.229475159 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517445851 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.124688144 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125636181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098662415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128477892 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096853807 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138897926 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097508059 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.178280631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125444982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112895135 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.177966147 seconds)
  done (took 2.902162417 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216437615 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103250881 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281502409 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381539237 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163924744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172182585 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280461427 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172669253 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193082238 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143692453 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21131825 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163246566 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133351472 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184949944 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147802836 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.191082588 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181497526 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206096753 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155973831 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245473108 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170421552 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146708842 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221289193 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131965833 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144730457 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165895515 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12396755 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108311752 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17878499 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175322974 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204673991 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12847998 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144611833 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206598101 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24736282 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185033735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309616915 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140660445 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198422877 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197437845 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282176097 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146122198 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202564632 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161931269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136211924 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186951751 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16084703 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186285897 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112177367 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147916921 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191027313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182711862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185872584 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145530589 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327829667 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128109886 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152358385 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18733122 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19589445 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231264843 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146087759 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.128741014 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192766866 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196604149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186892063 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152032722 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173565777 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132085314 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183213323 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210430239 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184334194 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174022129 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.218715023 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140519286 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168649662 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18579284 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13244473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185954965 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166739374 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127529602 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15565426 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117008076 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134874386 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192074358 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102217943 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218970001 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142621575 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.294674728 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241088063 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16484646 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139746345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170833196 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201691038 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127340659 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125496674 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152929382 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177756144 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135698637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138574224 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163481005 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153195683 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105288722 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158718664 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129975318 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164765953 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.114228932 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173454068 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170573785 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13535883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170732387 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129130417 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164325436 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175692064 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200668277 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141880318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138563982 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210770546 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163988507 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.114918494 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217322696 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201410278 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179758166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115471756 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176008419 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230659171 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121055023 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23114228 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121435498 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140373896 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157613193 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165360247 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163325832 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134920309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135376798 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158056688 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20856231 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134109398 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115104845 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180194572 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1341882 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134596593 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123369338 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143610114 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148155327 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128301847 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147215858 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163469425 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166448097 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160606346 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16568841 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148808121 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2010305 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139255218 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139620231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153447805 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123755804 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187088471 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20143063 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107918703 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220538905 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175834116 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204844675 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168749647 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1366148 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188887203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109147058 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126399167 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172976325 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16587429 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167505462 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198153384 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20002562 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171837403 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160756823 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156685369 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172761419 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191689153 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1645888 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153907688 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169184311 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175160917 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102662166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129872486 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105553023 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14667893 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136511793 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112230989 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187095687 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170784593 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222068735 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167746236 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117677622 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19712727 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133065985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172410396 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177596366 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144551311 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20056422 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197904071 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173932246 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150397161 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177312371 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098468142 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132854431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.137296965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172778179 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112303991 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140020029 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150583341 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199525177 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181711449 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156005892 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210683527 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172704253 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207941246 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128757173 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17022236 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18638559 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136889901 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.195561662 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139813933 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167027209 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194925133 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122173637 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230296285 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168492303 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17398737 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206801565 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164448566 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136698711 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127935149 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174291432 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148118747 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179064577 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154071645 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112656847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160661868 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143346694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131442235 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187180527 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148732175 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186318981 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173507641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18079192 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132886409 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122948363 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16778623 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153028266 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096097764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17555077 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232432793 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150122035 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164709245 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191095671 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108506094 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322026077 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232536267 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192043002 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142823984 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121370595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168833402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177107637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170428994 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190487734 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151195334 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188696372 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165562828 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.12148729 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143271499 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154541158 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157499614 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129845267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139768998 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159360902 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149780927 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190550306 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15132452 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163943577 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170755831 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126180313 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162189198 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148211921 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218043237 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165079464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185746259 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161893631 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182578779 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196250318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102844425 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136045355 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104198146 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190428255 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139506652 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166766568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191374896 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22997488 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138542637 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176689566 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144805923 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131211882 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13629354 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157031466 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234071469 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148423552 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.115079851 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205704817 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157548685 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137805139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170897446 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290575709 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150254846 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190959253 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.099450145 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284594514 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132117413 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109684281 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176745024 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177203358 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139909029 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189996891 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170374468 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12334959 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177628562 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146207104 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197592667 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243551215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178009275 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183398202 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149047924 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136407505 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170286821 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220219634 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121991172 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152093516 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172528905 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19962111 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201259519 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13981295 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169286336 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169823401 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137789109 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210628695 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113615072 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193739016 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138061861 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172167153 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146753255 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101520094 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164338332 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189939703 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140003718 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1912718 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165604907 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138764257 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104464471 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159662327 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165593369 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150077354 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107728785 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211245948 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108937254 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169651852 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187272894 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108938235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161122668 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153646736 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136782842 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120996035 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152223914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140599401 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.15103005 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197455431 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137864072 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192336391 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178453973 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171978478 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166843008 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151928108 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668826599 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106208314 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198539691 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155053991 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195580891 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157366055 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17312461 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167954799 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156024075 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175463582 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155697533 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.200543147 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172634004 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164116679 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139113993 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150762645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124367377 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137934153 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158659541 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167608715 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118630487 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143969393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163360001 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152803861 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.123041759 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145996217 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201609665 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155345983 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190089932 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191721136 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146036432 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173138721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18190135 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136062693 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167727349 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178452704 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120516012 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157704638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137890263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.113723971 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185868558 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13145127 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170233235 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165859254 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138376516 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169342691 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141830169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166974608 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15010565 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167175242 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104423395 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161586763 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165130348 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10855286 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134417032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162174965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165696134 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164135477 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10484437 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179368615 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199272731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104117568 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142097996 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290156088 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166654043 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201032224 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.159757977 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142028096 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121753971 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163579454 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159661127 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167433487 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106381767 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140428092 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137361504 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18865318 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172049755 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137023038 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191632452 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167519971 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195100652 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143627083 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272623513 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11683847 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16356012 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13906346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106524467 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149649844 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141868866 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151319046 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198910624 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187108957 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161298035 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122978774 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134995037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10166122 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139578463 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178822353 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161726694 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165461692 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122009917 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.126599526 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151175289 seconds)
  done (took 80.432748608 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169852877 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149223492 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153750343 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203418975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174786193 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263781774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213347127 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235284939 seconds)
  done (took 2.630669184 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107655245 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.141407963 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147744086 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130277099 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.1298972 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.352115816 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.11659861 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.130950993 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.189954946 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143177842 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.128799851 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.622437113 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.101069092 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132171295 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118428677 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130857057 seconds)
  done (took 3.881537652 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.315480189 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544860027 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.008182869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.239255494 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.24806214 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.163744091 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75461361 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.169792006 seconds)
  done (took 12.507681577 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131236317 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14730958 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146579278 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.173609586 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.157473226 seconds)
  done (took 1.832548733 seconds)
done (took 123.103930902 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101557285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131209472 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102924374 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13322096 seconds)
  done (took 1.528709757 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11577877 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086588692 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119296949 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085315362 seconds)
  done (took 1.474302008 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436653752 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.116940363 seconds)
  done (took 1.659335954 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.125861697 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143205343 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126016274 seconds)
  done (took 1.469834634 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111443535 seconds)
  done (took 1.187161928 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114125714 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111290839 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152837362 seconds)
  done (took 1.453342387 seconds)
done (took 9.83841098 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11810471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.437628771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390661493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144449791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72790119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385760133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.064700103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160929617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170176866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097232886 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143454262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676514659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048062705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346229556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.033312606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345987293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.708110205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099899996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132038016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098889433 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.042467092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095849893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127103241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098907249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705085086 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401677341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125604855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35950969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12515367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100865004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415004714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097229817 seconds)
  done (took 17.086854355 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100168973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187188283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104859523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127893566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101489788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128804975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106656404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138278814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185852338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096573356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148090291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123897095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102945239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09746591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148903113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123885519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100919677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098628477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132571604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126557172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11750018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124035733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099442177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126711055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098202869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138324563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098544142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136579019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097139516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129885717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10325141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125220872 seconds)
  done (took 4.956210819 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146738487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195239162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134576733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13356188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177118194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127777747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213350656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.135534209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188610801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126099915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117225342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126635947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.163225596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099058985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148482575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097745694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127853421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100364971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132154217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100037557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146249428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096947363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127541986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100006326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124919511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111589773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126128974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.111269554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102056069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132659489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097962315 seconds)
  done (took 5.271989721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104631985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133251231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114876749 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143870873 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100751903 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13193391 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10574539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127483896 seconds)
  done (took 2.047641395 seconds)
done (took 30.437228417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116190682 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.103524471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141701358 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139795289 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108574386 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.160902526 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096271426 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108824724 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.141590594 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106396028 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14319235 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096835162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127862192 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09644432 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140048908 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103771269 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141959105 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.108004303 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147818258 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112883605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128252527 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.11020603 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.136614825 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.119168144 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147531847 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.146534648 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.114976843 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.132066396 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.098665229 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126871135 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.116023483 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.151585555 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.100587581 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.143374378 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102194487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1306228 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098819556 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127677394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.113708464 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13752037 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104016228 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.137279546 seconds)
  done (took 6.239437276 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.12513293 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.171771951 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097995748 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.124936466 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.094693795 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166437413 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162015859 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.095351472 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128895154 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123886211 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153758746 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.095749386 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.125310205 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095958035 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.124401118 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.09698539 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.151241011 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122519082 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.157870741 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.156872285 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.145168557 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.159836787 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.160321785 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.122127423 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.170259582 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.163014077 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.120999527 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.165122056 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.154025921 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.095276119 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.157304689 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129411632 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.125198345 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.095656852 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.16875402 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.163332824 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.126710073 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168387602 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.158703835 seconds)
  done (took 6.409846552 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106841717 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14319161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124159872 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200390432 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16934004 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.113748763 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140860765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.117015487 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156214098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.09765834 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139277345 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.130975414 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144489517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138174608 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104092349 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142448414 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.119572722 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129512794 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107170286 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147454508 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118160415 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142304299 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113557621 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.138825377 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097904956 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137746656 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103826405 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.151549133 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104813245 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136693254 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130804743 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103869864 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130112098 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10941583 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131047327 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.107042357 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152647254 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107952997 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141106588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.133832876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139297456 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131648749 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.121139327 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175482185 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100031721 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135234718 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110068286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138490957 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097597032 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14759154 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113371111 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128777701 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142882901 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099079712 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097503644 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135924469 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100811328 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131178064 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108057217 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133370194 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.119518872 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.136875773 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135894884 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102017865 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133620885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099744933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097367859 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133069849 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.151554675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105581113 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160073955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099510728 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134542347 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108064307 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135620578 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108227186 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.128595395 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106708329 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136257198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.105401843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136925553 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101909299 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131723165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117731467 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143145715 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134413625 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10551012 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1340678 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103127577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129348101 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113828954 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12918525 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103159132 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.137676294 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099843572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130099546 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10587826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.132129865 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098109524 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147060465 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104240504 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126951592 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.117975688 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128344024 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103988867 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137354366 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112696141 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127523682 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10428538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135296935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099352789 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13345092 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103628525 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127309826 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112683741 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.139928152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104066221 seconds)
  done (took 15.646090538 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.249275502 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22880445 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20222658 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312147687 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151760549 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.126228192 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225549414 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180469599 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129632084 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168873578 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183631984 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.195327068 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.152823305 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.193795573 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187639043 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.131846648 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.161852831 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.152973015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.258958712 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.278251085 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.162056749 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.14335313 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168710899 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.138765567 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.146596209 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145625122 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.122919079 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15100027 seconds)
  done (took 6.160512305 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116008889 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.169545217 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106362059 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159608621 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155893242 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099850554 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.135209323 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099826956 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143896966 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.144782862 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100853435 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135530705 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105727405 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.138201331 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099567107 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.138499793 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.109912585 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138662318 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102398086 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.13293529 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.117605015 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148114248 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105681399 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136800258 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146098997 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.106204302 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131210284 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151238419 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.109983713 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159849762 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.096278687 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.139141946 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114247113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129051127 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.106767271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.131848428 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.102045984 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131890874 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.102924618 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126477942 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.100367674 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.118566587 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106033955 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144088102 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107433254 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131475114 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10558869 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134768774 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099775434 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126338637 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10196475 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.131829036 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104537718 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147544959 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.102979286 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129662461 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.104326222 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132233994 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.110033424 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.130794253 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09787466 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104530799 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13759654 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134351199 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.108869833 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136172652 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104811335 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.131541745 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104992783 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.137625211 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102876529 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.14246295 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.098559895 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.132808315 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.11092395 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.142761122 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103474723 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136462725 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.106282971 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130129269 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.089822114 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128166051 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087004369 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104251702 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.129240276 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.10427437 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.132874899 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105512441 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145121839 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139373726 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107054454 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129202845 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105550054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133738213 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096454103 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134153866 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1181039 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149780327 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098081596 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127995932 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12104145 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132919803 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09700826 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118092143 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109979089 seconds)
  done (took 13.863362764 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128318152 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169322523 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100732124 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.149886471 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166099267 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130046631 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.146388275 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109278242 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130324223 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121065489 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137487482 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108853139 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137433187 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115070918 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15971473 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.11303791 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132635686 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114637091 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137131126 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170840634 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.120030292 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.157292954 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161587011 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112971426 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135498639 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.124312391 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162843404 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113158075 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.143611783 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163353654 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.114026948 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16311901 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.133633946 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136232628 seconds)
  done (took 5.748593215 seconds)
done (took 55.14610555 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.210629364 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.400404245 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.177771313 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.175828486 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.241102511 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.213358163 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.17749977 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.371879598 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.912920155 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.167733734 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.177603317 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.177180758 seconds)
done (took 27.511417755 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.293547968 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.778372551 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491144646 seconds)
  done (took 4.387656789 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.174606029 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.177197435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.421076106 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.177230167 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.196303502 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195111023 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.179702813 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184288347 seconds)
  done (took 15.634848493 seconds)
done (took 25.593933281 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.201027916 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.46843587 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.438784858 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.207768988 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.176311219 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.188401245 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.180478371 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.250459317 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.186390984 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.178800877 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.177646314 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.44689589 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.194813929 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.558901434 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.182432466 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.195207686 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.208781036 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.554294441 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.193226669 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.231873622 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.16442759 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.189204353 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.20361092 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22392367 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.198396073 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.182014799 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.195527416 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.180330895 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.594883019 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.196926105 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.228883428 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.184402346 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.188691137 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.192923808 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294452012 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.210886939 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.713646625 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.193171228 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.175887412 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.186785019 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.610066867 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.589375089 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.186564099 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.192578968 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.182780652 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.204532464 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.169162258 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.92089034 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.182200234 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.182151255 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.249777133 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.704539946 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.191516112 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.191800362 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.214701452 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.62886129 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.187317615 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.221364466 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.249034885 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.196812853 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.183469557 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.200828785 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.187130717 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182306087 seconds)
  done (took 143.637017213 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.183565971 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.188011528 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.187233397 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.206415575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.186903241 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.187677932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.183409211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.18323416 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.187340985 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.215849806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.188268822 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.184432552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.187639198 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199501361 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.184472695 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.201435924 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.187677206 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.201658085 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203046479 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.183810863 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.185638457 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.187992833 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203313047 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.184847505 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.228749976 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.286783912 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.207419394 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.209100704 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184103769 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.184645052 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.198945788 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.192550525 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.828242036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038875364 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.196020954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.205431246 seconds)
  done (took 79.665025197 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184343751 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.186033163 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184824765 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217905066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185520856 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776324698 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783950359 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.98120932 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.376584932 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.544825992 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546215486 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189414901 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281080024 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20042843 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.18646559 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201617937 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.213976807 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186949334 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186167751 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780712791 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20407723 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.370230467 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.365694758 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.20389181 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220007284 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586066611 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186663498 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22101559 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.524918521 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238321904 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187259616 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.545339265 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.697522368 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187007529 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300953731 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188138542 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220153655 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186509624 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471283986 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187577475 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188567863 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.190557739 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845875142 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.188573833 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.780327081 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191703666 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172764051 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188567927 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188233337 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.657638605 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.865210223 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206592704 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189310391 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.192347075 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189886958 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187656448 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222136851 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.722117779 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30974363 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189702033 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191946564 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221395912 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190311585 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.312906252 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190947146 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.378917201 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251648661 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.293621093 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783445132 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192546558 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287731282 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310167108 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190023218 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189307486 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190253953 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189362744 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301980002 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189843999 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.627205063 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.368736519 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208616578 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.714527722 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292652646 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190224736 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189356718 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582809066 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190733065 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190354573 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962736676 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288990036 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190760417 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190782608 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190369868 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190209957 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624326076 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780151694 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.446693773 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.1916766 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.184691268 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197145912 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.633741097 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.77232762 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870526147 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190537739 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191017105 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305168385 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3713676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210460935 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190101044 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.71711015 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195520492 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252006732 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.192202163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592198095 seconds)
  done (took 367.206605418 seconds)
done (took 591.613132823 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.912524685 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859042132 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.992643285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.88930789 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.852713759 seconds)
  done (took 10.622975831 seconds)
done (took 11.73702969 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391009965 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391644498 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257265257 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.392432942 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229797924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.410524631 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378529081 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21857229 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300465509 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.278407395 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301595151 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247696483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228031018 seconds)
  done (took 18.143837847 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472969225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195443792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276315706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.434876848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234515981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493400537 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492977749 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.196129797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366588939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208485351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208424909 seconds)
  done (took 17.699063509 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450287328 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.196195918 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261569802 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440931037 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236365969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4618283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.508044109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.196666715 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373820645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207532468 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208360116 seconds)
  done (took 17.660534973 seconds)
done (took 54.619368117 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235738649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.364743794 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2251107 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.208241182 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204230892 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205769959 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.20917159 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204126153 seconds)
  done (took 10.977287189 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.201324649 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201004958 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.199849581 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203110977 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203220778 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200836662 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.205300923 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203219521 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204119551 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20248421 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201163453 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203336324 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204052145 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204072302 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202292101 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20548466 seconds)
  done (took 20.366034095 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204773097 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.201804807 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201992752 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202330658 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202800805 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201552304 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203520358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203163093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202441056 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203151076 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202165465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201898923 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203305806 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202404737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203383341 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203615859 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203347301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202998161 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208086159 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202730554 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204251722 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202576749 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20255841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203153649 seconds)
  done (took 29.998048018 seconds)
done (took 62.458088986 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.20963666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.203379327 seconds)
  done (took 5.535597791 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.266339327 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.265300999 seconds)
  done (took 3.654290575 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.207443608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206945614 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207041801 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207002477 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206976693 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.207001203 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206439814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20613055 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206955607 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206132199 seconds)
  done (took 13.190914329 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207643616 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207169499 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204103779 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206611091 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205696702 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203854733 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207207157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206510162 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206992211 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205871423 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207595708 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203325916 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207483409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205231331 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206703197 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204052218 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204861821 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204697436 seconds)
  done (took 22.82912101 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219841981 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226895236 seconds)
  done (took 3.570460202 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345384034 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246498793 seconds)
    (3/7) benchmarking "month"...
    done (took 1.321776846 seconds)
    (4/7) benchmarking "year"...
    done (took 1.313733222 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.245188089 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226776077 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.246207226 seconds)
  done (took 10.069077175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208250743 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400805463 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518920207 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.761065126 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209574386 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212010523 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.046820434 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213489078 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214958767 seconds)
  done (took 13.909874752 seconds)
done (took 73.879409924 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.199867594 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.266417267 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.215884129 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.218109018 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.499344272 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.223244876 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.201794145 seconds)
done (took 15.948100916 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.195442749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.191713044 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.191728654 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.205702112 seconds)
  done (took 9.910758297 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204971551 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552595941 seconds)
  done (took 4.88257601 seconds)
done (took 15.91735889 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211846325 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.209544446 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.20670834 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210609883 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.206269249 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207904706 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21023267 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210174671 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207490206 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.210784836 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.210274529 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211076791 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207697186 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208891837 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210391722 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211485603 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208815352 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205968538 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208073721 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210153533 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208034122 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.20873987 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209527827 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211876458 seconds)
  done (took 30.149071124 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212174115 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209430618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210671679 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21096272 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207628585 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212660139 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212090521 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207696093 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211569144 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211233257 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208590244 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209925758 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212059443 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20988216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212358017 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208968552 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213219419 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209399932 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212059671 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209037043 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213051495 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210256883 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209758362 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213326113 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210317144 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209072573 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213100229 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210561906 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213556816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210200095 seconds)
  done (took 37.453290895 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217576769 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22014925 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213127781 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213044169 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2131207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213731049 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213611009 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212816412 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212673394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215224121 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214280532 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214210657 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214114445 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215160502 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213839324 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214105254 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213004885 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215054362 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215050307 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213078347 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214640079 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213853437 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213228392 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215105409 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214105304 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213310659 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214634961 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214240039 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214148721 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215036693 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214759834 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214458686 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.213994642 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213854202 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214499058 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215014688 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.219730349 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223357424 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215033568 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215159427 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21595801 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2158269 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215039771 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216141078 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216241475 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215251326 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217062409 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215715742 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21506022 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216010067 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.21662669 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216533401 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216212868 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216068093 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216126635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215860024 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215467701 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216949749 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216234036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216045859 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21655562 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216180303 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217087503 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215007942 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216610079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217132394 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217462424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218097672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217006581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217702458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.21793758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217860677 seconds)
  done (took 88.645852382 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.21880244 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21586958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215347324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215586306 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21544914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217165144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21595025 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218405248 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216190298 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218970349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217567704 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216289498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215280873 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219106657 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218085005 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216019057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218332218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215311829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218111135 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219738292 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217908513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216307431 seconds)
  done (took 27.909548003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219750763 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220202348 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216387132 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221300887 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218016288 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221865126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220192632 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222188039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219658105 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217813196 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217757799 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220335978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219317831 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216477212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216517885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218347082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220191024 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219048735 seconds)
  done (took 23.080497149 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21795814 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21671258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220539831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217833885 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219192834 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221042722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219546786 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219293713 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220482411 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218594724 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220444243 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220514672 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220841704 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218035405 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220560236 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21945679 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220483055 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218003414 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221190012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217983266 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218751734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220639651 seconds)
  done (took 27.963397959 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222597647 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222262893 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219936954 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219074169 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219488542 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220709976 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220291871 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219187859 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.729434463 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220943174 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218602058 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220941253 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221877065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219425146 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220181532 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219681361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223709003 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220733435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221874493 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219644791 seconds)
  done (took 26.05780415 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223574125 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223834654 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223866077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225015367 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224594147 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223313764 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225082776 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223341107 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224460261 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225232868 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224021626 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224329374 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224182353 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22499054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22469559 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225160921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225009076 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224857559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224592985 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225196496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225093124 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225372287 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225036021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22515904 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226144623 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226249583 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225502518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225581768 seconds)
  done (took 35.432481625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225378458 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224897921 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222375035 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222327266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.2221626 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220983382 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222743606 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221353606 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225963133 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222526609 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224578802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225472765 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22470228 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225606922 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22574919 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225710351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226320007 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222640798 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223908332 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223246491 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226391214 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2260795 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226347074 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222981258 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224584854 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226505227 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225092452 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224857499 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226232121 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224730817 seconds)
  done (took 37.874359693 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271132822 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272821262 seconds)
  done (took 3.684829305 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22443515 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227789232 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226209053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224054387 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224864573 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228043907 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227216737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225976361 seconds)
  done (took 10.950621391 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226535224 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.228104414 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22790189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227150952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227596007 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228049394 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233547431 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248060999 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229238046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228259893 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234346087 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23602 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229601338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228394822 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22869489 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229950872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227127377 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229317653 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.23084845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.231161169 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228883614 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231834244 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230842056 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226298222 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230073025 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238377863 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.232300378 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.231343798 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228058728 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232613285 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229692432 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226436608 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230356118 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230277713 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228546762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229550708 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237957998 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251393073 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234758872 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230015225 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230140632 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226718307 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229615202 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.231247323 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231113915 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230004835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232102955 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228153865 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230542769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234900645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.237076521 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230410227 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229026567 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233836115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232781418 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236401262 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250892504 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235727705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24122626 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241239958 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244169228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.257200053 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233948629 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232184112 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24304641 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256142422 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236702956 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249340366 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.229812862 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23162006 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238578783 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244449762 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.258392518 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.233771745 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232019887 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232073328 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232377084 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232866706 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239444709 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.253935268 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232759778 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233668489 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244044534 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256699862 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233002209 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233684894 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.233379218 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233804945 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235743727 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243243825 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253272595 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234326714 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.232775446 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233114435 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234647418 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.233517906 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.232226768 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234738179 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231962307 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235725012 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23391217 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238489234 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242981447 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234116427 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234205431 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239995062 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.236071355 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234009305 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240778881 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235155979 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234943109 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.237023921 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241301572 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232481861 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239194201 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24389707 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.236320494 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237182377 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235146439 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237489874 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245232497 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262364414 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.23594297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236049622 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241120751 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.248343728 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235836627 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238032332 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236314735 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.233209392 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233989514 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23664248 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.23652406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236477921 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235614248 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236236621 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234000494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237191177 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236978645 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236907131 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237330127 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236875918 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237596066 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.240154372 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237367741 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240296624 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243054723 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.236072361 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236843176 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238195281 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234230167 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238163705 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.237773553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237361265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238343297 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237344916 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23684554 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.236861739 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2378129 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238528404 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237614134 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23845799 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241866498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238097543 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242596931 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237383894 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235676947 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238583388 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.238410888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239246369 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.239582553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236113711 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.241674836 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247898657 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240052951 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239201997 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240401751 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238395822 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24049457 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240315126 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.243705934 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.249371291 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239509341 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246606755 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.239774786 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239798093 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240535942 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240572556 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23900055 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24097637 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.244249358 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.249417712 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252474701 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266280842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.242056182 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245242132 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240605872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.244384195 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.243191983 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240723965 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.240881253 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240527824 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242068233 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240694051 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241670052 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.240170027 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240688105 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241592501 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.243248811 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241884618 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242749195 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241595237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242141708 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238480613 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241802273 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240464957 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241172325 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238961621 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240564163 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240627719 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242051888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242818979 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24709857 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239308121 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243956613 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242338111 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242589572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.242669726 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243618075 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243256903 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242097247 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249295227 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262539181 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243208144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248690885 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.262872648 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241747037 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245030823 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244632601 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240535565 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246102867 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251885672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243477797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243956522 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244638507 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242799047 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245770534 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.248169117 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.241695615 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243619792 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244669002 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245493495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242189399 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243240478 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.245831416 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.2446066 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246023231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246170515 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245476877 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24541545 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245110157 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245505502 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245552113 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249003995 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252967796 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.250261948 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244804205 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246566606 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.245508562 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249248729 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246455758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245571395 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245812555 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257757985 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270947905 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25185825 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.266227566 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246650346 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251332148 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266617505 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250273649 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246050601 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247160387 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245878579 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.246416154 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244674442 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245996748 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246576075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248532648 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248769435 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251156024 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247456153 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.246802738 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247000497 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247090254 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248000684 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24620047 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.24808574 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.247780688 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248699423 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245337147 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24761593 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2530132 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268249602 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249222412 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.247973162 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248633452 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248013558 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247835888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.248293451 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.251204543 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256581014 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251605731 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257791025 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249723195 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257387126 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.248639814 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252071997 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257755139 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247621087 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247852443 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249312305 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249178335 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255517063 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.269000071 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250642992 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253211136 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249047471 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249693554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250230036 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249076924 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249916036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.248678414 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257480452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.272282996 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254641099 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249919743 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246759263 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250316637 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249670702 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249352184 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252951161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250762441 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250941878 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250104355 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251276312 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251624715 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251023043 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251959365 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248512019 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252322699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256967115 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273046231 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256225669 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.253237496 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.257425785 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252414383 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257515458 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271330945 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25100049 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251773416 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251967923 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253674541 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250987623 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252597324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251097441 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25276989 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257604903 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.251468046 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253365975 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254070251 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252729728 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252432492 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262604424 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277681337 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254850412 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258531707 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249891302 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253355472 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257349944 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253708705 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252762059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255677147 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264961497 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26257582 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253010101 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.253165941 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253473915 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253009772 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254268235 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254257927 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253225587 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254948349 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.254840206 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253269631 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254988138 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254614338 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.253949064 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25438901 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255091617 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263710224 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.254403037 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.253757931 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255759876 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255836617 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254113496 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.254752158 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254616668 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255410973 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255193131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25728312 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262116459 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.262202713 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256256317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253967514 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.254565905 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255922358 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256282968 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256921785 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254842138 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255704338 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256780829 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.257225911 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256340944 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254864924 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256597812 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256612292 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256264343 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257905124 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.264457946 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256449601 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.25475545 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.256726598 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256547924 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255210446 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258283028 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263317305 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259797734 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268068596 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.266923161 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261996695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256771029 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259702564 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26549901 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.255956191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257147076 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256708492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258106557 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257761394 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261684997 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257123135 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263568831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.257258575 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25743993 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264663082 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28094067 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256670198 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259631645 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261896791 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257576601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255815704 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259064315 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.257271057 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264605173 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.278851234 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258715899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259576194 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257443761 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260398445 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263278828 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25939502 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259022221 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256540012 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260032669 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260128804 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259065929 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256465323 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.25880229 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258998649 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263419422 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266589899 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256864706 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260898247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259426494 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.258771567 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260794074 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260790275 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257289068 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257731638 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258756913 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260632687 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260433429 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262442214 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259826813 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259790761 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.262046479 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261309032 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26375268 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272147124 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268850094 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258393519 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260375054 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.259583406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26453849 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259951994 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260737689 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261324302 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26124201 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.260875483 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260673354 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261394068 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263414837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277627054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28472848 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261126717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262732514 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263735237 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262790441 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.259975983 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.261299056 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26426179 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264745547 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270333749 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.262227932 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268446696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281681036 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262271595 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.266352281 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265149832 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269850488 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264557795 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261606952 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262088844 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267553657 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279255276 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262806623 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271647541 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292329124 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283213761 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26507808 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26326075 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262251335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.263103695 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.264661879 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.263848382 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263980477 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263637716 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26318148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265116748 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269166041 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265215568 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266734858 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.264373661 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264513509 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265268953 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.26200927 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.264282359 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265736205 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265154762 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265231711 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.26460307 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264485314 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276837669 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292392588 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.265767225 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.264934694 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261832783 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.267349753 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267463565 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276322598 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.275311923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.265780045 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.265410997 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266695675 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265573181 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265857948 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266220116 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266702644 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266650859 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263706282 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27801257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293430086 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270732689 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.264918671 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266946017 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268030189 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268208076 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267323545 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26667294 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266256913 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269115261 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271255082 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266955376 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267760682 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269570444 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.276200104 seconds)
  done (took 746.162041773 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264193561 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264784642 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265630991 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265316254 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266368795 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265503219 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266101699 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265881891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264513315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265281217 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266558771 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266221727 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26727454 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266691475 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265343309 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26476273 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266167937 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26669035 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266853034 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266047908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265421704 seconds)
  done (took 27.760288178 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.268801961 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266540808 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26710735 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269887753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266415702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269462668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266791693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269583234 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269052988 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266150414 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267755498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268902859 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266893062 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.267318032 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267381438 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270518668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270195825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266966607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268912511 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267221842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270670737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268371391 seconds)
  done (took 29.080434328 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271380347 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270591289 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269057208 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.268029366 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270111293 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.267759505 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270229923 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.271261586 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271481298 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.270292824 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.269363443 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.271676619 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27942308 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.277088357 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.27156826 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.271300251 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.270193226 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.270724038 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271422333 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.268912865 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276865727 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.290676608 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.269763339 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.270107199 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.271354449 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273307278 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.271686294 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27232852 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.272803859 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.276975449 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.272683435 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271237093 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273791975 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.270839976 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.273119507 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277534675 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272571545 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.270683577 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.273308806 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282898497 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.295472937 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27290557 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279234488 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.295944518 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273369915 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276150819 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281711123 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271207069 seconds)
  done (took 62.335423574 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.875585066 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.894756014 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.890451547 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.893339074 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.893752752 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.892988596 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.901516835 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.900340255 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.89322114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.889312035 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.894524825 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.890946946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.900761651 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.900557392 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.927088982 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.89114385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.892406476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.891513305 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.899964265 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.902431147 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.892301562 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.894581187 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.894730967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.896972714 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898547122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.896467949 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903527908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.897111044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.90033429 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.895531477 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.903407273 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.906237189 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.90684758 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.893182933 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.896007784 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.895645 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.901829201 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.897009136 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.90565944 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.8986279 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.900401046 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.896804654 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.902038943 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.904187673 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.91264818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.893440481 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.895148069 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.891623307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.898425856 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.897620001 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.906597627 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.899442253 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.899663994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89702325 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.900364673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.907236579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.905875064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.907420833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.901624009 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.907301352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.899367282 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.898381181 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.899519123 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.90116087 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.901531175 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.896944015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.897310362 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.90076078 seconds)
  done (took 130.298414594 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276590386 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277584926 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277748183 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278413796 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278010566 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.277341685 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277696584 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279076482 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278624602 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278500935 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279504014 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279632646 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278569785 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279569572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278784312 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279045487 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278338077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278722798 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278009991 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278286586 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.278399459 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279680797 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279278428 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278554806 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282816163 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279222115 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279569611 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28048827 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281165687 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28026269 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279801115 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280212202 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280280341 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280743618 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280737299 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280187385 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280187726 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278873197 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.281662427 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281182606 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280574938 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281560076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28155866 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281164155 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280799468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280379151 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281508522 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28193779 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282105659 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281183673 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280606564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283265762 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280990634 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279583558 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281955853 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283145694 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281244809 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281891334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28089971 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281601261 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283050343 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283418266 seconds)
  done (took 80.555889106 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283154294 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282516841 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279230055 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279372669 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282602553 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280231563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28201325 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281826262 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283085127 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284198727 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284067547 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281263979 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282110637 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284297761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280865283 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281732813 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281935219 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28220442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283942536 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281586111 seconds)
  done (took 26.834723195 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281180597 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285130468 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281339378 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281201109 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283851815 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280627341 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283489108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284479777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280288739 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284236614 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283817338 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285397023 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282128018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281312041 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284414445 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281990948 seconds)
  done (took 21.717200481 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280963708 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284238838 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284702331 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.283971876 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282256873 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283165284 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284342441 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.2820894 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.282517125 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286145659 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285451639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286047011 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284651575 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284773327 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282909248 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285435763 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283589055 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282952524 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285408107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.285508514 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283215818 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282826498 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285412051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.287267179 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.2836049 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283455132 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283337816 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283021713 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283412743 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286335509 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283703921 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.2859068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283950926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284084246 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285803396 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284081152 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286133608 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286966566 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285896335 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285801104 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287023493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285538762 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287149866 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287208865 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.28435797 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287677292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285183204 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284963964 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284557244 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285218715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287441842 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286919884 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287543696 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288746632 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287785218 seconds)
  done (took 71.867922942 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288337892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288433037 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285857492 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288423412 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288773584 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286083747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288031337 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28840968 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285658486 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289199841 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285223351 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290625033 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286831625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29017732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28747866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289809019 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286870642 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286782697 seconds)
  done (took 24.378056795 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286169088 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285840957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289527119 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287173009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286703317 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290016699 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286695024 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289535992 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288104328 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286574546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286573504 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290749464 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290267931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289747381 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288393046 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287988254 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291332346 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29065662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288055605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289514536 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290944429 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290529247 seconds)
  done (took 29.54800981 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.289104829 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288888444 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.289598177 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.308680985 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.313133767 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290604986 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.290797606 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.290127148 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.313175747 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.347843102 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.341966998 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.311894323 seconds)
  done (took 16.875285904 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288993235 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292228538 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28816472 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292200111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292121103 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289342368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288915619 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289846681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29199944 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289566901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289823015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292346794 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293210363 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290202942 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292094227 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293415755 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289372316 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289671392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290140245 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292493605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290802406 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293059704 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29041244 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290923783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29035061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289386638 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292297473 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290249597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290097213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292927878 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293299284 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29042558 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29452261 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291055316 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292768649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294795325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290716529 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293429582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293505375 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291407253 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293712076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294214661 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294978835 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292182214 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293744098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292156307 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291119182 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292165613 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291887937 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294057398 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294717563 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29205339 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295499386 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295170386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295070233 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296127377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293533597 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293061466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29483871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292727205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292741408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297103288 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293884916 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293760816 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295702523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293250909 seconds)
  done (took 86.493645559 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293600385 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293216578 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293336835 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293679721 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294281211 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292540778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293747959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292685534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293874834 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293929497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297161392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293639436 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292797557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294264739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294006684 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29355139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294208703 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293948682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293860726 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296092009 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293496158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293835515 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295929815 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293297443 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295343164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296860195 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294592379 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295075909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294598383 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295819811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294749509 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29482125 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295940747 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29483211 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295551129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294812902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295697889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294785119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295224652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299146902 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295330438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29871201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296946866 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296076273 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297535703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296715642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295788378 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29679375 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296259574 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296722154 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296400857 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296751366 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296589864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297510648 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29644865 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296863385 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296692387 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297792904 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298049926 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300237881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296945657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297938892 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303101003 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2976876 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296308967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300354367 seconds)
  done (took 86.721258183 seconds)
done (took 1790.954197085 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.461105683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415318329 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.297516896 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.313440769 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298082614 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.322795385 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.310867553 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298579876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298476948 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297814457 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298210468 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492051706 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.293006256 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299212571 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298983198 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394352303 seconds)
  done (took 26.599606159 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328777762 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305471518 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428812577 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321682739 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.327769089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.506978209 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363620681 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303820259 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492323152 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.348190095 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.305166531 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32776678 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303008468 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.304995967 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322904245 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.507023785 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571981793 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.306634764 seconds)
  done (took 28.885657136 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.805868438 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.312297192 seconds)
  done (took 5.328747117 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.3257954 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303719701 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.306329823 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303079708 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.29528614 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.294753519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302945695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.295988904 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.310554563 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442082091 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.306973539 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314943141 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326955016 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.305076113 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303303598 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347088121 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.449939354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302489418 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.30093728 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311587475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305447568 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43403067 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350527404 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303959025 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443823596 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.29766802 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.308967186 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314014755 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441899386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303937254 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304948647 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30532982 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309056173 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.264860615 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.817796761 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298519229 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35584757 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.315273997 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302905162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.508009674 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307982044 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313112256 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.297799201 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.818816859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.467307331 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434178774 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.321998878 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308050976 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307963927 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.380230244 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306948261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30852479 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.353922936 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.17389852 seconds)
  done (took 84.056396676 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.312582031 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.2989667 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482033994 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.322245349 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300046536 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.298922775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.299075907 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619527441 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.342298751 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.300759323 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.651960781 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904432241 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325315182 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.347243975 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.153409806 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362078359 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302355945 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317031097 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30167269 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.301564648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872132773 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303034876 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.321409646 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.470345677 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342327595 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850785349 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.304344611 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.300330676 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.325238672 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.301332465 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858238475 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.322997614 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.368382498 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.302888372 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.590179278 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.716948975 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678282789 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.302611562 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.312498878 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305421285 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.311117962 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837345804 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.695002656 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302196349 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.301474449 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846839721 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.302559912 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.306522044 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.306719148 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555993407 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.302557776 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.30297761 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325520362 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.302692919 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.302087282 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371634634 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377703233 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853210422 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301668565 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.302437518 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.34575216 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.303487761 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307487253 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308722608 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.304992699 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700393997 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.460894369 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.305266071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.697063402 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852684597 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321858147 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921608485 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321706113 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.307570053 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.514577496 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303349641 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304292075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.866007798 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.309791278 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.304332108 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681839453 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.305086188 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.646898231 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33556512 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305020986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892806277 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.31046849 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.311680489 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.304873406 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310007215 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.304952164 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308351912 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598600827 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.325478175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304559124 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.304129839 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.304580865 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307296616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.307054968 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.3080606 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927213279 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.331050543 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.305525059 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307623332 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306104511 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.30803827 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.308902423 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.309687047 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580748435 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320394836 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.313102582 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308740737 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.306503065 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.313955733 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.47860382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.311825611 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.663274625 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.31149932 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307260998 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.332200227 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320013611 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309729379 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305947812 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.311052428 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.23022361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.610196278 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329008318 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.309224875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307420033 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307195148 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308796838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32788343 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.342830517 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312240985 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111187271 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333487805 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.312313747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.307465167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.3164443 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309443297 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.332824994 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30941407 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608718079 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.605617036 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464246978 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.313012764 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310303055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.109430054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.359755204 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493516199 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331543939 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309074671 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562843679 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.544766823 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.312077341 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.30783407 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.309061552 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574561248 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.309420759 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623112969 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88929277 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330181559 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315046752 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.110214206 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030505959 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.310804557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.312432927 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.661335723 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.334189093 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.310402467 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.309545642 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310514225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309069381 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.311478767 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.318229239 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.309919468 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.310981238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.354652617 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504184511 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.329482923 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312073639 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855883783 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320294783 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311062479 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319599234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.314911398 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.31090606 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.374802761 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.313212476 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.352769213 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.313590614 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.320624075 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.907459241 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31161367 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.314782994 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.505878077 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049461402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.335405268 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312442799 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330578031 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.20953496 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881362328 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.369088521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.663628878 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.322039296 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353901866 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313189169 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.406483393 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881808367 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31737424 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332767669 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.007943455 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.33155529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.784062779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.313453824 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314995808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958238972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.332756294 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.315539217 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312227682 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338925896 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.61327684 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.314680096 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337510786 seconds)
  done (took 494.115712844 seconds)
done (took 640.190740238 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.313658144 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318771785 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.304155571 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318458892 seconds)
  done (took 10.481900616 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.322780923 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.321226464 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.3221802 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320596638 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322786386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321890882 seconds)
  done (took 9.159507166 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315050234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319649404 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319241897 seconds)
  done (took 8.181315455 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.547745742 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.343675867 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.69088927 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337277005 seconds)
  done (took 9.149261704 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323185245 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.324319368 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325686322 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324223523 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326703874 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.32594695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324500111 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323596466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325442556 seconds)
  done (took 13.150784012 seconds)
done (took 51.346781929 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.324307795 seconds)
    (2/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.330938957 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.33977446 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.32718191 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.357915068 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.450207835 seconds)
    (7/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.425996722 seconds)
    (8/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059807804 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.32983516 seconds)
    (10/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332820439 seconds)
    (11/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.330293173 seconds)
    (12/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.331913874 seconds)
    (13/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.970709339 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.33298415 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.471510079 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.405741725 seconds)
    (17/286) benchmarking ("sort", Float64, true)...
    done (took 2.126643916 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.418394863 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.396847271 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.335771988 seconds)
    (21/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.083156324 seconds)
    (22/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356078818 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.219717372 seconds)
    (24/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.325082421 seconds)
    (25/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.36560013 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.510756826 seconds)
    (27/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.348699129 seconds)
    (28/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.683848346 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 2.01624114 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.325931528 seconds)
    (31/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.346382451 seconds)
    (32/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.598380484 seconds)
    (33/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.305394221 seconds)
    (34/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.428039505 seconds)
    (35/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.330498536 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.330433663 seconds)
    (37/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.376550127 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.334069841 seconds)
    (39/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.458044886 seconds)
    (40/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.331902758 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.335838445 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.535453369 seconds)
    (43/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.084956955 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.446856773 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.307584573 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.467562631 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.354989796 seconds)
    (48/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.336930411 seconds)
    (49/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.457898592 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.456941293 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.346898886 seconds)
    (52/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.480615429 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35440745 seconds)
    (54/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330556822 seconds)
    (55/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.335361931 seconds)
    (56/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.403055861 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.348955761 seconds)
    (58/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.469447469 seconds)
    (59/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.424081466 seconds)
    (60/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.082481068 seconds)
    (61/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.536441735 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.096088619 seconds)
    (63/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107128208 seconds)
    (64/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.364353332 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.32168437 seconds)
    (66/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.334039589 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.333708116 seconds)
    (68/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.340202691 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.429397929 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.307781782 seconds)
    (71/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.485850172 seconds)
    (72/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.336658299 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.519727425 seconds)
    (74/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.436931645 seconds)
    (75/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.393364979 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.354797866 seconds)
    (77/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.405840825 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.547673962 seconds)
    (79/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.481026134 seconds)
    (80/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.410024285 seconds)
    (81/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.370487125 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.3748934 seconds)
    (83/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.382612888 seconds)
    (84/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.342935422 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.503195559 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.346174386 seconds)
    (87/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.361083156 seconds)
    (88/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.355817798 seconds)
    (89/286) benchmarking ("sort", Float64, false)...
    done (took 1.521126614 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 1.534669613 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.339048047 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.417753366 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.539600149 seconds)
    (94/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.519444938 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.342875459 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.430222755 seconds)
    (97/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.323253359 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.540278274 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.359325163 seconds)
    (100/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.560775654 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.350269305 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.521390096 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.472837196 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.397981998 seconds)
    (105/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.489487485 seconds)
    (106/286) benchmarking ("sort", BigInt, true)...
    done (took 2.342993985 seconds)
    (107/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.339749045 seconds)
    (108/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.425024072 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.368439547 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.406499026 seconds)
    (111/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.337229128 seconds)
    (112/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.309999569 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.482769663 seconds)
    (114/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.4874487 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.402363488 seconds)
    (116/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.34615283 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.710258007 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.519953158 seconds)
    (119/286) benchmarking ("sort", BigInt, false)...
    done (took 2.325200554 seconds)
    (120/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.383028177 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.361402571 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.333910437 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.351829617 seconds)
    (124/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.311667364 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339837505 seconds)
    (126/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.429004685 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.443953837 seconds)
    (128/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.044158827 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.367193125 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.357867753 seconds)
    (131/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.384805868 seconds)
    (132/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.328367691 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.406568524 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.407765427 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.377248357 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.339078991 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.489910707 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.443788681 seconds)
    (139/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.333733099 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34135156 seconds)
    (141/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.333895942 seconds)
    (142/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.344691051 seconds)
    (143/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.415227279 seconds)
    (144/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.092269562 seconds)
    (145/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.346443144 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356876127 seconds)
    (147/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.327681406 seconds)
    (148/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.41882975 seconds)
    (149/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.375041473 seconds)
    (150/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.342545245 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.442159679 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.391914302 seconds)
    (153/286) benchmarking ("sort", Int8, true)...
    done (took 1.844719668 seconds)
    (154/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.377453926 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.352376338 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.378760061 seconds)
    (157/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.415261879 seconds)
    (158/286) benchmarking ("sort", Float32, false)...
    done (took 1.489716003 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.569802386 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.403192361 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.327871259 seconds)
    (162/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.3326086 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343141479 seconds)
    (164/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.349982154 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.432259058 seconds)
    (166/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.364348563 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.404868666 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.225071528 seconds)
    (169/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.002480558 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.314475096 seconds)
    (171/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.353526297 seconds)
    (172/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.721752082 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.406306453 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.979968174 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.345250162 seconds)
    (176/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.153262302 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.439027702 seconds)
    (178/286) benchmarking ("sort", Int8, false)...
    done (took 1.47143578 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.443533379 seconds)
    (180/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.347830478 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.337612569 seconds)
    (182/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342699119 seconds)
    (183/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.412643165 seconds)
    (184/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.455448745 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.358770195 seconds)
    (186/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.415279033 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.980838093 seconds)
    (188/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.406349874 seconds)
    (189/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.425514884 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.382582129 seconds)
    (191/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.405271106 seconds)
    (192/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.349498807 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 1.775906715 seconds)
    (194/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346022722 seconds)
    (195/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062868906 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.342372366 seconds)
    (197/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.415732494 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.438622857 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.388425933 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.982605306 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.051029368 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.400743429 seconds)
    (203/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.525191984 seconds)
    (204/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364000859 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.371939497 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.353258578 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341611432 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.427566036 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.355214855 seconds)
    (210/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.317625086 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.339107516 seconds)
    (212/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.403485822 seconds)
    (213/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.317169416 seconds)
    (214/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.321171476 seconds)
    (215/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.332244248 seconds)
    (216/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.464146096 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.365322471 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340745001 seconds)
    (219/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.437656863 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.344669762 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.351464631 seconds)
    (222/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.487313544 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362120661 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.445361457 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.446912311 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.555623379 seconds)
    (227/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.670087268 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.415313272 seconds)
    (229/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.099162601 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.414571936 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.405969668 seconds)
    (232/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.362830402 seconds)
    (233/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.366219853 seconds)
    (234/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.39887844 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.332935635 seconds)
    (236/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.556635053 seconds)
    (237/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.35392778 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342520773 seconds)
    (239/286) benchmarking ("sort", Float32, true)...
    done (took 2.07982698 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.392010375 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.374492488 seconds)
    (242/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.23882261 seconds)
    (243/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.390522455 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348041283 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.511047054 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.37520416 seconds)
    (247/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.3458548 seconds)
    (248/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.497826428 seconds)
    (249/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996478322 seconds)
    (250/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.558141463 seconds)
    (251/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.415544193 seconds)
    (252/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.441151301 seconds)
    (253/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.498289737 seconds)
    (254/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.321984456 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.993133123 seconds)
    (256/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350841956 seconds)
    (257/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.217636341 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.365916559 seconds)
    (259/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.174649566 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.355472263 seconds)
    (261/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.365409903 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.354393939 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.978873292 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.358038655 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.420088342 seconds)
    (266/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.495063114 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.513181138 seconds)
    (268/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.340343726 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346872353 seconds)
    (270/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321418241 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.345994824 seconds)
    (272/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.349755137 seconds)
    (273/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.104362732 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.483568727 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.35431565 seconds)
    (276/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.549196127 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.483716934 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.57641455 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.420380716 seconds)
    (280/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.336174427 seconds)
    (281/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.412424535 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.40966964 seconds)
    (283/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.355010879 seconds)
    (284/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.380148442 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.363829534 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.348182277 seconds)
  done (took 472.068084062 seconds)
done (took 473.295319397 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.378806654 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392747475 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.346544795 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.379072909 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457560922 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.522968724 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356986231 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.384886843 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394610713 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396325596 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352980229 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.523001018 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347537789 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347651614 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.346037857 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390160019 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344807074 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346071134 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.363591934 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384122882 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.363618114 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353354105 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.398095327 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.522027799 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35175027 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350815666 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.352150795 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367946181 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.462098007 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.351767931 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.352146829 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.35986529 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.346770109 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352025838 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342536189 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368298322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359963194 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.359190596 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.385020454 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.461346533 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351719854 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.355967237 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350334713 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.35018539 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351163474 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.38959886 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350710748 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.406305512 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391859789 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394482941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.339887246 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.362948716 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362720348 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349889026 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.360240883 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349217596 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.406855222 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39482363 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.37256577 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396356227 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.340413239 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354681097 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.388714012 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.368748371 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358715605 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340062424 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.347851439 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391799248 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351320375 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.354878547 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.338955598 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358835291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351544505 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365401596 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383753946 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.349614984 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344513968 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.351146707 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.359475454 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.35084126 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.399139395 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392886528 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.402224466 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.352311635 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393936025 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.529064487 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.362308705 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353383324 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387791858 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37162644 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.361138248 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.364113435 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.386795074 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35271156 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.400411414 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.410145405 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362129253 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360223309 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.400909461 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363185634 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.353022489 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39913041 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.350568473 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.350051213 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352975994 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.477349316 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.353956366 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.353758449 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.386210182 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401757081 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.413555899 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.344228216 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362376361 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399448779 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363087086 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.413247842 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35433967 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345253971 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.345866159 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.479217171 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358782754 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.369951759 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398065235 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.415379386 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.355151218 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.356422833 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354326868 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395324271 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.47627746 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.367200459 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.464117734 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.353169735 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35995499 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.391412274 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400913314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388127818 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.415346385 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400929936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.371473801 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355243873 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365148866 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366447238 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.357724926 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.412104692 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351957167 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.388101614 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398030334 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398372406 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.38979719 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.477482548 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.35955582 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.34986906 seconds)
done (took 226.775983706 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.416049675 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.352269748 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462889484 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.354903412 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456385755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455451699 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.351902586 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353339784 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.352263647 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.72811614 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352014802 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35422366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.353643566 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35224854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436555729 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.356164009 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353277291 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.700784503 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.356075645 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425100092 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.355056933 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353652286 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355879057 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743605869 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.352561073 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.348983021 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.425010114 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.356404084 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701141223 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.348849497 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.352644894 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.708122213 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.447145741 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.374697873 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367663385 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362757055 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.457747402 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37577189 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435386811 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436096774 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.466805377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.394963352 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.350964797 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.355581207 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.359877392 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.357659069 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353485713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384203595 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.354406687 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.355199709 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.694586436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.367887718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355279805 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356042983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356846797 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.38630943 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356885102 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.358891342 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447080257 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.359350172 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.420775251 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.73811371 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.742180868 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.358586292 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.356580506 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.35774939 seconds)
  done (took 105.987680756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42594973 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436116487 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.478587783 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.360995489 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412518404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482765223 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360214973 seconds)
  done (took 11.219219945 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36625231 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362854315 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409970575 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411976909 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36128989 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.573418327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362837837 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.372273797 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.359415272 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.436475485 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362041652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362718329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36732421 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.357046343 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408027337 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371057106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476055139 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36288277 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361710477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514402343 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359648311 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368585095 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.434830215 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372851086 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.362275226 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368220047 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.315743276 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363248244 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359829256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.363192305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358894415 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.47051443 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364595005 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.358600907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360456331 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521109023 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361904274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361374458 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362768996 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.362023863 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362451064 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364072637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364843885 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360923214 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.364282421 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387346733 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364986654 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.363012455 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.362837683 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36463361 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436033465 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364062525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360414479 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.360458405 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.441289721 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370809546 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.364390211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.361091901 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364593931 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361692577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518284847 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412378961 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.365083442 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411685252 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365056652 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366394608 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.365652009 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365502996 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455626672 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365983366 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412040041 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.361702698 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.585624423 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390662892 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367801348 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368068083 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369222276 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365826851 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.361675777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370810541 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.363556242 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.366779619 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.371447695 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363345236 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362334638 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.547773508 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.52117118 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.36422584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378325158 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371503386 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.364064927 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.442335961 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367130345 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36336283 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417154344 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.481092221 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.44473863 seconds)
  done (took 141.055539936 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.371309892 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.374207729 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370447324 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.390270195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367568058 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367282353 seconds)
  done (took 9.509144883 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36965002 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.369406083 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367062021 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.366903148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.367150519 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366718087 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.368607046 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370381662 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.372802501 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369038917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368263784 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369343417 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368641181 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368837449 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369762258 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.368657189 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369310398 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36610042 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36879224 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368392665 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367387901 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370414511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368635914 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36938518 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.373491712 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369249669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375761075 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370283338 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.368909629 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372582432 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.392852223 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.368070567 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373036601 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.376115076 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375531371 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.372419354 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375432816 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371123825 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368302989 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369287277 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372241762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370876656 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372057748 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371167222 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373311568 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377775029 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375710922 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377725713 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.372540844 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371467387 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371997458 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372441179 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.369922215 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.371257243 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.373601069 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395501292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.377623294 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372034461 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371038176 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.372084233 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.372620963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.370761638 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373163286 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375276104 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.37013067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371040816 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374653438 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376429551 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371799712 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.372835379 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.3726582 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370999908 seconds)
  done (took 101.047224469 seconds)
done (took 370.073124481 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.387923784 seconds)
  done (took 3.660540458 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.480781871 seconds)
  done (took 3.754537878 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.750491565 seconds)
  done (took 25.029405046 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.372559292 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.410132596 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.375693455 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.372218048 seconds)
  done (took 10.804128186 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.734420259 seconds)
  done (took 4.007541596 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.371604742 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.376003298 seconds)
  done (took 6.022065222 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.739646391 seconds)
  done (took 4.013501511 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.80525914 seconds)
  done (took 4.084514355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.391641553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.380400374 seconds)
  done (took 6.05541673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.366444967 seconds)
  done (took 3.641072079 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.462828873 seconds)
  done (took 17.736903929 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.366763953 seconds)
  done (took 3.64318853 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.431209156 seconds)
  done (took 3.70535215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.401828594 seconds)
  done (took 6.67516333 seconds)
done (took 104.103907934 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.364390012 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.365422006 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.36557695 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.367533717 seconds)
  done (took 10.737783696 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.426996419 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.426905328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.430216843 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.426194226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426455825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427577857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401184839 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.400245893 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.426432929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.427195484 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426285446 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.425490598 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.428131436 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401045504 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.426414866 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.431145021 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.427373377 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.42834631 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402734014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42642851 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37652547 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428346281 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.42829955 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37631869 seconds)
  done (took 35.326760171 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893177388 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.450126695 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533171233 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428350775 seconds)
  done (took 7.58035913 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.453926498 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.45456089 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.477087118 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.510271856 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.520232667 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.468125408 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.40394852 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.397564325 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383988963 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.454168748 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.505428219 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.445308713 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.541739571 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377585886 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.584840953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.376665636 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.377764423 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.455807711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.50743715 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.53045049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.377381927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.455128161 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.457847911 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.446559343 seconds)
  done (took 36.240425256 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.384007305 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390423005 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.376775967 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.391266507 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375956538 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37727236 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378416542 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38237834 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.376073394 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.37605077 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.377419649 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390903399 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379973764 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376677043 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.384784624 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.378714037 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384391464 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380148759 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377939132 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383493868 seconds)
  done (took 28.901382739 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.371126089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.369464122 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.722879017 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628781339 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.372914697 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.370640238 seconds)
  done (took 14.114637583 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459429802 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.631553651 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377401696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.790801321 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.871277392 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379701669 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.379802531 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.654921327 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.029307657 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.022314376 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.444441531 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457861737 seconds)
  done (took 20.777530662 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.378092503 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.376776525 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.393395453 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393106808 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441000866 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.383052957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386595198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.373285934 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.446713423 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.446730318 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382781316 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444862964 seconds)
  done (took 22.127032708 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469884695 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373389488 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374099894 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45776477 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37466715 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222404296 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43931082 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128539641 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398286113 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647126666 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381856682 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469674737 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631208318 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390252295 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373768916 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368859297 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607959142 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923494007 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375786663 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372696429 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408414011 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383011425 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373538206 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617856087 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374912771 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374324422 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.77740903 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372235351 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698703684 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39097206 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385867783 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374089696 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649420869 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082889742 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494415507 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616294934 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384151912 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375627354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.376204389 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.375562808 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376809983 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376251853 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386936386 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375876509 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374740189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383950042 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141557686 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403713453 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.372939552 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377389414 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67743921 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475918506 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379540565 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37511284 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408786224 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37647847 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380739739 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478972765 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959318999 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376907805 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385963094 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.37751165 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385161872 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379325366 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05763984 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.383067706 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.381128164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380923757 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378079342 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377508336 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395918512 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377109399 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402724951 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377324154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181400607 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391609075 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378988142 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991710389 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396471573 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378884588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611537774 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378631623 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376618711 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.378006357 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378648846 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165789452 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387516632 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363348682 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399237122 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138289573 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644131627 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397876064 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411190523 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603758436 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.364040428 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380363484 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.387260272 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38076029 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402351134 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142079087 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400601538 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383342696 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639800704 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591486354 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387162599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364042781 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908821927 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416858867 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.394226681 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386986635 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623291867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.040394589 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398136374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380920873 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397097344 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380599415 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20444997 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397766789 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480594055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392591694 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673975105 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.251830156 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38310674 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450611313 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385170663 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380219236 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389026948 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383171753 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380705453 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.615006057 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408821062 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.396651955 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.382262115 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382385218 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.378970311 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38022737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.383388702 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608024694 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396284221 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662344255 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382592809 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383718608 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383510474 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606525041 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387578044 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.722177525 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647824694 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385470085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396782516 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399906844 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402092586 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486872706 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40576557 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.389905678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642718633 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387292011 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.388733394 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387743684 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385383671 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389471788 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389271245 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393650827 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047047025 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356267956 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392648357 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278918814 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.398465834 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452255159 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390738251 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628517451 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382550448 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395483782 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390585438 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.383039435 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609857648 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39556958 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.387291244 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462260001 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.91197647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069398819 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399101584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.385898638 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.383040141 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.381756894 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386095628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384503844 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386388593 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628079091 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4002137 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401143259 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054148337 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389071006 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389320592 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391611817 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399444628 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391186212 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386002101 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.383923072 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386388793 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388040787 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.402591068 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531037949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401311909 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385489633 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.90462584 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39297698 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387373284 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387127667 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42158573 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392107276 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256942179 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65169393 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390685734 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691164363 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389356602 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.404252947 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.385935279 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402091692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397446676 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.395563516 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39642343 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399848977 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392764218 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390021657 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967133951 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209845365 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998382686 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396807218 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.39979259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394038744 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160030771 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409579714 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388698997 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652188818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156481996 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410805329 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9190548 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42272814 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258077159 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693771805 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625461195 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391950775 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.406617312 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696469589 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603508372 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426177367 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39644445 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389061742 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.374397669 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003080723 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421704652 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471028675 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158313024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429550796 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391264469 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.396120039 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391982041 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847599955 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411718132 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390735486 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402425104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390848473 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266894659 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3977161 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391584817 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077396555 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396957017 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.922222308 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413334195 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637617391 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403636819 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396669949 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.398707048 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.388059049 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.666658912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695874176 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393165657 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394082982 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003865359 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266313847 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398326452 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392482915 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224260305 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409663791 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721805367 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.404399322 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393329005 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394181114 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392897082 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392995627 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.389821894 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397510252 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363575183 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95001577 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.397482239 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396304335 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408072801 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398340449 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651987866 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.408260772 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060030673 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625945609 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395957742 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435881317 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.398237675 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393662729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.381598291 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394935363 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394148882 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398295889 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620373979 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405234933 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.379476766 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457744004 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607496859 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394652264 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39402283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667722578 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393482594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.408894322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21767862 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429830997 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396081159 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397495062 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399854492 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434451991 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464842221 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643253416 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407848748 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409010781 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852470777 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418445139 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397982856 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.411098876 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49294871 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403831654 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399116484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170364006 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068742212 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221764107 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067534262 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70387476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399288921 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405504701 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396720326 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560193511 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396892729 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66975069 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398147661 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.395556251 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439983987 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397519759 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408685275 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611785688 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673553125 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399306974 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413756534 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398185002 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.398221546 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409968606 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610851167 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956211847 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021112717 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400616407 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406926764 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172165172 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694390731 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398722322 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398846414 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399545497 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.415234276 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399379011 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405190599 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403158912 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543841467 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70411258 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114034144 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432932568 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.427565262 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172602651 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413523156 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657208166 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39639536 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671573243 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073367946 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199495359 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66840211 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471020197 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648476814 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.399246844 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562711875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.401352513 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40084033 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401062492 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40072794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.398038076 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41136145 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07602074 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669831734 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405547103 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.402858016 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432555611 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.412311396 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625674336 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202570832 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628343384 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413106155 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407579206 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402603928 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075343986 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708230983 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402362349 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40600459 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673971596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402695931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42567893 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.920320505 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.40020511 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028708627 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.379287898 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424834766 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410969912 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205678489 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077993308 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.412147411 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963842668 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405919291 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42035964 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679044298 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410115427 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407097512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683587235 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408149436 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416199579 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65385388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.07349163 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283069172 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.42078588 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420922094 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.406464525 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403769186 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495818643 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404334822 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406112353 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.878852572 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426121917 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404699852 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415983242 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.411735609 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419899491 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.402747542 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404661777 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411100022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.391496602 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.389600367 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422957085 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505566866 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025226533 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427811594 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.075622296 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734965152 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663691907 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420644147 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.38981231 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409266741 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406323684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405741542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405208321 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427405256 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027174693 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.407022419 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.441369612 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410718629 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.407144749 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619160687 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407028898 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654998663 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417031475 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425044677 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.391611121 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407202894 seconds)
  done (took 989.624789473 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46039186 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440361951 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.423031624 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.426736183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41908583 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.531818058 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.489731822 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437839681 seconds)
  done (took 20.940016936 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.42378551 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.416035933 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.41906978 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.416015842 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.40691355 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.932376021 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.436404036 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416704579 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.423084003 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.420506367 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.418922263 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.393268379 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418132715 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.412106207 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.395164497 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.422323829 seconds)
  done (took 33.487478636 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.671277437 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.684579911 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.922572811 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.499651337 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.41464169 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.40919576 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.805170602 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.436038218 seconds)
  done (took 28.15656303 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419839736 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419179984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419993753 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418996739 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.420728681 seconds)
  done (took 8.411145293 seconds)
done (took 1257.699130317 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414544696 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.417276195 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.413803326 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.416756807 seconds)
  done (took 6.974217301 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.395733883 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.396560678 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.396601204 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.416292813 seconds)
  done (took 9.916972727 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.229991423 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.137310909 seconds)
  done (took 5.680586954 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.927464464 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.924104548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.922468976 seconds)
  done (took 7.090323494 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.719811941 seconds)
  done (took 3.036849346 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.344437611 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.32056601 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.110685919 seconds)
  done (took 8.09337649 seconds)
done (took 42.102740589 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417670824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.671915518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.572818341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.41737135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.576816961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.569239405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.216336753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412893508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.44622908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423025534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417104862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.576878898 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.19719464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.667046821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.196212772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.667268176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.659863659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421064395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41469106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425741012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.21848243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427510149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42721369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.430436736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.578054035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561208728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414147031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.670025478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413707033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414621949 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.56331736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.425541769 seconds)
  done (took 84.229305347 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41403572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423451564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.415604434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435022114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.448690917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416407432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.446051494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414824833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415032242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415041417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.433377845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420458668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.432212595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414530524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.435432841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.437591397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.446446553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420517148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415085777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434782973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.432308567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416524963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414929413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415928362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.420315961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415387075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.436427992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.438660947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417101678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417620601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.43794289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.43563006 seconds)
  done (took 78.95272179 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41748083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417734433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.453479482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.43506607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.427308889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433766147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419678176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417774687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421852852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419807629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.434138357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432343883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416867848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417532807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.417736162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.433631653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418167455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419334844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41829589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41910208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422227441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422312146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.420322436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423042216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.41958934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.423086473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.436392295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418529186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.441103437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419042296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.443617066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431698734 seconds)
  done (took 78.932877483 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.69899699 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426917453 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428369092 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.420871624 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.427735102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427216408 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.420511818 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.70450509 seconds)
  done (took 15.278216373 seconds)
done (took 258.707655519 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.418373733 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.424357794 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639272122 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.44849369 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.424478619 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.450056449 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.448403436 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.668325587 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.440368435 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.670959862 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.458557415 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445988948 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.438550622 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445902279 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.728393796 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.582967782 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.404426821 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.421641581 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.801922649 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.441888865 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.727837634 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.4214308 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.742391254 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.420743863 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.422589075 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.423158688 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.431950712 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.396288818 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.467411271 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.804403067 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.43214357 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.409128351 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.51890049 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.540236416 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.655509212 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.594914921 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.431486043 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.516891661 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.660203835 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.438859259 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.421738055 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.255006307 seconds)
  done (took 85.660998122 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.430372382 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.549880711 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.429784162 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.430185333 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.429111064 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.547153934 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.527246627 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.431126558 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.432886551 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.430173873 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.429448875 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.431071119 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.431035038 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.431350266 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.431574431 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.432409926 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.430747158 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.432523767 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.431324721 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.474254386 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.55266234 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.457118859 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.425261255 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.430388388 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.538266742 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.568630854 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.430272953 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.424205952 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.475276059 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.431507541 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.434004794 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.475114899 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.433091087 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.434362404 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.547774777 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.532815205 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.455785956 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.428486176 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.544354032 seconds)
  done (took 58.340308666 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434304254 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.696869134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.903857774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.440012059 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433317659 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.437364932 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.522923635 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43430432 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437406015 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.438170436 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.59742616 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.437721966 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47187978 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.931946488 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437400815 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43456102 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435935789 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.434930402 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.706362643 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443012388 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.547320693 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437895267 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524992705 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443692267 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46035163 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436576996 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.439486899 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.034731057 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.438313103 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.601831202 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.381537329 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525899139 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.000743859 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.919948815 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.440533716 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437736809 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.436575065 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.609953949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4387894 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437089094 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.525103167 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.437615132 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.947026228 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.119145517 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.459300541 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436240631 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.046879473 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.604200967 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.721433503 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445345019 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940199398 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440515816 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.439762022 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439980528 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.722635221 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439506268 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.438809922 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.084266334 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.461601151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.52748636 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438819561 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.439932353 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.707627705 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439035804 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.701836402 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.440716049 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.445389609 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.460767973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.913581429 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441615301 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.144273112 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.459487888 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437837952 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.60375669 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.70265213 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.081381659 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.46138494 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.711067214 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009449049 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524737579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.442694128 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.022725441 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.531306046 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442630513 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.440946132 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.441269634 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.439636292 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.491922765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.525969677 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.073952538 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.132749596 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.104022278 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.551505116 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449493237 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441700813 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.086085536 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.461674381 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.441133281 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.910533709 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.14503372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460485973 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447662211 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.159547507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.463509945 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.533144368 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.44669788 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.923291104 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.443518461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.493658189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442526907 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44776555 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468672249 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.532426786 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.445725321 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442183799 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.133838559 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.631992444 seconds)
  done (took 190.572494201 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.436011925 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.432847053 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.435157191 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.434536739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.434003821 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44466614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.435127875 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.43421439 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440787947 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.434881361 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.434914549 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.437379626 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.439901168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.439005578 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44730652 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4431776 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.436228604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.436880518 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.437112301 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.436907691 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.436356549 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.43902259 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.437914197 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.438728609 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.438235092 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.436143734 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.438816932 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.438911399 seconds)
  done (took 65.59324982 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.443757591 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.094875511 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444604143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.595766535 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.469552233 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44180426 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.592817763 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.508742209 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.44629807 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443062482 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443248579 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.793024162 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.446771715 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.039745567 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.669469213 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.595358981 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.037856881 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.467025479 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440938769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.443171628 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.597459098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.459011002 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.795421974 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098024667 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.44729053 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.098333421 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43562066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44624737 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.444429602 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101459443 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.444458141 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.796282552 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532711909 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.513777253 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.102026414 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.041380961 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.060299194 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.61523858 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.44465317 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44390683 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.445170924 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.435907858 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.103417637 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447161488 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446317494 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.096381359 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.467326649 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.447030827 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452795193 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.444576016 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514974652 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.515603351 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.801167215 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.181451859 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.533982582 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459674991 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.597429298 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.82980195 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.448945025 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.042078997 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.456583948 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.106196155 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471010929 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.436252578 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.448102848 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.453908939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.619686552 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.59870103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044330941 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.468195981 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.041354728 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.639412792 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446277974 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446762 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449972697 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.107147336 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.045479229 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.639379633 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.603377887 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.675603853 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.439674903 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447706179 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.43736444 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.537395633 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.448709604 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.109921949 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.065495193 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.470216571 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450706048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451186969 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.449306164 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.654393445 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.12884872 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.536921721 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042125362 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822591628 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.804025961 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451356398 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.516685758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.468649481 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.874671939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.452252672 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516503783 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.896711541 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.805721227 seconds)
  done (took 174.306058183 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.721775865 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.464568959 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575053745 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616384823 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.113014683 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.075280553 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.44833195 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.581351245 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569839498 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.733061408 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.459287554 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540068459 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69182211 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.534669909 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.212020535 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527589423 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55201733 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.606576827 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.60367306 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445664507 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.159729743 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.767172643 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.651717688 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.469652828 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56050765 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.328933286 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.068176118 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.028239376 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.634920363 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.443224569 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.010445805 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.44553926 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.44499984 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.206005754 seconds)
  done (took 67.636882779 seconds)
done (took 643.431185262 seconds)
SAVING RESULT...
DONE!
